<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GDA</name>
    </assembly>
    <members>
        <member name="F:GDA.Analysis.ForeignKeyList._foreignKeys">
            <summary>
            Lista onde serão armazenados os campos.
            </summary>
        </member>
        <member name="F:GDA.Analysis.ForeignKeyList._constraints">
            <summary>
            Dicionário para facilitar a recuperação dos dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyList.Item(System.Int32)">
            <summary>
            Recupera a instancia na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyList.Item(System.String)">
            <summary>
            Recupera a instancia com base no nome da constraint informada.
            </summary>
            <param name="constraintName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Analysis.ForeignKeyList.FindForeignKeyTable(System.String)">
            <summary>
            Recupera as chaves estrangeiras com base
            no nome da tabela de destino.
            </summary>
            <param name="name">Nome da tabela.</param>
            <returns>Referencias encontradas.</returns>
        </member>
        <member name="M:GDA.Analysis.ForeignKeyList.FindPrimaryKeyTable(System.String)">
            <summary>
            Recupera as chaves estrangeiras com base
            no nome da tabela de origem.
            </summary>
            <param name="name">Nome da tabel.</param>
            <returns>Referencias encontradas.</returns>
        </member>
        <member name="T:GDA.Analysis.ForeignKeyMap">
            <summary>
            Armazena as informações de uma chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.ConstraintName">
            <summary>
            Nome da constraint da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.ConstraintSchema">
            <summary>
            Nome do esquema da constraint da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.ForeignKeyTable">
            <summary>
            Nome da tabela da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.ForeignKeyTableSchema">
            <summary>
            Esquema da tabela da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.ForeignKeyColumn">
            <summary>
            Nome da coluna da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.PrimaryKeyTable">
            <summary>
            Nome da tabela onde está a chave primaria.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.PrimaryKeyTableSchema">
            <summary>
            Esquema da tabela da chave primária.
            </summary>
        </member>
        <member name="P:GDA.Analysis.ForeignKeyMap.PrimaryKeyColumn">
            <summary>
            Nome da coluna da chave primaria.
            </summary>
        </member>
        <member name="M:GDA.Analysis.ForeignKeyMap.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.Analysis.Generator">
            <summary>
            Classe responsável pela geração do código da classe com base no esquema
            das tabelas do banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.NamespaceName">
            <summary>
            Namespace usado na geracao do codigo.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.CodeLanguage">
            <summary>
            Linguagem que sera usada para gerar o codigo.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.PropertyCustomAttributes">
            <summary>
            Lista dos atributos que sao adicionados a todas as propriedade geradas.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.ClassCustomAttributes">
            <summary>
            Lista dos atributos que sao adicionados as classes geradas.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.Imports">
            <summary>
            Namespaces que sao importados no codigo.
            </summary>
        </member>
        <member name="P:GDA.Analysis.Generator.UsingWCFPattern">
            <summary>
            Define se sera usada o padrao do WCF para gerar as classes.
            </summary>
        </member>
        <member name="M:GDA.Analysis.Generator.StandartName(System.String,System.Boolean)">
            <summary>
            Padroniza o nome informado.
            </summary>
            <param name="name"></param>
            <param name="keepInvalidsChars">Identifica se é para pular os caracteres inválidos.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Analysis.Generator.Generate(GDA.Analysis.TableMap,System.String,System.String)">
            <summary>
            Gera o código do mapeamento.
            </summary>
            <param name="map">Dados do mapeamento.</param>
            <param name="baseTypeName">Tipo base da model a ser criada.</param>
            <param name="filename">Caminho onde será salvo o código gerado</param>
        </member>
        <member name="M:GDA.Analysis.Generator.Generate(GDA.Analysis.TableMap,System.String,System.IO.Stream)">
            <summary>
            Gera o código do mapeamento.
            </summary>
            <param name="map">Dados do mapeamento.</param>
            <param name="baseTypeName">Tipo base da model a ser criada.</param>
            <param name="outStream">Sream onde sera salvo o codigo gerado.</param>
        </member>
        <member name="T:GDA.Analysis.FieldList">
            <summary>
            Representa a alista para armazenar vários <see cref="T:GDA.Analysis.FieldMap"/>.
            Ela contém métodos para manipular e recupera as colunas contidas.
            </summary>
        </member>
        <member name="F:GDA.Analysis.FieldList.fields">
            <summary>
            Lista onde serão armazenados os campos.
            </summary>
        </member>
        <member name="F:GDA.Analysis.FieldList.columns">
            <summary>
            Dicionário para facilitar a recuperação dos dados das colunas.
            </summary>
        </member>
        <member name="M:GDA.Analysis.FieldList.FindColumn(System.String)">
            <summary>
            Recupera as informações da coluna com base no nome informado.
            </summary>
            <param name="name">Nome da coluna.</param>
            <returns>FieldMap correspondente.</returns>
        </member>
        <member name="M:GDA.Analysis.FieldList.FindColumnById(System.Int32)">
            <summary>
            Recupera os dados da coluna com base no seu identificador.
            </summary>
            <param name="columnId"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Analysis.FieldList.PrimaryKeyCount">
            <summary>
            Recupera o número de campos chave primária da lista.
            </summary>
        </member>
        <member name="T:GDA.Analysis.FieldMap">
            <summary>
            Reprensenta as informação de um campo mapeado do banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.Table">
            <summary>
            Tabela que a coluna pertence.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.MemberType">
            <summary>
            Tipo que a coluna representa.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.Comment">
            <summary>
            Comentário relacionado com a coluna.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ColumnName">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.IsReservedWord">
            <summary>
            Identifica se o nome do coluna é um palavra reservada, e necessita
            de quote para representá-la.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.IsNullable">
            <summary>
            Identifica se a coluna aceita valores nulos.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.IsAutoGenerated">
            <summary>
            Identifica se o valor da coluna é gerado quando é feita
            a inserção no banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.IsPrimaryKey">
            <summary>
            Identifica se a coluna é um chave primária.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ForeignKeyConstraintName">
            <summary>
            Nome da constraint da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ForeignKeyTableName">
            <summary>
            Caso a coluna seja uma chave estrangeira, armazena
            o nome da tabela dessa chave.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ForeignKeyTableSchema">
            <summary>
            Caso a coluna seja uma chave estrangeira, armazena
            o esquema da tabela da chave estrangeira.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ForeignKeyColumnName">
            <summary>
            Caso a coluna seja um chave estrangeira, armazena o 
            nome da coluna da tabela dessa chave.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.DbTypeName">
            <summary>
            Nome do tipo no banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.DbType">
            <summary>
            Tipo da coluna no banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.Size">
            <summary>
            Tamanho da coluna.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.IsReadOnly">
            <summary>
            Identifica se a coluna é somente leitura.
            </summary>
        </member>
        <member name="P:GDA.Analysis.FieldMap.ColumnId">
            <summary>
            Identificador da coluna que é usado internamente no banco de dados.
            </summary>
        </member>
        <member name="M:GDA.Analysis.FieldMap.#ctor(GDA.Analysis.TableMap,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="table">Tabela que a coluna está contida.</param>
            <param name="columnName"></param>
        </member>
        <member name="M:GDA.Analysis.FieldMap.SetDbType(System.Int64)">
            <summary>
            Define o tipo da coluna no banco de dados.
            </summary>
            <param name="dbType"></param>
        </member>
        <member name="M:GDA.Analysis.FieldMap.SetDbType(System.Data.DbType)">
            <summary>
            Define o tipo da coluna no banco de dados.
            </summary>
            <param name="dbType"></param>
        </member>
        <member name="M:GDA.Analysis.FieldMap.SetDbType(System.String,System.Boolean)">
            <summary>
            Define o tipo da coluna no banco de dados.
            </summary>
            <param name="dbType">Descrição do tipo.</param>
            <param name="isUnsigned">Identifica se o campo é unsigned.</param>
        </member>
        <member name="T:GDA.Analysis.DatabaseAnalyzer">
            <summary>
            Representa a interface para implementar o analisador do banco de dados.
            </summary>
        </member>
        <member name="F:GDA.Analysis.DatabaseAnalyzer.done">
            <summary>
            Identifica se todos os metadados das tabelas já foram carregados.
            </summary>
        </member>
        <member name="F:GDA.Analysis.DatabaseAnalyzer._foreignKeys">
            <summary>
            Lista das chaves estrangeiras encontradas.
            </summary>
        </member>
        <member name="F:GDA.Analysis.DatabaseAnalyzer.tablesMaps">
            <summary>
            Hashtable dos mapeamento carregados das tabelas do banco de dados.
            </summary>
        </member>
        <member name="F:GDA.Analysis.DatabaseAnalyzer.tablesNames">
            <summary>
            Lista dos nomes das tabelas.
            </summary>
        </member>
        <member name="F:GDA.Analysis.DatabaseAnalyzer.providerConfiguration">
            <summary>
            Provider de configuração usado na analise.
            </summary>
        </member>
        <member name="P:GDA.Analysis.DatabaseAnalyzer.ProviderConfiguration">
            <summary>
            Provider relacionado.
            </summary>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="providerConfiguration">Provider de configuração usado na analise.</param>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.Analyze(System.String)">
            <summary>
            Método responsável por fazer uma análise dadas tabelas do banco de dados.
            </summary>
            <param name="tableName">Nome da tabela que será analisa ou null para analisar todas.</param>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.Analyze(System.String,System.String)">
            <summary>
            Método responsável por fazer uma análise dadas tabelas do banco de dados.
            </summary>
            <param name="tableName">Nome da tabela que será analisa ou null para analisar todas.</param>
            <param name="tableSchema">Esquema da tabela.</param>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.GetTableMap(System.String)">
            <summary>
            Recupera o dados do metadado da tabela especificada.
            </summary>
            <param name="tableName">Nome da tabela.</param>
            <returns>Dados ou null caso o metadado não tenha sido carregado ou não exista.</returns>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.GetTableMap(System.String,System.String)">
            <summary>
            Recupera o dados do metadado da tabela especificada.
            </summary>
            <param name="tableName">Nome da tabela.</param>
            <param name="tableSchema">Esquema da tabela.</param>
            <returns>Dados ou null caso o metadado não tenha sido carregado ou não exista.</returns>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.GetTablesName">
            <summary>
            Recupera os nomes das tabelas existentes no banco de dados.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GDA.Analysis.DatabaseAnalyzer.TablesMaps">
            <summary>
            Hastable contendo as instancias dos metadados obtidos das tabelas
            do banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.DatabaseAnalyzer.ForeignKeys">
            <summary>
            Lista das chaves estrangeiras encontradas.
            </summary>
        </member>
        <member name="P:GDA.Analysis.DatabaseAnalyzer.Tables">
            <summary>
            Tabelas analisadas.
            </summary>
        </member>
        <member name="M:GDA.Analysis.DatabaseAnalyzer.GenerateCode(System.String,System.String,System.String,System.String)">
            <summary>
            Gera o código das classes das tabelas do analisador.
            </summary>
            <param name="language">Linguagem que o código será gerado.</param>
            <param name="namespaceName">Nome do namespace onde as classes serão inseridas.</param>
            <param name="baseTypeName">Nome do tipo base que as classes irão herdar.</param>
            <param name="directoryName">Diretório onde serão salvo os arquivos com os códigos gerados.</param>
        </member>
        <member name="T:GDA.Analysis.TableMap">
            <summary>
            Representa os dados de uma tabela mapeada do banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.ProviderConfiguration">
            <summary>
            Instancia do provedor de configuração.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.Fields">
            <summary>
            Lista de campos da tabela.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.TableName">
            <summary>
            Nome da tabela sem quote.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.TableSchema">
            <summary>
            Esquema onde a tabela está inserida.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.QuotedTableName">
            <summary>
            Caso o nome da tabela seja uma palavra reservada, 
            armazena o quote para ser usado.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.IdentityMap">
            <summary>
            Coluna identidade da tabela.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.TableId">
            <summary>
            Identificador da tabela.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.IsView">
            <summary>
            Identifica se a tabela é um view.
            </summary>
        </member>
        <member name="P:GDA.Analysis.TableMap.Comment">
            <summary>
            Comentario relacionado com a tabela.
            </summary>
        </member>
        <member name="M:GDA.Analysis.TableMap.#ctor(GDA.Interfaces.IProviderConfiguration,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="tableName">Nome da tabela.</param>
        </member>
        <member name="M:GDA.Analysis.TableMap.#ctor(GDA.Interfaces.IProviderConfiguration,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="tableName">Nome da tabela.</param>
            <param name="providerConfiguration"></param>
            <param name="tableSchema">Esquema onde a tabela está inserida.</param>
        </member>
        <member name="M:GDA.Analysis.TableMap.GetFieldMapFromColumn(System.String)">
            <summary>
            Recupera instancia do <see cref="T:GDA.Analysis.FieldMap"/> com base no nome da coluna.
            </summary>
            <param name="columnName">Nome da coluna</param>
            <returns>FieldMap relacionado com a coluna.</returns>
        </member>
        <member name="F:GDA.PersistenceForeignKeyAttribute._typeOfClassRelated">
            <summary>
            Tipo da classe relacionada.
            </summary>
        </member>
        <member name="F:GDA.PersistenceForeignKeyAttribute._propertyName">
            <summary>
            Nome da propriedade da classe do tipo especificado aonde o relacionamento será feito.
            </summary>
        </member>
        <member name="F:GDA.PersistenceForeignKeyAttribute._groupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignKeyAttribute.TypeOfClassRelated">
            <summary>
            Tipo da classe que representa a tabela relacionada.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignKeyAttribute.PropertyName">
            <summary>
            Nome da propriedade da classe do tipo especificado aonde o relacionamento será feito.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignKeyAttribute.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="M:GDA.PersistenceForeignKeyAttribute.#ctor(System.Type,System.String,System.Int32)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute com o número do grupo de relacionamento informado.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
            <param name="numberGroupOfRelationship">Número do grupo de relacionamento.</param>
        </member>
        <member name="M:GDA.PersistenceForeignKeyAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute com o número do grupo de relacionamento informado.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
        </member>
        <member name="M:GDA.PersistenceForeignKeyAttribute.#ctor(System.Type,System.String)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
        </member>
        <member name="F:GDA.PersistenceForeignMemberAttribute._typeOfClassRelated">
            <summary>
            Tipo da classe relacionada.
            </summary>
        </member>
        <member name="F:GDA.PersistenceForeignMemberAttribute._propertyName">
            <summary>
            Nome da propriedade da classe do tipo especificado aonde o relacionamento será feito.
            </summary>
        </member>
        <member name="F:GDA.PersistenceForeignMemberAttribute._groupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignMemberAttribute.TypeOfClassRelated">
            <summary>
            Tipo da classe que representa a tabela relacionada.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignMemberAttribute.PropertyName">
            <summary>
            Nome da propriedade da classe do tipo especificado aonde o relacionamento será feito.
            </summary>
        </member>
        <member name="P:GDA.PersistenceForeignMemberAttribute.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="M:GDA.PersistenceForeignMemberAttribute.#ctor(System.Type,System.String,System.Int32)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute com o número do grupo de relacionamento informado.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
            <param name="numberGroupOfRelationship">Número do grupo de relacionamento.</param>
        </member>
        <member name="M:GDA.PersistenceForeignMemberAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute com o número do grupo de relacionamento informado.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
        </member>
        <member name="M:GDA.PersistenceForeignMemberAttribute.#ctor(System.Type,System.String)">
            <summary>
            Constrói um instancia de PersistenceForeignKeyAttribute.
            </summary>
            <param name="typeOfClassRelated">Classe na qual será feito o relacionamento.</param>
            <param name="propertyName">Nome da propriedade que será relacionada.</param>
        </member>
        <member name="T:GDA.PersistenceProviderAttribute">
            <summary>
            Atribute usado para definir qual provider a classe utilizará
            para acessar os dados.
            </summary>
        </member>
        <member name="P:GDA.PersistenceProviderAttribute.ProviderConfigurationName">
            <summary>
            Nome do provider de configuração que a classe irá utilizar.
            </summary>
        </member>
        <member name="P:GDA.PersistenceProviderAttribute.ProviderName">
            <summary>
            Nome do provider que a classe irá usar
            para comunicação com o banco de dados.
            </summary>
        </member>
        <member name="P:GDA.PersistenceProviderAttribute.ConnectionString">
            <summary>
            ConnectionString usado para conectar com o banco de dados.
            </summary>
        </member>
        <member name="M:GDA.PersistenceProviderAttribute.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.PersistenceProviderAttribute.#ctor(System.String)">
            <summary>
            Instancia um novo <see cref="T:GDA.PersistenceProviderAttribute"/>
            já com o nome do ProviderConfiguration definido.
            </summary>
            <param name="providerConfigurationName"> Nome do provider de configuração que a classe irá utilizar.</param>
        </member>
        <member name="T:GDA.Caching.MappingManager.LoadPersistencePropertyAttributesResult">
            <summary>
            Armazena o resutlado das propriedades de persistencia.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager.LoadPersistencePropertyAttributesResult.Mappers">
            <summary>
            Mapeamento das propriedades.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager.LoadPersistencePropertyAttributesResult.ForeignKeyMappers">
            <summary>
            Mapeamento das chaves estrangeiras
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager.LoadPersistencePropertyAttributesResult.ForeignMembers">
            <summary>
            Mapeamento das membros estrangeiros.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager.MembersDAO">
            <summary>
            Dicionário que armazena as DAO relacionadas as models
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager.ModelsNamespaceLoaded">
            <summary>
            Dicionário que armazena os namespaces já carregados, juntamento com as tipos das models já carregadas.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager._accessModelsMapper">
            <summary>
            Matriz que identifica a quantidade de acessos ao mapeamento. 
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager._typeNamesModelsMapper">
            <summary>
            Armazena o nomes da models mapeados na ordem correspondente a matriz accessModelsMapper.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager._listsModelsMapper">
            <summary>
            Armazena as lista de mapeamentos das models
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager._listForeignKeyMapper">
            <summary>
            Armazena as listas de foreignkeys mapeadas.
            </summary>
        </member>
        <member name="F:GDA.Caching.MappingManager._listForeignMemberMapper">
            <summary>
            Armazena as lista de foreign members mapeados.
            </summary>
        </member>
        <member name="M:GDA.Caching.MappingManager.#cctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetPersistenceProviderAttribute(System.Type)">
            <summary>
            Captura os dados do provedor do tipo.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetPersistenceClassAttribute(System.Type)">
            <summary>
            Captura o <see cref="T:GDA.PersistenceClassAttribute"/> contido o type.
            </summary>
            <param name="type"></param>
            <returns>null se não for encontrado o attributo.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetPersistenceProperty(System.Reflection.PropertyInfo)">
            <summary>
            Captura a PersistencePropertyAttribute relacionado com a propriedade.
            </summary>
            <param name="pInfo">Propriedade.</param>
            <returns>O atributo ou null se não for localizado.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetPropertyMapper(System.Type,System.String)">
            <summary>
            Recupera as informações do mapeamento da propriedade da tipo especificado.
            </summary>
            <param name="typeModel"></param>
            <param name="propertyName">Nome da propriedade onde o mapeamento está contido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.LoadPersistencePropertyAttributes(System.Type)">
            <summary>
            Carrega a lisa de propriedades mapeadas para o tipo passado.
            </summary>
            <param name="type"></param>
            <returns>Posição do mapeamento no vetor</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.LoadPersistencePropertyAttributes(System.Type,System.Collections.Generic.List{GDA.Mapper},System.Collections.Generic.List{GDA.GroupOfRelationshipInfo},System.Collections.Generic.List{GDA.ForeignMemberMapper})">
            <summary>
            Carrega a lista das propriedades mapeadas.
            </summary>
            <param name="type"></param>
            <param name="mapping">Lista para armazenar a propriedades mapeadas.</param>
            <param name="fkMapping"></param>
            <param name="fmMapping">Mapeamento dos membros estrangeiros.</param>
        </member>
        <member name="M:GDA.Caching.MappingManager.LoadModel(System.String)">
            <summary>
            Carrega o tipo relacionado ao nome do tipo da model passado.
            </summary>
            <param name="modelTypeName">Nome do tipo da model</param>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetTableName(System.Type)">
            <summary>
            Recupera do tipo o nome da tabela que ele representa.
            </summary>
            <param name="type">Tipo a ser usado para localizar o nome</param>
            <returns>Nome da tabela relacionada</returns>
            <exception cref="T:GDA.GDATableNameRepresentNotExistsException"></exception>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers``1">
            <summary>
            Recupera os mapeamentos da model.
            </summary>
            <typeparam name="Model">Tipo da model onde o mepeamento está contido.</typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetForeignMemberMapper(System.Type)">
            <summary>
            Recupera os mapeamentos de membros estrangeiros da model.
            </summary>
            <param name="modelType">Tipo da model onde o mepeamento está contido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers(System.Type)">
            <summary>
            Recupera os mapeamentos da model.
            </summary>
            <param name="modelType">Tipo da model onde o mepeamento está contido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers``1(GDA.PersistenceParameterType[],GDA.DirectionParameter[])">
            <summary>
            Captura os attributes PersistenceProperty das propriedades da classe refenciada.
            </summary>
            <typeparam name="Model">Tipo do modelo de onde será recuperado o mapeamento.</typeparam>
            <param name="typesParam">Tipos de parametros a serem filtrados. null para não se aplicar nenhum filtro.</param>
            <param name="directions">Sentido dos atributos a serem filtrados. Default Input, InputOutput</param>
            <returns>Lista com todas os atributos, obedecendo o filtro.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers``1(GDA.PersistenceParameterType[],GDA.DirectionParameter[],System.Boolean)">
            <summary>
            Captura os attributes PersistenceProperty das propriedades da classe refenciada.
            </summary>
            <typeparam name="Model">Tipo do modelo de onde será recuperado o mapeamento.</typeparam>
            <param name="typesParam">Tipos de parametros a serem filtrados. null para não se aplicar nenhum filtro.</param>
            <param name="directions">Sentido dos atributos a serem filtrados. Default Input, InputOutput</param>
            <param name="returnFirstFound">True para retorna o primeiro valor encontrado.</param>
            <returns>Lista com todas os atributos, obedecendo o filtro.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers(System.Type,GDA.PersistenceParameterType[],GDA.DirectionParameter[])">
            <summary>
            Captura os attributes PersistenceProperty das propriedades da classe refenciada.
            </summary>
            <param name="typeModel">Tipo do modelo de onde será recuperado o mapeamento.</param>
            <param name="typesParam">Tipos de parametros a serem filtrados. null para não se aplicar nenhum filtro.</param>
            <param name="directions">Sentido dos atributos a serem filtrados. Default Input, InputOutput</param>
            <returns>Lista com todas os atributos, obedecendo o filtro.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetMappers(System.Type,GDA.PersistenceParameterType[],GDA.DirectionParameter[],System.Boolean)">
            <summary>
            Captura os attributes PersistenceProperty das propriedades da classe refenciada.
            </summary>
            <param name="typeModel">Tipo do modelo de onde será recuperado o mapeamento.</param>
            <param name="typesParam">Tipos de parametros a serem filtrados. null para não se aplicar nenhum filtro.</param>
            <param name="directions">Sentido dos atributos a serem filtrados. Default Input, InputOutput</param>
            <param name="returnFirstFound">True para retorna o primeiro valor encontrado.</param>
            <returns>Lista com todas os atributos, obedecendo o filtro.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.LoadClassMapper(System.Type)">
            <summary>
            Carrega o mapeamento da classe.
            </summary>
            <param name="typeModel">Tipo da model.</param>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetForeignKeyAttributes(System.Type)">
            <summary>
            Recupera a lista das chaves estrangeiras da model.
            </summary>
            <param name="typeModel">Tipo da model onde estão registradas as chaves estrangeiras.</param>
            <returns>Dicionario contendo as informações das chaves estrangeiras.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.LoadRelationships(System.Type,GDA.GroupOfRelationshipInfo)">
            <summary>
            Carrega os relacionamentos do grupo de chaves estrangeiras informado.
            </summary>
            <param name="info">Informações do grupo das chaves estrangeiras.</param>
            <returns>Lista da com os relacionamentos da foreignKey.</returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.CheckExistsIdentityKey(System.Type)">
            <summary>
            Verifica se no mapeamento do model existe algum campo identidade.
            </summary>
            <param name="typeModel">Tipo da model onde será feita a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Caching.MappingManager.GetIdentityKey(System.Type)">
            <summary>
            Recupera a propriedade identidade do mapeamento.
            </summary>
            <param name="typeModel">Tipo do modelo mapeado.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.GDACursorParameters">
            <summary>
            Armazena os parametros para inicialização de um curso do GDA.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.Session">
            <summary>
            Sessao que sera usada.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.Connection">
            <summary>
            Conexao que sera usada para a recuperacao do resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.Command">
            <summary>
            Comando usado para recuperar o resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.TranslatorDataInfos">
            <summary>
            Lista dos atributos a serem carregados.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.UsingPaging">
            <summary>
            Identifica se o resultado vai ser paginado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.StartPage">
            <summary>
            Ponto inicial da pagina.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.PageSize">
            <summary>
            Tamanho do pagina
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursorParameters.StartProcess">
            <summary>
            Evento que será acionado no inicio do processamento do cursor.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDACursorParameters.#ctor(GDA.Interfaces.IProvider,GDA.GDASession,System.Data.IDbConnection,System.Data.IDbCommand,GDA.TranslatorDataInfoCollection,System.Boolean,System.Int32,System.Int32,System.EventHandler)">
            <summary>
            Construtor padrão
            </summary>
            <param name="provider"></param>
            <param name="session">Sessao que sera usada.</param>
            <param name="connection">Conexao que sera usada para a recuperacao do resultado.</param>
            <param name="command">Comando usado para recuperar o resultado.</param>
            <param name="translatorDataInfos">Lista dos atributos a serem carregados.</param>
            <param name="usingPaging">Identifica se o resultado vai ser paginado.</param>
            <param name="startPage">Ponto inicial da pagina.</param>
            <param name="pageSize">Tamanho do pagina</param>
            <param name="startProcess">Evento que será acionado no inicio do processamento do cursor.</param>
        </member>
        <member name="T:GDA.Collections.GDACursor`1">
            <summary>
            Representa um cursor usado para navegar pelo resultado de uma consulta.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._startPage">
            <summary>
            Ponto inicial da pagina de resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._pageSize">
            <summary>
            Tamanho da pagina do resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._provider">
            <summary>
            Provider usado para o resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._usingPaging">
            <summary>
            Identifica se vai se vai ser usado paginacao no resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._startProcess">
            <summary>
            Instancia do eventio que sera acionado quando o cursor comecar a ser processado.
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._isLoadValues">
            <summary>
            Identifica se o cursor foi acionado a partir do método LoadValueS
            </summary>
        </member>
        <member name="F:GDA.Collections.GDACursor`1._enumeratorCreated">
            <summary>
            Identifica que o enumerador foi criado.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.#ctor(GDA.Collections.GDACursorParameters)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.#ctor(GDA.Interfaces.IProvider,GDA.GDASession,System.Data.IDbConnection,System.Data.IDbCommand,System.EventHandler)">
            <param name="session">Sessao que sera usada.</param>
            <param name="connection">Conexao que sera usada para a recuperacao do resultado.</param>
            <param name="command">Comando usado para recuperar o resultado.</param>
            <param name="startProcess">Evento que será acionado no inicio do processamento do cursor.</param>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.Finalize">
            <summary>
            Destrutor
            </summary>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.SendMessageDebugTrace(System.String)">
            <summary>
            Envia uma mensagem para o debug.
            </summary>
            <param name="message">Mensagem a ser enviada.</param>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.ToList">
            <summary>
            Recupera a lista do cursor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.GetEnumerator">
            <summary>
            Recupera o Enumerator dos dados.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.op_Implicit(GDA.Collections.GDACursor{`0})~System.Collections.Generic.List{`0}">
            <summary>
            Converte implicitamente para um lista tipada.
            </summary>
            <param name="collection"></param>
            <returns>Lista tipada.</returns>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.op_Implicit(GDA.Collections.GDACursor{`0})~GDA.Collections.GDAList{`0}">
            <summary>
            Converte implicitamente para uma lista tipada.
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GDA.Collections.GDACursor`1.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:GDA.Collections.BaseGDADataRecordCursor">
            <summary>
            Implementação base do cursor.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._commandText">
            <summary>
            Texto de consulta do comando.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._startPage">
            <summary>
            Ponto inicial da pagina de resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._pageSize">
            <summary>
            Tamanho da pagina do resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._provider">
            <summary>
            Provider usado para o resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._usingPaging">
            <summary>
            Identifica se vai se vai ser usado paginacao no resultado.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._startProcess">
            <summary>
            Instancia do eventio que sera acionado quando o cursor comecar a ser processado.
            </summary>
        </member>
        <member name="F:GDA.Collections.BaseGDADataRecordCursor._enumeratorCreated">
            <summary>
            Identifica se o enumerador foi criado.
            </summary>
        </member>
        <member name="P:GDA.Collections.BaseGDADataRecordCursor.Provider">
            <summary>
            Instancia do provider relacionada com o cursor.
            </summary>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.#ctor(GDA.Collections.GDACursorParameters)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.SendMessageDebugTrace(System.String)">
            <summary>
            Envia uma mensagem para o debug.
            </summary>
            <param name="message">Mensagem a ser enviada.</param>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.OnLoadTranslator(System.Data.IDataReader)">
            <summary>
            Método usado para carregar o tradutor dos termos
            </summary>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.CreateDataRecord``1(System.Data.IDataRecord,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Método usado para cria um registro de dados.
            </summary>
            <param name="record"></param>
            <param name="mapFields"></param>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.CreateEnumerator``1">
            <summary>
            Cria o enumerador.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GDA.Collections.BaseGDADataRecordCursor.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:GDA.Collections.GDADataRecordCursor">
            <summary>
            Representa o cursor para os registros de dados do resultado de uma consulta.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor.#ctor(GDA.Collections.GDACursorParameters)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor.CreateDataRecord``1(System.Data.IDataRecord,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Cria o registro de dados.
            </summary>
            <typeparam name="T">Tipo da Model que será tratado no resultado do consulta.</typeparam>
            <param name="record">Instancia do registro dos dados.</param>
            <param name="mapFields">Mapeamento para recuperar os campos</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor.GetEnumerator">
            <summary>
            Recupera o enumerador dos registros.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.GDADataRecordCursor`1">
            <summary>
            Implementação do cursor para suporte a um tipo especifico.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.#ctor(GDA.Collections.GDACursorParameters)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.OnLoadTranslator(System.Data.IDataReader)">
            <summary>
            Método acionado quando o tradutor for chamado.
            </summary>
            <param name="dataReader"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.CreateDataRecord``1(System.Data.IDataRecord,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Cria um registro com base o map informado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="record"></param>
            <param name="mapFields"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.Select``1">
            <summary>
            Converte a coleção para o objeto informado.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.GetEnumerator">
            <summary>
            Recupera o enumerador do cursor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursor`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador do cursor.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.GDADataRecordCursorEx`1">
            <summary>
            Implementação de extensão.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursorEx`1.#ctor(GDA.Collections.GDACursorParameters)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:GDA.Collections.GDADataRecordCursorEx`1.CreateDataRecord``1(System.Data.IDataRecord,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Cria um registro.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="record"></param>
            <param name="mapFields"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.GDAParameterCollection">
            <summary>
            Coleção para trabalhar com os parametros do GDA.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.Add(System.Data.DbType,System.Object)">
            <summary>
            Adiciona um parametro na consulta.
            </summary>
            <param name="dbtype">Tipo usado na base de dados</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.TryGet(System.String,GDA.GDAParameter@)">
            <summary>
            Tenta recupera o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.ContainsKey(System.String)">
            <summary>
            Verifica se existe algum parametro com o nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDAParameterCollection.Remove(System.String)">
            <summary>
            Remove o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.ObjectPropertyComparer`1">
            <summary>
            Comparador de propriedades de object.
            </summary>
        </member>
        <member name="M:GDA.Collections.ObjectPropertyComparer`1.#ctor(System.String)">
            <summary>
            Provides Comparison opreations.
            </summary>
            <param name="propertyName">The property to compare</param>
        </member>
        <member name="M:GDA.Collections.ObjectPropertyComparer`1.Compare(`0,`0)">
            <summary>
            Compares 2 objects by their properties, given on the constructor
            </summary>
            <param name="x">First value to compare</param>
            <param name="y">Second value to compare</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.ConverterOutput`1">
            <summary>
            Delegate usado para converter o tipo de saída.
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.ConverterInput`1">
            <summary>
            Delegate usado para converter o tipo de saída para o tipo de entrada.
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.ProxyIList`1">
            <summary>
            Representa uma lista que é uma proxy para uma lista interna.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:GDA.Collections.ProxyIList`1._client">
            <summary>
            Instancia da lista cliente.
            </summary>
        </member>
        <member name="F:GDA.Collections.ProxyIList`1._converterOutput">
            <summary>
            Instancia do delegate usado para converter o item de entrada para o item de saída.
            </summary>
        </member>
        <member name="F:GDA.Collections.ProxyIList`1._converterInput">
            <summary>
            Instancia do delegate usado para converter o item de saída para o item de entrada.
            </summary>
        </member>
        <member name="F:GDA.Collections.ProxyIList`1._comparer">
            <summary>
            Comparador usados na instancia.
            </summary>
        </member>
        <member name="P:GDA.Collections.ProxyIList`1.ConverterOutput">
            <summary>
            Instancia do delegate usado para converter o item de entrada para o item de saída.
            </summary>
        </member>
        <member name="P:GDA.Collections.ProxyIList`1.ConverterInput">
            <summary>
            Instancia do delegate usado para converter o item de saída para o item de entrada.
            </summary>
        </member>
        <member name="P:GDA.Collections.ProxyIList`1.Client">
            <summary>
            Instancia do cliente do proxy
            </summary>
        </member>
        <member name="M:GDA.Collections.ProxyIList`1.#ctor(System.Collections.IList)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="client">Instancia do cliente do proxy.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:GDA.Collections.ProxyIList`1.#ctor(System.Collections.IList,GDA.Collections.ConverterOutput{`0})">
            <summary>
            Constrói uma instancia já tendo o método de conversão do item de saída.
            </summary>
            <param name="client"></param>
            <param name="converterOutput"></param>
        </member>
        <member name="M:GDA.Collections.ProxyIList`1.#ctor(System.Collections.IList,GDA.Collections.ConverterOutput{`0},GDA.Collections.ConverterInput{`0},System.Collections.Comparer)">
            <summary>
            Constrói uma instancia já tendo os métodos de conversão.
            </summary>
            <param name="client"></param>
            <param name="converterOutput"></param>
            <param name="converterInput"></param>
            <param name="comparer">Comparador que será usado na instancia.</param>
        </member>
        <member name="T:GDA.Collections.VirtualListLoadMethod`1">
            <summary>
            Delegate que representa o método usado para carregar os dados da lista virtual.
            </summary>
            <typeparam name="Model">Model de dados da lista.</typeparam>
            <param name="startRow">Linha inicial para a recuperação dos dados.</param>
            <param name="pageSize">Tamanho da página de dados que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.VirtualListCountMethod">
            <summary>
            Método usado para recupera a quantidade de elementos que a lista virtual contém.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.VirtualList`1">
            <summary>
            Estrutura que representa uma lista virtual, ou seja,
            ela contêm itens que ainda não foram carregados.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._pageSize">
            <summary>
            Tamanho da página de cada sessão.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._count">
            <summary>
            Quantidade de elementos da lista.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._sessions">
            <summary>
            Sessões onde são armazenados os elementos carregados na lista
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._version">
            <summary>
            Versão da lista.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._syncRoot">
            <summary>
            Objeto usadao para garantir a sincronização da lista.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._loadMethod">
            <summary>
            Instancia do método usado para recuperar os itens da lista virtual.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1._countMethod">
            <summary>
            Instancia do método usado para recuperar a quantidade de itens da lista virtual.
            </summary>
        </member>
        <member name="P:GDA.Collections.VirtualList`1.Count">
            <summary>
            Quantidade de itens na lista.
            </summary>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.#ctor(System.Int32,GDA.Collections.VirtualListLoadMethod{`0},GDA.Collections.VirtualListCountMethod)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="pageSize">Tamanho da página da lista virtual.</param>
            <param name="loadMethod">Instancia do método que será usado para carregar os dados.</param>
            <param name="countMethod">Instancia do método que será usado para recuperar quantidade de dados da lista.</param>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.GetItem(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index">Posição do item.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.SetItem(System.Int32,`0)">
            <summary>
            Define o item na posição informada.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.OnSet(System.Int32,`0,`0)">
            <summary>
            Método acionado quando o valor de um item é definido.
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.OnRefresh">
            <summary>
            Método acionado quando se dar um refresh na lista.
            </summary>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.RegisterProcessMethod(System.Func{`0,`0})">
            <summary>
            Registra o método que será responsável por processar os itens carregados na coleção.
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.RegisterItemsProcessMethod(System.Action{System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Registra o método que será responsável por processar os itens carregados.
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.Refresh">
            <summary>
            Atualiza os dados da lista.
            </summary>
        </member>
        <member name="P:GDA.Collections.VirtualList`1.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Collections.VirtualList`1.Enumerator`1">
            <summary>
            Enumerator usado na lista.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="F:GDA.Collections.VirtualList`1.Enumerator`1.list">
            <summary>
            Lista em questão.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1.Enumerator`1.index">
            <summary>
            Atual index.
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1.Enumerator`1.version">
            <summary>
            Versão atual da lista
            </summary>
        </member>
        <member name="F:GDA.Collections.VirtualList`1.Enumerator`1.current">
            <summary>
            Objeto atualmente selecionado.
            </summary>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.Enumerator`1.MoveNext">
            <summary>
            Movimenta para o proximo objeto.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GDA.Collections.VirtualList`1.Enumerator`1.Current">
            <summary>
            Atual objeto selecionado.
            </summary>
        </member>
        <member name="P:GDA.Collections.VirtualList`1.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Atual objeto selecionado.
            </summary>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.Enumerator`1.System#Collections#IEnumerator#Reset">
            <summary>
            Reseta a lista.
            </summary>
        </member>
        <member name="M:GDA.Collections.VirtualList`1.System#Collections#Generic#IEnumerable{Model}#GetEnumerator">
            <summary>
            Recupera o enumerator da lista.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Collections.GDAItemCollection`1.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDAItemCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Construtor que inicializa a collection como uma collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:GDA.Collections.GDAItemCollection`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Método acionado quando a lista é alterada.
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:GDA.Collections.GDAItemCollection`1.op_Implicit(GDA.Collections.GDAItemCollection{`0})~System.Collections.Generic.List{`0}">
            <summary>
            Converte implicitamente para um lista tipada.
            </summary>
            <param name="collection"></param>
            <returns>Lista tipada.</returns>
        </member>
        <member name="M:GDA.Collections.GDAList`1.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Collections.GDAList`1.op_Implicit(GDA.Collections.GDAList{`0})~System.Collections.Generic.List{`0}">
            <summary>
            Converte implicitamente para um lista tipada.
            </summary>
            <param name="collection"></param>
            <returns>Lista tipada.</returns>
        </member>
        <member name="T:GDA.Common.Configuration.Attributes.ConfigKeyPresence">
            <summary>
            Fornece informações sobre a chave no arquivo de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Attributes.ConfigKeyPresence.Mandatory">
            <summary>
            Identifica que a presença da chave é obrigatória.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Attributes.ConfigKeyPresence.Optional">
            <summary>
            Identifica que a presença da chave é opcional
            </summary>
        </member>
        <member name="T:GDA.Common.Configuration.Attributes.ConfigurationAttribute">
            <summary>
            Atributo que identifica que o valor da propriedade ou método será recuperado do
            arquivo de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Attributes.ConfigurationAttribute._xmlNodePath">
            <summary>
            Nome do nodo do arquivo XML que o atributo representa.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Attributes.ConfigurationAttribute._keyPresenceRequirement">
            <summary>
            Armazena a informação sobre a presença do nodo no arquivo XML.
            Por padrão é obrigatório.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Attributes.ConfigurationAttribute._requiredParameters">
            <summary>
            Número de parametros que o método requer.
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Attributes.ConfigurationAttribute.XmlNodePath">
            <summary>
            Gets and Sets o nome do nodo do arquivo XML que o atributo representa.
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Attributes.ConfigurationAttribute.KeyPresenceRequirement">
            <summary>
            Get and Sets a informação sobre a presença do nodo no arquivo XML.
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Attributes.ConfigurationAttribute.RequiredParameters">
            <summary>
            Número de parametros que o método requer.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Attributes.ConfigurationAttribute.#ctor(System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="xmlNodePath">Nome do nodo que o atributo representa.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Attributes.ConfigurationAttribute.#ctor(System.String,GDA.Common.Configuration.Attributes.ConfigKeyPresence)">
            <summary>
            Construtor.
            </summary>
            <param name="xmlNodePath">Nome do nodo que o atributo representa.</param>
            <param name="keyPresenceRequirement">Informação sobre a presença do nodo no arquivo XML.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Attributes.ConfigurationAttribute.#ctor(System.String,GDA.Common.Configuration.Attributes.ConfigKeyPresence,System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="xmlNodePath">Nome do nodo que o atributo representa.</param>
            <param name="keyPresenceRequirement">Informação sobre a presença do nodo no arquivo XML.</param>
            <param name="requiredParameters">Número de parametros que o método requer.</param>
        </member>
        <member name="F:GDA.Common.Configuration.ConfigurationMap.instanceTargets">
            <summary>
            Lista do alvos a serem chamados para carrega os informações do
            arquivo de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.ConfigurationMap.instanceOverloads">
            <summary>
            Armazena os métodos configurados para serem chamado quando carrega
            as informações do arquivo de configuração. Ela contem a relação dos 
            nomes do método, que podem ser sobrecarregados.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.ConfigurationMap.#ctor(System.Type)">
            <summary>
            Constrói a novo instancia do ConfigurationMap para o tipo submetido. 
            Isso irá carrega as informações dos metados contidos no tipo para carregar
            o mapeamento do arquivo de configuração <see cref="T:GDA.Common.Configuration.Attributes.ConfigurationAttribute"/>.
            </summary>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Common.Configuration.ConfigurationMap.Configure(System.Collections.IList,System.Object)">
            <summary>
            Configure all targets in the specified object using the given ElementTree 
            as source. If a Type is passed in obj, static members will be configured.
            If an object instance is passed in obj, instance members will be configured.
            </summary>
            <param name="handlers">The list of handlers providing the source values</param>
            <param name="obj">The object to be configured</param>
        </member>
        <member name="M:GDA.Common.Configuration.ConfigurationMap.VerifyKeyPresence(GDA.Common.Configuration.Targets.ElementTarget,System.Boolean)">
            <summary>
            Faz a verificação se chave do alvo foi encontrada no arquivo de configuração.
            </summary>
            <param name="target">Elemento alvo.</param>
            <param name="keyFound">Identificador se a a chave foi encontrada.</param>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.handlers">
            <summary>
            Lista do handlers de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.namedHandlers">
            <summary>
            Os handlers registrados nessa lista, são para obter um handler pelo nome de armazenamento
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.isInitialized">
            <summary>
            Identifica que os dados já foram inicializados.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.isLoggingEnabled">
            <summary>
            Identifica se o log de evento está abilitado.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.CRLF">
            <summary>
            Constante de quebra de linha
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.errorLog">
            <summary>
            String que armazena o log de erros.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Configurator.exceptionLog">
            <summary>
            String que armazena as exceptions ocorridas
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Configurator.IgnoreEmptyConfiguration">
            <summary>
            Identifica se é para ignorar configurações vazias.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.#ctor">
            <summary>
            Construtor privado
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddSectionHandler(System.String,System.String)">
            <summary>
            Esse método cria um handler de configuração para um sessão especifica
            do arquivo de configuração padrão do .NET.
            </summary>
            <param name="configStoreName">O nome em que o handler está associado. Se for null
            o handler será usado para as conigurações do GDA, senão quando o método configure for
            chamado com o nome especificado</param>
            <param name="sectionName">Nome da sessão GDASectionHandler está declarada no arquivo de
            configuração padrão do .NET.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddSectionHandler(System.String)">
            <summary>
            Esse método cria um handler de configuração para um sessão especifica
            do arquivo de configuração padrão do .NET.
            </summary>
            <param name="sectionName">Nome da sessão GDASectionHandler está declarada no arquivo de
            configuração padrão do .NET.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddFileHandler(System.String,System.String)">
            <summary>
            Esse método cria um handler de configuração com base em arquivo com o nome especificado.
            O nome do arquivo não deve conter o caminho completo, apenas o nome (o GDA usa diretorios pré-
            definido para localizar o arquivo.
            </summary>
            <param name="configStoreName">O nome em que o handler está associado. Se for null
            o handler será usado para as conigurações do GDA, senão quando o método configure for
            chamado com o nome especificado</param>
            <param name="fileName">Nome do arquivo de configuração.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddFileHandler(System.String)">
            <summary>
            This method creates a configuration handler for the specified file name. The
            file name must not include path information (GDA will search for it in specific
            predefined locations).
            </summary>
            <param name="fileName">The name of the configuration file.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddExternalHandler(System.String,System.Xml.XmlNode)">
            <summary>
            This method creates a configuration handler for the given XML fragment,
            which (if valid) will be used as configuration source.
            </summary>
            <param name="configStoreName">The name with which to associate this handler. If null is given
            the handler will be used to configure GDA settings, otherwise it will only be used when
            Configure is called with a matching name.</param>
            <param name="root">The root node of the XML fragment to use as 
            configuration source.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddExternalHandler(System.Xml.XmlNode)">
            <summary>
            This method creates a configuration handler for the given XML fragment,
            which (if valid) will be used as configuration source.
            </summary>
            <param name="root">The root node of the XML fragment to use as 
            configuration source.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddStreamHandler(System.String,System.IO.Stream)">
            <summary>
            This method creates a configuration handler for the specified stream.
            </summary>
            <param name="configStoreName">The name with which to associate this handler. If null is given
            the handler will be used to configure GDA settings, otherwise it will only be used when
            Configure is called with a matching name.</param>
            <param name="stream">The stream from which to read the configuration XML document/snippet.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.AddStreamHandler(System.IO.Stream)">
            <summary>
            This method creates a configuration handler for the specified stream.
            </summary>
            <param name="stream">The stream from which to read the configuration XML document/snippet.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.Configure(System.String,System.Object)">
            <summary>
            Configure all targets in the specified instance.
            </summary>
            <param name="configStoreName">The name of the handler to use as configuration source.
            If null is given, GDA's configuration store will be used (effectively this means
            one of the automatically registered handlers).</param>
            <param name="instance">The object to be configured</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.Configure(System.Object)">
            <summary>
            Configure all targets in the specified instance.
            </summary>
            <param name="instance">The object to be configured</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.Configure(System.String,System.Type)">
            <summary>
            Configure all targets in the specified type (static members).
            </summary>
            <param name="configStoreName">The name of the handler to use as configuration source.
            If null is given, GDA's configuration store will be used (effectively this means
            one of the automatically registered handlers).</param>
            <param name="type">The type to be configured</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.Configure(System.Type)">
            <summary>
            Configure all targets in the specified type (static members).
            </summary>
            <param name="type">The type to be configured</param>
        </member>
        <member name="M:GDA.Common.Configuration.Configurator.InitializeHandlers">
            <summary>
            This method creates the default configuration handlers provided 
            by GDA itself.
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Configurator.IsLoggingEnabled">
            <summary>
            Accessor to turn logging on or off. This property is updated when the configuration 
            is being accessed.
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Configurator.HandlerCount">
            <summary>
            Returns the number of valid registered configuration handlers. Only the first handler
            is used used to obtain configuration options, but if HandlerCount is 0 then GDA
            has not been able to find any valid configuration source.
            </summary>
        </member>
        <member name="T:GDA.Common.Configuration.Exceptions.LoadConfigurationException">
            <summary>
            Armazena as informações do erro ocorrido ao carregar as configurações do GDA.
            </summary>
        </member>
        <member name="T:GDA.Common.Configuration.Exceptions.MissingConfigurationKeyException">
            <summary>
            Trata o erro ocorrido quando a chave do arquivo de configuração é necessário
            e não é encontrado.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.FileConfigHandler.APPSETTINGS_FILE">
            <summary>
            The key used to lookup a custom config file location in the standard .NET configuration file.
            If this key is present the specified filename will be used before searching elsewhere.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.FileConfigHandler.APPSETTINGS_FOLDER">
            <summary>
            Chaves usadas para fazer um link para o arquivo de configuração customizado contido na mesma
            localização aonde os arquivos de configuração padrão do .NET estão localizados.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.FileConfigHandler.CONFIG_FILENAME">
            <summary>
            Préconfigura o nome do arquivo que essa classe aponta para carregar o arquivo de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.FileConfigHandler.CONFIG_FOLDERS">
            <summary>
            List of folders that GDA will search (in addition to any custom folder specified in the
            regular .NET configuration file (usually App.config or Web.config). Folders are searched in
            order of appearance. All paths are expanded relative to the location of the GDA assembly.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.FileConfigHandler.localConfigFilePath">
            <summary>
            The full local path and file name of the configuration file. This variable is initialized
            once the full location and filename has been determined. Thus, it contains the local file 
            path (and name) of the file this handler is using.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.#ctor">
            <summary>
            Constructor to use when GDA should search for a file called GDA.config
            in a number of predefined locations.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.#ctor(System.String)">
            <summary>
            Construtor usado para especificar a caminho e no do arquivo manualmente.
            </summary>
            <param name="file">Caminho completo ou nome do arquivo de configuração.</param>
            <exception cref="T:GDA.GDAException">No configuration file could be located.</exception>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.GetLocalPath(System.String)">
            <summary>
            Captura o caminho do arquivo de configuração.
            </summary>
            <param name="path">Informação do arquivo do configuração.</param>
            <returns>Caminho do arquivo de configuração.</returns>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.GetTextReader(System.String)">
            <summary>
            Abre o arquivo referenciado.
            </summary>
            <param name="localFilePath">Caminho do arquivo.</param>
            <returns>Stream do arquivo</returns>
            <exception cref="T:GDA.GDAException">Error ao carregar o arquivo.</exception>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.LoadXml(System.IO.TextReader)">
            <summary>
            Carrega os dados do arquivo configuração.
            </summary>
            <param name="reader">Stream do arquivo.</param>
            <returns>Xml.</returns>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.GetConfigFileInfoFromApplicationConfig">
            <summary>
            Captura o arquivo de configuração do GDA dentro do arquivo de configuração da aplicação.
            </summary>
            <returns>Caminho do arquivo</returns>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.FileConfigHandler.GetExecutingAssemblyLocation">
            <summary>
            Captura o caminho onde o assembly está sendo executado.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GDA.Common.Configuration.Handlers.BaseSectionHandler.root">
            <summary>
            Nó principal que contem as informações do GDA
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.Handlers.BaseSectionHandler.IsValid">
            <summary>
            Determina se a sessão carregada do arquivo xml é v´lalida
            </summary>
            <returns>True se estiver usando o arquivo de configuração.</returns>
        </member>
        <member name="P:GDA.Common.Configuration.Handlers.BaseSectionHandler.XmlRoot">
            <summary>
            Obtem o nó principal do XML de configuração.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.BaseSectionHandler.GetNode(System.String)">
            <summary>
            Obtem um nó da árvore.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.BaseSectionHandler.GetNodes(System.String)">
            <summary>
            Obtem o nós que estão contidos no nó da árvore.
            </summary>
        </member>
        <member name="T:GDA.Common.Configuration.Handlers.GDASectionHandler">
            <summary>
            Essa classe é um handler para os arquivo de configuração padrão do .NET (App.config ou Web.config)
            O nome da seção para usar é GDA.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.GDASectionHandler.#ctor">
            <summary>
            Construtor.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Handlers.GDASectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Método chamado pelo .NET passando as informações sobre a sessão
            </summary>
            <param name="parent"></param>
            <param name="configContext"></param>
            <param name="section"></param>
            <returns></returns>
        </member>
        <member name="F:GDA.Common.Configuration.MemberAttributeInfo.MemberInfo">
            <summary>
            Membro relacionado (method, field, property, etc.).
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.MemberAttributeInfo.Attributes">
            <summary>
            Lista dos atributos relacionados.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.MemberAttributeInfo.#ctor(System.Reflection.MemberInfo,System.Collections.IList)">
            <summary>
            Cria um nova instancia fazendo o link entre o MemberInfo e os atributos relacionados
            </summary>
        </member>
        <member name="P:GDA.Common.Configuration.MemberAttributeInfo.Item(System.Int32)">
            <summary>
            Obtem o atributo relacionados com o MemberInfo.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.ElementTarget.#ctor(GDA.Common.Configuration.Attributes.ConfigurationAttribute)">
            <summary>
            Construtor.
            </summary>
            <param name="ca">Atributo de configuração para preecher o objeto.</param>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.ElementTarget.Configure(System.Object,System.Xml.XmlNode)">
            <summary>
            Configura os dados lidos do nodo xml no objeto.
            </summary>
            <param name="target">Objeto.</param>
            <param name="node">Nodo xml contendo os dados.</param>
        </member>
        <member name="T:GDA.Common.Configuration.Targets.FieldTarget">
            <summary>
            Identifica o campo alvo do atributo do arquivo de configuração.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Targets.FieldTarget.RepresentFieldInfo">
            <summary>
            Propriedade relacionado ao alvo.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.FieldTarget.#ctor(GDA.Common.Configuration.Attributes.ConfigurationAttribute,System.Reflection.FieldInfo)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="ca"></param>
            <param name="fi"></param>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.FieldTarget.Configure(System.Object,System.Xml.XmlNode)">
            <summary>
            Configura o valor ao campo.
            </summary>
            <param name="target">Objeto que contem o campo.</param>
            <param name="node">Nó do arquivo XML contendo as informações.</param>
        </member>
        <member name="F:GDA.Common.Configuration.Targets.MethodTarget._lock">
            <summary>
            Um simples objeto para ser usado garantindo acesso único a dispacher.
            </summary>
        </member>
        <member name="F:GDA.Common.Configuration.Targets.MethodTarget.dispatcher">
            <summary>
            Dispacher que irá conter os método a serem chamados.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.MethodTarget.#ctor(GDA.Common.Configuration.Attributes.ConfigurationAttribute,System.Reflection.MethodInfo)">
            <summary>
            Construtor.
            </summary>
            <param name="ca"></param>
            <param name="methodInfo"></param>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.MethodTarget.Configure(System.Object,System.Xml.XmlNode)">
            <summary>
            Use the supplied XmlNode to configure the target object. This configuration target 
            performs a method callback on the target object, and uses the attributes of the XmlNode
            as parameters. The method parameter names must match the names of the node attributes 
            (a leading underscore will be stripped to permit using C# reserved words in the XML file). 
            This method does not check whether the node matches the requested environment.
            </summary>
            <param name="target">The object to cofigure.</param>
            <param name="node">The node containing the configuration value(s).</param>
        </member>
        <member name="F:GDA.Common.Configuration.Targets.PropertyTarget.RepresentPropertyInfo">
            <summary>
            Representa a propriedade alvo.
            </summary>
        </member>
        <member name="M:GDA.Common.Configuration.Targets.PropertyTarget.#ctor(GDA.Common.Configuration.Attributes.ConfigurationAttribute,System.Reflection.PropertyInfo)">
            <summary>
            Construtor
            </summary>
            <param name="ca">Metadado relacionado com a propriedade.</param>
            <param name="pi">Propriedade</param>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.IsValidFilePath(System.String)">
            <summary>
            Verifica se o arquivo existe na localização passada
            </summary>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.IsFileName(System.String)">
            <summary>
            Verifica se o argumento passado representa o nome de um arquivo, entendendo que 
            ele possua informação com por exemplo de diretorio.
            </summary>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.IsFolder(System.String)">
            <summary>
            Verifica se o argumento passado representa um diretorio contendo informações sobre arquivos.
            </summary>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.IsRelativePath(System.String)">
            <summary>
            Verifica se o caminho informado é relativo ou absoluto
            </summary>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.CombinePathAndFileName(System.String,System.String)">
            <summary>
            Combina o nome do diretorio e do arquivo em um caminho absoluto.
            </summary>
        </member>
        <member name="M:GDA.Common.FileSystemUtil.DetermineFileLocation(System.String,System.String[])">
            <summary>
            Procura por um especificado arquivo dentro das localizações passadas e retorno o primeiro arquivo encontrado.
            </summary>
        </member>
        <member name="T:GDA.Common.Helper.MethodDispatcher">
            <summary>
            Helper class for determining the best matching method from a set of available
            methods. The best matching method is determined from the given set of parameters
            on the call to <see cref="M:GDA.Common.Helper.MethodDispatcher.Invoke(System.Object,System.Collections.Hashtable)"/>.
            </summary>
        </member>
        <member name="M:GDA.Common.Helper.MethodDispatcher.#ctor(GDA.Common.Helper.MethodInvoker)">
            <summary>
            Construct a new MethodDispatcher instance. Initially only a single method must be given,
            however, to make full use of this class you may add additional candidate methods using
            the <see cref="M:GDA.Common.Helper.MethodDispatcher.AddInvoker(GDA.Common.Helper.MethodInvoker)"/> method.
            </summary>
            <param name="invoker"></param>
        </member>
        <member name="M:GDA.Common.Helper.MethodDispatcher.AddInvoker(GDA.Common.Helper.MethodInvoker)">
            <summary>
            Add a method to the list of available methods for this method dispatcher.
            </summary>
            <param name="invoker">A MethodInvoker instance with information on the new method.</param>
        </member>
        <member name="M:GDA.Common.Helper.MethodDispatcher.Invoke(System.Object,System.Collections.Hashtable)">
            <summary>
            Invoke the best available match (from a list of methods available) for the supplied parameters. 
            If no method can be called using the supplied parameters, an exception is raised. Any exceptions
            raised by the called method will be logged and then re-thrown.
            </summary>
            <param name="target">The object on which to invoke a method.</param>
            <param name="parameters">A hashtable of parameter name/value pairs. All parameters given
            must be used in the method call in order for a method to be considered.</param>
            <returns>The return value of the invocation.</returns>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvokable.MethodInvoker">
            <summary>
            The <see cref="F:GDA.Common.Helper.MethodInvokable.MethodInvoker"/> wrapping the method to call.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvokable.MatchIndicator">
            <summary>
            A value indicating how good a match this is (for a given set of parameters). This value 
            is used by the <see cref="T:GDA.Common.Helper.MethodDispatcher"/> to decide which method to invoke from a 
            set of choices.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvokable.ParameterValues">
            <summary>
            The parameter values used when invoking the method.
            </summary>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvokable.#ctor(GDA.Common.Helper.MethodInvoker,System.Int32,System.Object[])">
            <summary>
            Construct a new MethodInvokable instance in preparation for executing
            the actual method call.
            </summary>
            <param name="invoker">The <see cref="F:GDA.Common.Helper.MethodInvokable.MethodInvoker"/> wrapping the method to call.</param>
            <param name="matchIndicator">A value indicating how good a match this is (for a given
            set of parameters). This value is used by the <see cref="T:GDA.Common.Helper.MethodDispatcher"/> to decide
            which method to invoke from a set of choices.</param>
            <param name="parameterValues">The parameter values used when invoking the method.</param>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvokable.Invoke(System.Object)">
            <summary>
            Perform the actual method invocation.
            </summary>
            <param name="target">The object to call the method on.</param>
            <returns>The return value of the method call.</returns>
        </member>
        <member name="T:GDA.Common.Helper.MethodInvoker">
            <summary>
            Helper class usada para armazena a informação sobre um método in partilucar e a abilidade
            para executar chamadas.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvoker._methodInfo">
            <summary>
            Método relacionados
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvoker._parameterInfos">
            <summary>
            Parametros relacionados com o método.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvoker._parameterDefaultValues">
            <summary>
            Parametros padrões do método
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.MethodInvoker._requiredParameters">
            <summary>
            Número de parametros requeridos pelo método.
            </summary>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.#ctor(System.Reflection.MethodInfo,System.Int32)">
            <summary>
            Construtor
            </summary>
            <param name="methodInfo">O <see cref="P:GDA.Common.Helper.MethodInvoker.MethodInfo"/> para o método relacionado a instancia.</param>
            <param name="requiredParameters">Número de parametros requeridos para chamar o método.</param>
        </member>
        <member name="P:GDA.Common.Helper.MethodInvoker.MethodInfo">
            <summary>
            O <see cref="P:GDA.Common.Helper.MethodInvoker.MethodInfo"/> no qual a instancia está relacionada.
            </summary>
        </member>
        <member name="P:GDA.Common.Helper.MethodInvoker.RequiredParameters">
            <summary>
            Número de parametro do método (contados da direita para a esquerda).
            </summary>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.SetDefaultValue(System.String,System.Object)">
            <summary>
            Armazena os valores padrão do parametros. Esse valor será usado se não houve valor submetido
            para o parametro, e se ele não for um parametro requerido.
            </summary>
            <param name="parameterName">Nome do parametro(case-insensitive).</param>
            <param name="value">Valor padrão.</param>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.PrepareInvoke(System.Collections.Hashtable)">
            <summary>
            Prepara um instancia <see cref="T:GDA.Common.Helper.MethodInvokable"/> para chamar o método submetendo os parametros.
            </summary>
            <param name="parameters">Um hashtable contendo o parametro/valor </param>
            <returns>Uma instancia do <see cref="T:GDA.Common.Helper.MethodInvokable"/> preparado para executar a chamada do método.</returns>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.Invoke(System.Object,System.Object[])">
            <summary>
            Invoke the underlying method on the given target object using the supplied parameter values.
            Any exception raised by performing the method call is logged and then exposed as-is.
            </summary>
            <param name="target">The object on which to invoke the method.</param>
            <param name="parameterValues">The parameter values used to invoke the method.</param>
            <returns>The return value of the invocation.</returns>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.Invoke(System.Object,System.Collections.Hashtable)">
            <summary>
            Invoke the underlying method on the given target object using the supplied parameter values.
            Any exception raised by performing the method call is logged and then exposed as-is.
            </summary>
            <param name="target">The object on which to invoke the method.</param>
            <param name="parameters">A hashtable of parameter name/value pairs.</param>
            <returns>The return value of the invocation.</returns>
        </member>
        <member name="M:GDA.Common.Helper.MethodInvoker.FindParameter(System.String)">
            <summary>
            Procura o parametro do método pelo nome.
            </summary>
            <param name="parameterName">Nome do parametro.</param>
            <returns>Index do parametro.</returns>
        </member>
        <member name="F:GDA.Common.Helper.ReflectionFlags.DefaultCriteria">
            <summary>
            Search criteria encompassing all public and non-public members.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.ReflectionFlags.InstanceCriteria">
            <summary>
            Search criteria encompassing all public and non-public instance members.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.ReflectionFlags.StaticCriteria">
            <summary>
            Search criteria encompassing all public and non-public static members, including those of parent classes.
            </summary>
        </member>
        <member name="F:GDA.Common.Helper.ReflectionFlags.AllCriteria">
            <summary>
            Search criteria encompassing all members, including those of parent classes.
            </summary>
        </member>
        <member name="M:GDA.Common.Helper.TypeConverter.Get(System.Type,System.Xml.XmlNode)">
            <summary>
            Converto o XmlNode submetido em um tipo especifico. Usa-se o InnerXml do XmlNode para re
            cuperar o valor usado na conversão.
            </summary>
            <param name="targetType">Tipo de destino da conversão</param>
            <param name="node">XmlNode fonte dos dados para a conversão.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:GDA.Common.Helper.TypeConverter.Get(System.Type,System.String)">
            <summary>
            Convert a string submetida em um tipo especifico.
            </summary>
            <param name="targetType">Tipo de destino da conversão.</param>
            <param name="value">Fonte usada na conversão</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:GDA.Common.Helper.TypeConverter.Get(System.Type,System.Object)">
            <summary>
            Convert o objeto para o tipo especificado.
            </summary>
            <param name="targetType">Tipo de destino da conversão.</param>
            <param name="obj">Objeto fonte para conversão.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:GDA.Common.Helper.TypeConverter.IsNullAssignable(System.Type)">
            <summary>
            Verifica se o tipo aceita valores nulo
            </summary>
            <param name="type">Tipo a ser verificado.</param>
            <returns>True if null can be assigned, false otherwise.</returns>
        </member>
        <member name="F:GDA.DataAccess.providerConfig">
            <summary>
            Provider de configuração para acessar os dados.
            </summary>
        </member>
        <member name="P:GDA.DataAccess.UserProvider">
            <summary>
            Provider utilizado para conexão com BD.
            </summary>
        </member>
        <member name="P:GDA.DataAccess.Configuration">
            <summary>
            Provider de configuração.
            </summary>
        </member>
        <member name="M:GDA.DataAccess.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor.
            </summary>
            <param name="providerConfiguration">Provider para acesso aos dados.</param>
            <exception cref="T:System.ArgumentNullException">Excessão lançada se o argumento providerConfig for nulo.</exception>
        </member>
        <member name="M:GDA.DataAccess.#ctor">
            <summary>
            Construtor padrão que utiliza o ProviderConfiguration padrão do sistema.
            </summary>
        </member>
        <member name="M:GDA.DataAccess.SendMessageDebugTrace(System.String)">
            <summary>
            Envia uma mensagem para o debug.
            </summary>
            <param name="message">Mensagem a ser enviada.</param>
        </member>
        <member name="M:GDA.DataAccess.ConvertType(System.Object,System.Type,System.Type)">
            <summary>
            Convert o valor do tipo um para o tipo 2.
            </summary>
            <param name="value">Valor</param>
            <param name="sourceType">Tipo de destino.</param>
            <param name="destinationType">Tipo de origem.</param>
            <returns>Valor convertido para o tipo 2.</returns>
        </member>
        <member name="M:GDA.DataAccess.ConvertValue(System.Object,System.Type)">
            <summary>
            Converte o valor para o tipo de destino.
            </summary>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.SendMessageDebugTrace(System.Object,System.String)">
            <summary>
            Envia uma mensagem para o debug.
            </summary>
            <param name="sender"></param>
            <param name="message"></param>
        </member>
        <member name="M:GDA.DataAccess.CreateConnection(GDA.GDASession)">
            <summary>
            Cria uma instância de conexão com o BD, 
            e caso uma sessão seja informada a conexão é carrega
            com base nela.
            </summary>
            <param name="session">Dados da sessão relacionada.</param>
            <returns>Nova instância de conexão.</returns>
        </member>
        <member name="M:GDA.DataAccess.CreateCommand(GDA.GDASession,System.Data.IDbConnection)">
            <summary>
            Cria uma instância de command. Caso uma sessão for informada o command
            é carregado com base na sessão.
            </summary>
            <param name="session">Dados da sessão relacionada.</param>
            <param name="connection">Conexão de onde o comando será executado</param>
            <returns>Nova instância do command.</returns>
        </member>
        <member name="M:GDA.DataAccess.GetLoadResultCursorParameters(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Recupera os parametros necessário para executar a consulta.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="procedure">Procedure que será executada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.PrepareCommand(GDA.GDASession,GDA.GDAStoredProcedure,System.Data.IDbCommand)">
            <summary>
            Prepara o comando da Storedprocedure para execução.
            </summary>
            <param name="session"></param>
            <param name="procedure">Storedprocedure que será processada.</param>
            <param name="cmd">Comando que será preparado.</param>
        </member>
        <member name="M:GDA.DataAccess.GetLoadResultCursorParameters(GDA.GDASession,System.Data.CommandType,System.Int32,System.String,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Recupera os parametros necessário para executar a consulta.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="commandType"></param>
            <param name="commandTimeout"></param>
            <param name="paging"></param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.PrepareCommand(GDA.GDASession,System.Data.IDbCommand,System.String,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Prepara o comando que será executado.
            </summary>
            <param name="session"></param>
            <param name="command">Instancia do comando que será preparada.</param>
            <param name="commandText">Texto do comando.</param>
            <param name="paging">Informações da paginação.</param>
            <param name="parameters">Parametros que serão processados.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.RecoverValueOfResult(System.Data.IDataRecord@,GDA.TranslatorDataInfoCollection,System.Object@,System.Boolean)">
            <summary>
            Recupera os valores do resultado e preenche o objeto submetido.
            </summary>
            <param name="dReader">DataReader contendo os dados.</param>
            <param name="recoverDataInfos">Lista dos campos a serem carregados.</param>
            <param name="objItem">Objeto que será preenchido.</param>
            <param name="implementIObjectDataRecord">Identifica se o tipo implementa o <see cref="T:GDA.Interfaces.IObjectDataRecord"/>.</param>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.DataAccess.CreateConnection">
            <summary>
            Cria uma instância de conexão com o BD.
            </summary>
            <returns>Nova instância de conexão.</returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(GDA.GDAStoredProcedure)">
            <summary>
            Executa a stored procedure.
            </summary>
            <param name="procedure">Dados da stored procedure.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Executa a stored procedure usando a sessão.
            </summary>
            <param name="session"></param>
            <param name="procedure"></param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(GDA.GDASession,System.Data.CommandType,System.Int32,System.String,GDA.GDAParameter[])">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="session">Sessão para execução do comando.</param>
            <param name="commandType">Tipo do comando a ser executado.</param>
            <param name="commandTimeout">commandTimeout</param>
            <param name="sqlQuery">Causa sql a ser executada.</param>
            <param name="parameters">Parametros a serem passados para o comando.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">sqlQuery</exception>
            <exception cref="T:System.ArgumentException">sqlQuery cannot empty.</exception>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="session">Sessão para execução do comando.</param>
            <param name="sqlQuery">Causa sql a ser executada.</param>
            <param name="parameters">Parametros a serem passados para o comando.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">sqlQuery</exception>
            <exception cref="T:System.ArgumentException">sqlQuery cannot empty.</exception>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(System.String,GDA.GDAParameter[])">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="sqlQuery">Causa sql a ser executada.</param>
            <param name="parameters">Parametros a serem passados para o comando.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">sqlQuery</exception>
            <exception cref="T:System.ArgumentException">sqlQuery cannot empty.</exception>
        </member>
        <member name="M:GDA.DataAccess.ExecuteCommand(System.String)">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="sqlQuery">Causa sql a ser executada.</param>
        </member>
        <member name="M:GDA.DataAccess.ExecuteSqlQueryCount(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteSqlQueryCount(System.String,GDA.GDAParameter[])">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteScalar(System.String,GDA.GDAParameter[])">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteScalar(GDA.GDASession,System.Data.CommandType,System.Int32,System.String,GDA.GDAParameter[])">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteScalar(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteScalar(GDA.GDASession,System.String)">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="sqlQuery">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.ExecuteScalar(System.String)">
            <summary>
            Executa uma consulta que retorna somente um campo.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadValues``1(System.String,GDA.GDAParameter[])">
            <summary>
            Carrega uma lista com os valores da primeira coluna da consulta SQL.
            </summary>
            <typeparam name="T">Tipo do campo da coluna.</typeparam>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadValues``1(GDA.GDAStoredProcedure)">
            <summary>
            Carrega uma lista com os valores da primeira coluna da consulta SQL.
            </summary>
            <typeparam name="T">Tipo do campo da coluna.</typeparam>
            <param name="procedure">Procedure usado na consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadValues``1(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Carrega uma lista com os valores da primeira coluna da consulta SQL.
            </summary>
            <typeparam name="T">Tipo do campo da coluna.</typeparam>
            <param name="session">Sessão onde será executado o comando.</param>
            <param name="procedure">Procedure usado na consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadValues``1(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega uma lista com os valores da primeira coluna da consulta SQL.
            </summary>
            <typeparam name="T">Tipo do campo da coluna.</typeparam>
            <param name="session">Sessão onde será executado o comando.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(System.String,GDA.GDAParameter[])">
            <summary>
            Executa a consulta e recupera o dados do resultado.
            </summary>        
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Executa a consulta e recupera o dados do resultado.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(GDA.GDASession,System.Data.CommandType,System.Int32,System.String,GDA.GDAParameter[])">
            <summary>
            Executa a consulta e recupera o dados do resultado.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(GDA.GDASession,System.Data.CommandType,System.Int32,System.String,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Executa a consulta e recupera o dados do resultado.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="commandType">Tipo de comando.</param>
            <param name="commandTimeout"></param>
            <param name="paging"></param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Parametros para a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(GDA.GDAStoredProcedure)">
            <summary>
            Executa a Stored Procedure e recupera os dados do resultado.
            </summary>
            <param name="procedure">Procedure que será executada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.LoadResult(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Executa a Stored Procedure e recupera os dados do resultado.
            </summary>
            <param name="session">Sessão onde será executada a consulta.</param>
            <param name="procedure">Procedure que será executada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.DataAccess.Count(GDA.Sql.IQuery)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.DataAccess.Count(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.DataAccess.Sum(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Efetua a soma de uma determina propriedade da classe T definida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Soma dos valores.</returns>
        </member>
        <member name="M:GDA.DataAccess.Max(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera o item com o maior valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Maior valor encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.DataAccess.Min(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera o item com o menor valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Menor valor encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.DataAccess.Avg(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera a média dos valores da propriedade especificada na consulta.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Valor medio encontrado ou zero.</returns>
        </member>
        <member name="T:GDA.GenerateKeyArgs">
            <summary>
            Argumentos usados para a geração de uma chave identidade.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.Session">
            <summary>
            Sessão de conexão que está sendo usada.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.ModelType">
            <summary>
            Tipo da model para onde será gerado o valor da chave.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.IdentityProperty">
            <summary>
            Informações da proprieade mapeada.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.TableName">
            <summary>
            Nome da tabela para onde a chave será gerada.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.SchemaName">
            <summary>
            Nome do esquema da tabela.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.ColumnName">
            <summary>
            Nome da coluna identidade da tabela.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.KeyValue">
            <summary>
            Valor da chave gerada.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.Cancel">
            <summary>
            Determina que é para cancelar a operação
            e utilizar outros meios para recuperação da chave.
            </summary>
        </member>
        <member name="P:GDA.GenerateKeyArgs.Model">
            <summary>
            Instancia com os dados que serão salvos.
            </summary>
        </member>
        <member name="M:GDA.GenerateKeyArgs.#ctor(GDA.GDASession,System.Type,GDA.Mapper,System.String,System.String,System.String,System.Object)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="session"></param>
            <param name="modelType"></param>
            <param name="identityProperty"></param>
            <param name="schemaName"></param>
            <param name="tableName"></param>
            <param name="columnName"></param>
            <param name="model"></param>
        </member>
        <member name="T:GDA.GenerateKeyHandler">
            <summary>
            Representa o método que será usado na geração de uma chave identidade
            para um linha que será inserida em uma tabela.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:GDA.ProviderConfigurationLoadArgs">
            <summary>
            Argumentos usados para a carga do provedor de configuração.
            </summary>
        </member>
        <member name="P:GDA.ProviderConfigurationLoadArgs.ProvideConfiguration">
            <summary>
            Instancia do provedor de configuração que está sendo carregado.
            </summary>
        </member>
        <member name="M:GDA.ProviderConfigurationLoadArgs.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="providerConfiguration"></param>
        </member>
        <member name="T:GDA.ProviderConfigurationLoadHandler">
            <summary>
            Representa o método que será acionado quando um provedor
            de configuração for carregado.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:GDA.DirectionPropertiesName">
            <summary>
            Identifica as direção das propriedades tratados pelo comando.
            </summary>
        </member>
        <member name="F:GDA.DirectionPropertiesName.Inclusion">
            <summary>
            Serão utilizados somente os nomes das propriedades no comando.
            </summary>
        </member>
        <member name="F:GDA.DirectionPropertiesName.Exclusion">
            <summary>
            Serão removidos os nomes das propriedades no comando.
            </summary>
        </member>
        <member name="T:GDA.GDASessionState">
            <summary>
            Estados que a sessão pode assumir.
            </summary>
        </member>
        <member name="F:GDA.GDASessionState.Open">
            <summary>
            Identifica que a sessão está aberta.
            </summary>
        </member>
        <member name="F:GDA.GDASessionState.Closed">
            <summary>
            Identifica que a sessão está fechada.
            </summary>
        </member>
        <member name="F:GDA.GDASessionState.TransactionStart">
            <summary>
            Identifica que a sessão está com uma transação aberta.
            </summary>
        </member>
        <member name="F:GDA.ForeignMapper._typeOfClassRelated">
            <summary>
            Tipo da classe relacionada.
            </summary>
        </member>
        <member name="F:GDA.ForeignMapper._propertyOfClassRelated">
            <summary>
            Propriedade da classe relacionada.
            </summary>
        </member>
        <member name="F:GDA.ForeignMapper._propertyModel">
            <summary>
            Propriedade da model.
            </summary>
        </member>
        <member name="F:GDA.ForeignMapper._groupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="P:GDA.ForeignMapper.TypeOfClassRelated">
            <summary>
            Tipo da classe que representa a tabela relacionada.
            </summary>
        </member>
        <member name="P:GDA.ForeignMapper.PropertyOfClassRelated">
            <summary>
            Propriedade da classe relacionada.
            </summary>
        </member>
        <member name="P:GDA.ForeignMapper.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="P:GDA.ForeignMapper.PropertyModel">
            <summary>
            Propriedade da model.
            </summary>
        </member>
        <member name="T:GDA.GDAConnectionListener">
            <summary>
            Assinatura do listener da conexão do GDA.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListener.Name">
            <summary>
            Nome do listener.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionListener.#ctor">
            <summary>
            Construtor protegido.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionListener.NotifyConnectionCreated(System.Data.IDbConnection)">
            <summary>
            Método acionado para notificar a criação da conexão.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:GDA.GDAConnectionListener.NotifyConnectionOpened(System.Data.IDbConnection)">
            <summary>
            Método acionado para notificar que a conexão foi aberta.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="T:GDA.GDAConnectionListenerCollection">
            <summary>
            Representa a coleção de listeners de conexão do GDA.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.Count">
            <summary>
            Quantidade de itens na coleção.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.Item(System.String)">
            <summary>
            Recupera o item pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Add(GDA.GDAConnectionListener)">
            <summary>
            Adiciona o listener na coleção.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.AddRange(GDA.GDAConnectionListener[])">
            <summary>
            Adiciona uma faixa de listeners na coleção.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.AddRange(GDA.GDAConnectionListenerCollection)">
            <summary>
            Adiciona uma faixa de listeners na coleção.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Clear">
            <summary>
            Limpa os itens da coleção.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Contains(GDA.GDAConnectionListener)">
            <summary>
            Verifica se a coleção contém o listener informado.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.CopyTo(GDA.GDAConnectionListener[],System.Int32)">
            <summary>
            Copia os itens da coleção para o vetor informado.
            </summary>
            <param name="listeners"></param>
            <param name="index"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.GetEnumerator">
            <summary>
            Recuper ao enumerador dos itens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.IndexOf(GDA.GDAConnectionListener)">
            <summary>
            Recupera o indice do item na coleção.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.InitializeListener(GDA.GDAConnectionListener)">
            <summary>
            Inicializa o listener.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Insert(System.Int32,GDA.GDAConnectionListener)">
            <summary>
            Insere um item para a coleção na posição informada.
            </summary>
            <param name="index"></param>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Remove(GDA.GDAConnectionListener)">
            <summary>
            Remove o item da coleção.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.Remove(System.String)">
            <summary>
            Remove o item pelo nome informado.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.RemoveAt(System.Int32)">
            <summary>
            Remove o item na posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copia os itens para o vetor informado.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Identifica se é uma coleção sincronizada.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            objeto de sincronização.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adiciona um item na coleção.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Verifica se o item informado está na coleção.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Recupera o indice do item informado.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Insere o item na posição informada.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GDA.GDAConnectionListenerCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Remove o item da coleção.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Identifica se a lista possui um tamanho fixo.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Identifica se a lista é somente leitura.
            </summary>
        </member>
        <member name="P:GDA.GDAConnectionListenerCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Recupera o item pelo indice informado.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.GDAConnectionManager">
            <summary>
            Representa o gerenciador de conexão do GDA.
            </summary>
        </member>
        <member name="M:GDA.GDAConnectionManager.NotifyConnectionCreated(System.Data.IDbConnection)">
            <summary>
            Notifica que a conexão foi criada.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:GDA.GDAConnectionManager.NotifyConnectionOpened(System.Data.IDbConnection)">
            <summary>
            Notifica que a conexão foi aberta.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="P:GDA.GDAConnectionManager.Listeners">
            <summary>
            Listener registrados.
            </summary>
        </member>
        <member name="T:GDA.GDADataRecord">
            <summary>
            Representa um registro de dados do GDA.
            </summary>
        </member>
        <member name="F:GDA.GDADataRecord._baseRecord">
            <summary>
            Instancia base o item que está sendo trabalhado.
            </summary>
        </member>
        <member name="P:GDA.GDADataRecord.BaseDataRecord">
            <summary>
            Instancia do registro de dados base.
            </summary>
        </member>
        <member name="P:GDA.GDADataRecord.Translator">
            <summary>
            Instancia do tradutor de acesso ao valor do campo.
            Armazena o nome do campo e a posição do campo no registro.
            </summary>
        </member>
        <member name="M:GDA.GDADataRecord.#ctor(System.Data.IDataRecord,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Cria uma instancia com dados já existentes.
            </summary>
            <param name="baseRecord"></param>
            <param name="translator">
            Instancia do tradutor de acesso ao valor do campo.
            Armazena o nome do campo e a posição do campo no registro.
            </param>
        </member>
        <member name="M:GDA.GDADataRecord.GetFieldPosition(System.String)">
            <summary>
            Recupera a posição do campo com base no nome.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDADataRecord.GetFieldRoutePosition(System.Int32)">
            <summary>
            Recupera a posição roteada do campo.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.GDADataRecord.FieldCount">
            <summary>
            Quantidade de campos no resultado.
            </summary>
        </member>
        <member name="M:GDA.GDADataRecord`1.#ctor(System.Data.IDataRecord,GDA.TranslatorDataInfoCollection)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="baseRecord"></param>
            <param name="translator">
            Instancia do tradutor de acesso ao valor do campo.
            Armazena o nome do campo e a posição do campo no registro.
            </param>
        </member>
        <member name="M:GDA.GDADataRecord`1.GetValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T">Tipo da propriedade.</typeparam>
            <param name="propertySelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDADataRecord`1.GetInstance">
            <summary>
            Recupera a instancia do objeto relacionado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDADataRecord`1.Fill``1(``0)">
            <summary>
            Preenche a instancia com os dados do registro tem com base os nomes das propriedaes.
            </summary>
            <param name="instance">Instancia aonde os dados serão preenchidos.</param>
        </member>
        <member name="M:GDA.GDADataRecord`1.Fill``1">
            <summary>
            Cria uma instancia do tipo informado e preenche os dados com base nos dados do registro.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:GDA.GDADataRecord`1.Item(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <param name="propertySelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDADataRecordEx`1.#ctor(System.Data.IDataRecord,GDA.TranslatorDataInfoCollection)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="baseRecord"></param>
            <param name="translator">
            Instancia do tradutor de acesso ao valor do campo.
            Armazena o nome do campo e a posição do campo no registro.
            </param>
        </member>
        <member name="M:GDA.GDADataRecordEx`1.Fill``1(``0)">
            <summary>
            Preenche a instancia com os dados do registro tem com base os nomes das propriedaes.
            </summary>
            <param name="instance">Instancia aonde os dados serão preenchidos.</param>
        </member>
        <member name="M:GDA.GDADataRecordEx`1.Fill``1">
            <summary>
            Cria uma instancia do tipo informado e preenche os dados com base nos dados do registro.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:GDA.GDAOperations">
            <summary>
            Classe que disponibiliza as opera��es gerais feitas com as models.
            </summary>
        </member>
        <member name="F:GDA.GDAOperations.GlobalGenerateKey">
            <summary>
            Instancia do m�todo usado para gerar as chaves identidade no sistema.
            </summary>
        </member>
        <member name="F:GDA.GDAOperations.GlobalProviderConfigurationLoad">
            <summary>
            Instancia do m�todo que � acionado toda vez que um provedor de configura��o
            for carregado no sistema.
            </summary>
        </member>
        <member name="E:GDA.GDAOperations.DebugTrace">
            <summary>
            Evento acionado quando algum evento de debug de acesso a dados for lan�ado.
            </summary>
        </member>
        <member name="M:GDA.GDAOperations.AddMemberDAO(System.Type,GDA.Interfaces.ISimpleBaseDAO)">
            <summary>
            Adiciona a DAO em mem�ria.
            </summary>
            <param name="typeModel">Tipo da model da DAO.</param>
            <param name="memberDAO"></param>
        </member>
        <member name="M:GDA.GDAOperations.SetGlobalGenerateKeyHandler(GDA.GenerateKeyHandler)">
            <summary>
            Define o manipulador que ser� respons�vel por gerenciar a cria��o das
            chaves identificada no sistema.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:GDA.GDAOperations.SetGlobalProviderConfigurationLoadHandler(GDA.ProviderConfigurationLoadHandler)">
            <summary>
            Define o manipulador que ser� respons�vel por gerenciar a carga
            dos provedores de configura��o no sistema.
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:GDA.GDAOperations.GetPropertiesKey``1">
            <summary>
            Recupera as propriedades chave da model.
            </summary>
            <typeparam name="Model">Tipo a ser usada para recupera as propriedades.</typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.GetPropertiesKey(System.Type)">
            <summary>
            Recupera as propriedades chave da model.
            </summary>
            <param name="type">Tipo a ser usada para recupera as propriedades.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.GetTableNameInfo``1">
            <summary>
            Recupera do tipo o nome da tabela que ele representa.
            </summary>
            <typeparam name="Model">Tipo a ser usado para localizar o nome</typeparam>
            <returns>Nome da tabela relacionada</returns>
            <exception cref="T:GDA.GDATableNameRepresentNotExistsException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetTableName``1">
            <summary>
            Recupera do tipo o nome da tabela que ele representa.
            </summary>
            <typeparam name="Model">Tipo a ser usado para localizar o nome</typeparam>
            <returns>Nome da tabela relacionada</returns>
            <exception cref="T:GDA.GDATableNameRepresentNotExistsException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetTableNameInfo(System.Type)">
            <summary>
            Recupera do tipo o nome da tabela que ele representa.
            </summary>
            <param name="type">Tipo a ser usado para localizar o nome</param>
            <returns>Nome da tabela relacionada</returns>
            <exception cref="T:GDA.GDATableNameRepresentNotExistsException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetTableName(System.Type)">
            <summary>
            Recupera do tipo o nome da tabela que ele representa.
            </summary>
            <param name="type">Tipo a ser usado para localizar o nome</param>
            <returns>Nome da tabela relacionada</returns>
            <exception cref="T:GDA.GDATableNameRepresentNotExistsException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que ser�o inseridos no comando.</param>
            <param name="direction">Dire��o que os nomes das propriedades ter�o no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que ser�o inseridos no comando.</param>
            <param name="direction">Dire��o que os nomes das propriedades ter�o no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(GDA.GDASession,System.Object,System.String)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que ser�o inseridos no comando.</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(System.Object,System.String)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que ser�o inseridos no comando.</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(GDA.GDASession,System.Object)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Insert(System.Object)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="model">Model contendo os dados a serem inseridos.</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Update(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que ser�o atualizadas no comando.</param>
            <param name="direction">Dire��o que os nomes das propriedades ter�o no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>N�mero de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAOperations.Update(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que ser�o atualizadas no comando.</param>
            <param name="direction">Dire��o que os nomes das propriedades ter�o no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>N�mero de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAOperations.PropertySelector``1(``0)">
            <summary>
            Recupera o seletor de propriedades que pode ser usado para realizar opera��es de inser��o ou atualiza��o.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">Instancia da model model que ser� usada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.PropertySelector``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Recupera o seletor de propriedades que pode ser usado para realizar opera��es de inser��o ou atualiza��o.
            </summary>
            <typeparam name="T"></typeparam>        
            <param name="model">Instancia da model model que ser� usada.</param>
            <param name="propertiesSelector">Propriedades que ser�o selecionadas inicialmente.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.Update(GDA.GDASession,System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que ser�o atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>N�mero de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAOperations.Update(System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que ser�o atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>N�mero de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAOperations.Update(GDA.GDASession,System.Object)">
            <summary>
            Atualiza o registro na BD.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <returns>N�mero de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Update(System.Object)">
            <summary>
            Atualiza o registro na BD.
            </summary>
            <param name="model">Model contendo os dados a serem atualizados.</param>
            <returns>N�mero de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Delete(GDA.GDASession,System.Object)">
            <summary>
            Remove o registro da base de dados.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem removidos.</param>
            <returns>N�mero de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Delete(System.Object)">
            <summary>
            Remove o registro da base de dados.
            </summary>
            <param name="model">Model contendo os dados a serem removidos.</param>
            <returns>N�mero de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.Save(GDA.GDASession,System.Object)">
            <summary>
            Salva os dados na base. Primeiro verifica se o registro existe, se existir ele ser� atualizado
            sen�o ele ser� inserido.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados a serem salvos.</param>
            <returns>A chave do registro inserido ou 0 se ele for atualizado.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado n�o possuir chaves.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
        </member>
        <member name="M:GDA.GDAOperations.Save(System.Object)">
            <summary>
            Salva os dados na base. Primeiro verifica se o registro existe, se existir ele ser� atualizado
            sen�o ele ser� inserido.
            </summary>
            <param name="model">Model contendo os dados a serem salvos.</param>
            <returns>A chave do registro inserido ou 0 se ele for atualizado.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado n�o possuir chaves.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
        </member>
        <member name="M:GDA.GDAOperations.RecoverData(GDA.GDASession,System.Object)">
            <summary>
            Recupera os valores da Model com base nos valores da chaves preenchidas.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="model">Model contendo os dados que seram usados com base para recuperar os restante dos dados.</param>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.ItemNotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.RecoverData(System.Object)">
            <summary>
            Recupera os valores da Model com base nos valores da chaves preenchidas.
            </summary>
            <param name="model">Model contendo os dados que seram usados com base para recuperar os restante dos dados.</param>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.ItemNotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetPropertyDBFieldName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Recupera no nome da campo da BD que a propriedade representa.
            </summary>
            <typeparam name="Model">Tipo da class que contem a propriedade.</typeparam>
            <param name="propertyName">Nome da propriedade.</param>
            <returns>Nome do campo da BD.</returns>
        </member>
        <member name="M:GDA.GDAOperations.GetPropertyDBFieldName``1(System.String)">
            <summary>
            Recupera no nome da campo da BD que a propriedade representa.
            </summary>
            <typeparam name="Model">Tipo da class que contem a propriedade.</typeparam>
            <param name="propertyName">Nome da propriedade.</param>
            <returns>Nome do campo da BD.</returns>
        </member>
        <member name="M:GDA.GDAOperations.GetDAO``2">
            <summary>
            Captura a DAO relacionada com a Model do tipo submetido.
            </summary>
            <typeparam name="Model">Tipo da Model relacioanda.</typeparam>
            <typeparam name="DAO">DAO que representa a model.</typeparam>
            <returns></returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetDAO``1">
            <summary>
            Captura a DAO relacionado com a Model do tipo submetido.
            </summary>
            <typeparam name="T">Model na qual a DAO est� relacionada.</typeparam>
            <returns>DAO.</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetSimpleDAO``1">
            <summary>
            Captura a DAO simples relacionada com a Model do tipo submetido.
            </summary>
            <typeparam name="T">Model na qual a DAO est� relacionada.</typeparam>
            <returns>DAO.</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetDAO(System.Object)">
            <summary>
            Captura a DAO relacionado com a Model do tipo submetido.
            </summary>
            <param name="model">Model na qual a DAO est� relacionada.</param>
            <returns>DAO.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.GetDAO(System.Type)">
            <summary>
            Captura a DAO relacionado com a Model do tipo submetido.
            </summary>
            <param name="typeModel">Tipo do model na qual a DAO est� relacionada.</param>
            <returns>DAO.</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,System.String,GDA.InfoSortExpression,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="sortProperty">Informa��o sobre o propriedade a ser ordenada.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,GDA.InfoSortExpression,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="sortProperty">Informa��o sobre o propriedade a ser ordenada.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,System.String,GDA.InfoSortExpression)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="sortProperty">Informa��o sobre o propriedade a ser ordenada.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,GDA.InfoSortExpression)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="sortProperty">Informa��o sobre o propriedade a ser ordenada.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,System.String,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object,System.String)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1toN``1(System.Object)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1to1``1(System.Object,System.String)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Ser� informado tamb�m o grupo
            no qual o relacionamento ser� carregado. Utiliza a estrura 1 para 1
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.LoadRelationship1to1``1(System.Object)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para 1
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.CountRowRelationship1toN``1(System.Object,System.String)">
            <summary>
            Carrega a quantidade de itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Quantidade de itens tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.CountRowRelationship1toN``1(System.Object)">
            <summary>
            Carrega a quantidade de itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="model">Model na qual o itens est�o relacionados.</param>
            <returns>Quantidade de itens tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.GDAOperations.SelectToCursor``1(GDA.GDASession)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.SelectToCursor``1">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.Select``1(GDA.GDASession)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.Select``1">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAOperations.Count``1(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.GDAOperations.Count``1">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.GDAOperations.Count(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.GDAOperations.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sess�o de conex�o que ser� usada na verifica��o.</param>
            <param name="mode">Modo de valida��o.</param>
            <param name="propertyName">Nome da propriedade que ser� verificada.</param>
            <param name="propertyValue">Valor da propriedade que ser� verificada.</param>
            <param name="parent">Elemento que cont�m a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="M:GDA.GDAOperations.CheckExist(GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="mode">Modo de valida��o.</param>
            <param name="propertyName">Nome da propriedade que ser� verificada.</param>
            <param name="propertyValue">Valor da propriedade que ser� verificada.</param>
            <param name="parent">Elemento que cont�m a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="T:GDA.GDAPropertyValue">
            <summary>
            Representa o valor de um campo do resultado.
            </summary>
        </member>
        <member name="F:GDA.GDAPropertyValue._value">
            <summary>
            Valor do campo.
            </summary>
        </member>
        <member name="F:GDA.GDAPropertyValue._valueExists">
            <summary>
            Identifica se o valor da propriedade existe no resultado.
            </summary>
        </member>
        <member name="P:GDA.GDAPropertyValue.ValueExists">
            <summary>
            Identifica se o valor da propriedade existe no resultado.
            </summary>
        </member>
        <member name="M:GDA.GDAPropertyValue.#ctor(System.Object,System.Boolean)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="value">Valor do campo.</param>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt32">
            <summary>
            Converte o valor para um Int32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt32Nullable">
            <summary>
            Converte o valor para um Int32Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt32">
            <summary>
            Converte o valor para um Int32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt32Nullable">
            <summary>
            Converte o valor para um UInt32Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt16">
            <summary>
            Converte o valor para um Int16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt16Nullable">
            <summary>
            Converte o valor para um Int16Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt16">
            <summary>
            Converte o valor para um UInt16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt16Nullable">
            <summary>
            Converte o valor para um UInt16Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt64">
            <summary>
            Converte o valor para um Int64.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToInt64Nullable">
            <summary>
            Converte o valor para um Int64Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt64">
            <summary>
            Converte o valor para um UInt64.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToUInt64Nullable">
            <summary>
            Converte o valor para um UInt64Nullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDouble">
            <summary>
            Converte o valor para um Double.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDoubleNullable">
            <summary>
            Converte o valor para um DoubleNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToSingle">
            <summary>
            Converte o valor para um Single.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToSingleNullable">
            <summary>
            Converte o valor para um SingleNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDecimal">
            <summary>
            Converte o valor para um Decimal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDecimalNullable">
            <summary>
            Converte o valor para um DecimalNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDateTime">
            <summary>
            Converte o valor para um DateTime.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToDateTimeNullable">
            <summary>
            Converte o valor para um DateTimeNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToBoolean">
            <summary>
            Converte o valor para um Boolean.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToBooleanNullable">
            <summary>
            Converte o valor para um BooleanNullable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToBytes">
            <summary>
            Converte o valor para um Boolean.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.GetValue">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.GetValue(System.Type)">
            <summary>
            Recupera o valor.
            </summary>
            <param name="destType">Tipo de destino do valor.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.ToString">
            <summary>
            Converte o valor para uma string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Int32">
            <summary>
            Converte implicitamente para um Int32.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Int32}">
            <summary>
            Converte implicitamente para um Int32Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.UInt32">
            <summary>
            Converte implicitamente para um UInt32.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.UInt32}">
            <summary>
            Converte implicitamente para um UInt32Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Int16">
            <summary>
            Converte implicitamente para um Int16.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Int16}">
            <summary>
            Converte implicitamente para um Int16Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.UInt16">
            <summary>
            Converte implicitamente para um UInt16.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.UInt16}">
            <summary>
            Converte implicitamente para um UInt16Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Int64">
            <summary>
            Converte implicitamente para um Int64.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Int64}">
            <summary>
            Converte implicitamente para um Int64Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.UInt64">
            <summary>
            Converte implicitamente para um UInt64.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.UInt64}">
            <summary>
            Converte implicitamente para um UInt64Nullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Single">
            <summary>
            Converte implicitamente para um Single.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Single}">
            <summary>
            Converte implicitamente para um SingleNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Double">
            <summary>
            Converte implicitamente para um Double.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Double}">
            <summary>
            Converte implicitamente para um DoubleNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Decimal">
            <summary>
            Converte implicitamente para um Decimal.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Decimal}">
            <summary>
            Converte implicitamente para um DecimalNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.DateTime">
            <summary>
            Converte implicitamente para um DateTime.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.DateTime}">
            <summary>
            Converte implicitamente para um DateTimeNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Boolean">
            <summary>
            Converte implicitamente para um Boolean.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Nullable{System.Boolean}">
            <summary>
            Converte implicitamente para um BooleanNullable.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.Byte[]">
            <summary>
            Converte implicitamente para um byte[].
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertyValue.op_Implicit(GDA.GDAPropertyValue)~System.String">
            <summary>
            Converte implicitamente para uma string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.GDAPropertySelector`1">
            <summary>
            Representa uma lista de propriedade tratadas pelo GDA.
            </summary>
        </member>
        <member name="F:GDA.GDAPropertySelector`1._properties">
            <summary>
            Lista das propriedades relacionadas.
            </summary>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adiciona uma propriedade na lista.
            </summary>
            <param name="propertiesSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Insert">
            <summary>
            Inseri o registro no BD.
            </summary>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Insert(GDA.GDASession)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Insert(GDA.GDASession,GDA.DirectionPropertiesName)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Update">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Update(GDA.GDASession)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.Update(GDA.GDASession,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.GDAPropertySelector`1.op_Implicit(GDA.GDAPropertySelector{`0})~System.String">
            <summary>
            Converte implicitamente para um lista tipada.
            </summary>
            <param name="collection"></param>
            <returns>Lista tipada.</returns>
        </member>
        <member name="T:GDA.GDASession">
            <summary>
            Gerencia uma seção de conexão onde varios procedimento podem
            ser executados em apenas uma conexão.
            </summary>
        </member>
        <member name="F:GDA.GDASession.DEFAULT_COMMAND_TIMEOUT">
            <summary>
            Timeout padrão dos comandos
            </summary>
        </member>
        <member name="F:GDA.GDASession._currentConnection">
            <summary>
            Conexão usada na sessão.
            </summary>
        </member>
        <member name="F:GDA.GDASession._providerConfiguration">
            <summary>
            Provedor de configuração da sessão.
            </summary>
        </member>
        <member name="F:GDA.GDASession._commandTimeout">
            <summary>
            Timeout dos comandos criados apartir da seção.
            </summary>
        </member>
        <member name="E:GDA.GDASession.ConnectionCreated">
            <summary>
            Evento acionado quando a conexão é criada.
            </summary>
        </member>
        <member name="P:GDA.GDASession.IsDisposed">
            <summary>
            Identifica se a instancia já foi liberada.
            </summary>
        </member>
        <member name="P:GDA.GDASession.State">
            <summary>
            Estado da sessão.
            </summary>
        </member>
        <member name="P:GDA.GDASession.CommandTimeout">
            <summary>
            Timeout em segundos dos comandos criados apartir da seção. Por padrão é 30 segundos
            </summary>
        </member>
        <member name="P:GDA.GDASession.DefaultCommandTimeout">
            <summary>
            Timeout padrão em segundos dos comandos. Por padrão é 30 segundos.
            </summary>
        </member>
        <member name="M:GDA.GDASession.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor.
            </summary>
            <param name="providerConfiguration">Provider de configuração usado na sessão.</param>
        </member>
        <member name="M:GDA.GDASession.Finalize">
            <summary>
            Destrutor.
            </summary>
        </member>
        <member name="P:GDA.GDASession.CurrentConnection">
            <summary>
            Connexão da sessão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.CreateConnection">
            <summary>
            Cria a conexão.
            </summary>
        </member>
        <member name="P:GDA.GDASession.CurrentTransaction">
            <summary>
            Transaction da sessão.
            </summary>
        </member>
        <member name="P:GDA.GDASession.ConnectionState">
            <summary>
            Estado da conexão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.CheckDisposed">
            <summary>
            Verifica se a instancia foi liberada.
            </summary>
        </member>
        <member name="M:GDA.GDASession.DefineConfiguration(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Define o provedor de configuração.
            </summary>
            <param name="configuration">Provedor de configuração.</param>
        </member>
        <member name="M:GDA.GDASession.CreateCommand">
            <summary>
            Cria uma nova instância de commando.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GDA.GDASession.ProviderConfiguration">
            <summary>
            Provedor de configuração da sessão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.Ping">
            <summary>
            Efetua um ping no servidor com os dados da sessão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.Close">
            <summary>
            Fecha a sessão.
            </summary>
        </member>
        <member name="M:GDA.GDASession.DisposeCurrentTransaction(System.Boolean)">
            <summary>
            Libera a atual transação.
            </summary>
        </member>
        <member name="M:GDA.GDASession.Dispose(System.Boolean)">
            <summary>
            Libera a instancia.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GDA.GDASession.Dispose">
            <summary>
            Libera os dados da sessão.
            </summary>
        </member>
        <member name="T:GDA.GDAStoredProcedure">
            <summary>
            Armazenas as informações de uma store procedure.
            </summary>
        </member>
        <member name="F:GDA.GDAStoredProcedure._parameters">
            <summary>
            Lista dos parametros da stored procedure.
            </summary>
        </member>
        <member name="P:GDA.GDAStoredProcedure.Name">
            <summary>
            Nome da stored procedure.
            </summary>
        </member>
        <member name="P:GDA.GDAStoredProcedure.CommandTimeout">
            <summary>
            Captura e define o tempo de espera depois de terminar a tentativa to executar o comando
            e gerar um erro.
            O tempo é em segundos. O padrão é 30 segundos.
            </summary>
        </member>
        <member name="P:GDA.GDAStoredProcedure.Count">
            <summary>
            Quantidade de parametros da stored procedure.
            </summary>
        </member>
        <member name="M:GDA.GDAStoredProcedure.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome da stored procedure.</param>
        </member>
        <member name="M:GDA.GDAStoredProcedure.FindParameter(System.String)">
            <summary>
            Localiza o parametro da stored procedure.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddOutputParameter(System.String,System.Data.DbType)">
            <summary>
            Adiciona um parametro da saído do banco.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddParameter(System.String,System.Object)">
            <summary>
            Adiciona um parametro usado na stored procedure.
            Com a direção Input por padrão.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">Valor do parametro</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddParameter(System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            Adiciona um parametro usado na stored procedure.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">Valor do parametro.</param>
            <param name="direction">Direção do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddParameter(System.String,System.Object,System.Data.ParameterDirection,System.Data.DbType)">
            <summary>
            Adiciona um parametro usado na stored procedure.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="value">Valor do parametro.</param>
            <param name="direction">Direção do parametro.</param>
            <param name="dbType">Tipo do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddParameter(GDA.GDAParameter)">
            <summary>
            Adiciona um parametro para a procedure.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.AddParameters(GDA.GDAParameter[])">
            <summary>
            Adiciona vários parametros para a procedure.
            </summary>
            <param name="parameters">Instancia dos parametros que serão adicionado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.RemoveParameter(System.String)">
            <summary>
            Remove o parametro da stored procedure.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.SetParameterDirection(System.String,System.Data.ParameterDirection)">
            <summary>
            Define a direção do parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.SetParameterDbType(System.String,System.Data.DbType)">
            <summary>
            Define o tipo do parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="type">Tipo do parametro.</param>
            <returns>Referência da atual stored procedure.</returns>
        </member>
        <member name="M:GDA.GDAStoredProcedure.Prepare(System.Data.IDbCommand,GDA.Interfaces.IProvider)">
            <summary>
            Prepara os dados para executar a stored procedure.
            </summary>
            <param name="cmd"></param>
            <param name="provider"></param>
        </member>
        <member name="P:GDA.GDAStoredProcedure.Item(System.String)">
            <summary>
            Recupera e define o valor do parametro.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.GDAStoredProcedure.Item(System.Int32)">
            <summary>
            Recupera e define o valor do parametro.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="E:GDA.GDATransaction.Commited">
            <summary>
            Evento acionado quando a transação receber um commit.
            </summary>
        </member>
        <member name="E:GDA.GDATransaction.RolledBack">
            <summary>
            Evento acionado quando a transação receber um rollback.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.#ctor(System.Data.IsolationLevel)">
            <summary>
            
            </summary>
            <param name="isolationLevel">Nível de isolação da transaction.</param>
        </member>
        <member name="M:GDA.GDATransaction.#ctor(GDA.Interfaces.IProviderConfiguration,System.Data.IsolationLevel)">
            <summary>
            Cria uma instancia com o provedor de configuração.
            </summary>
            <param name="providerConfiguration">Instancia do provedor de configuração.</param>
            <param name="isolationLevel"></param>
        </member>
        <member name="M:GDA.GDATransaction.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Cria uma instancia com o provedor de configuração.
            </summary>
            <param name="providerConfiguration">Instancia do provedor de configuração.</param>
        </member>
        <member name="P:GDA.GDATransaction.CurrentTransaction">
            <summary>
            Recupera a instancia da atual transação.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.CreateCommand">
            <summary>
            Cria uma nova instancia de comando.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDATransaction.BeginTransaction">
            <summary>
            Inicia a transação.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.Commit">
            <summary>
            Commit na transação do banco de dados.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.Rollback">
            <summary>
            Rollback na transação do bando de dados para um estado pedente.
            </summary>
        </member>
        <member name="M:GDA.GDATransaction.DisposeCurrentTransaction(System.Boolean)">
            <summary>
            Libera a atual transação.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:GDA.GroupOfRelationshipInfo">
            <summary>
            Representa as informações do grupo de relacionamento.
            </summary>
        </member>
        <member name="F:GDA.GroupOfRelationshipInfo._typeOfClass">
            <summary>
            Tipo da classe onde o relacionamento está inserido.
            </summary>
        </member>
        <member name="F:GDA.GroupOfRelationshipInfo._typeOfClassRelated">
            <summary>
            Tipo da classe relacionada.
            </summary>
        </member>
        <member name="F:GDA.GroupOfRelationshipInfo._groupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="F:GDA.GroupOfRelationshipInfo._foreignKeys">
            <summary>
            Chaves estrangeiras do grupo.
            </summary>
        </member>
        <member name="P:GDA.GroupOfRelationshipInfo.TypeOfClass">
            <summary>
            Tipo da classe onde o relacionamento está inserido.
            </summary>
        </member>
        <member name="P:GDA.GroupOfRelationshipInfo.TypeOfClassRelated">
            <summary>
            Tipo da classe relacionada.
            </summary>
        </member>
        <member name="P:GDA.GroupOfRelationshipInfo.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="M:GDA.GroupOfRelationshipInfo.#ctor(System.Type,System.Type,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="typeOfClasse">Tipo da classe onde o relacionamento está inserido.</param>
            <param name="typeOfClassRelated">Nome da classe relacionada.</param>
            <param name="groupOfRelationship">Nome do relacionamento.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:GDA.GroupOfRelationshipInfo.AddForeignKey(GDA.ForeignKeyMapper)">
            <summary>
            Adiciona uma chave estrangeira no grupo.
            </summary>
            <param name="fk"></param>
        </member>
        <member name="T:GDA.ValueConverterManager">
            <summary>
            Representa o gerenciador de conversão.
            </summary>
        </member>
        <member name="P:GDA.ValueConverterManager.Instance">
            <summary>
            Instancia unica do gerenciador.
            </summary>
        </member>
        <member name="P:GDA.ValueConverterManager.Count">
            <summary>
            Quantidade de conversores.
            </summary>
        </member>
        <member name="P:GDA.ValueConverterManager.Item(System.Int32)">
            <summary>
            Acesso o conversão na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.ValueConverterManager.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:GDA.ValueConverterManager.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.ValueConverterManager.Convert(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Realiza a conversão do valor para o tipo alvo.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.ValueConverterManager.Add(GDA.IValueConverter)">
            <summary>
            Adiciona o conversor para a instancia.
            </summary>
            <param name="converter"></param>
        </member>
        <member name="M:GDA.ValueConverterManager.Remove(GDA.IValueConverter)">
            <summary>
            Remove o conversor informado.
            </summary>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.ValueConverterManager.GetEnumerator">
            <summary>
            Recupera o enumerador dos conversores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.ValueConverterManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Recupera o enumerador dos conversores.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.IValueConverter">
            <summary>
            Assinatura da classe usada para converter o valor.
            </summary>
        </member>
        <member name="M:GDA.IValueConverter.CanConvert(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Verifica se pode converter o valor informado.
            </summary>
            <param name="value">Valor que será convertido.</param>
            <param name="targetType">Tipo alvo da conversão.</param>
            <param name="culture">Culture que será usada na conversão.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.IValueConverter.Convert(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Converte o valor informado
            </summary>
            <param name="value">Valor que será convertido.</param>
            <param name="targetType">Tipo alvo da conversão.</param>
            <param name="culture">Cultura que será utilizada na conversão.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.GDAValueConverter">
            <summary>
            Conversor padrão.
            </summary>
        </member>
        <member name="M:GDA.GDAValueConverter.CanConvert(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Verifica se pode converter
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDAValueConverter.Convert(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Converte o valor.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.TranslatorDataInfoCollection">
            <summary>
            Representa uma coleção de dados traduzidos
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfoCollection.Translator">
            <summary>
            Recupera o tradudor de campos relacionado.
            </summary>
        </member>
        <member name="M:GDA.TranslatorDataInfoCollection.ProcessFieldsPositions(System.Data.IDataRecord)">
            <summary>
            Process as posições dos campos.
            </summary>
            <param name="dataRecord"></param>
        </member>
        <member name="T:GDA.TranslatorDataInfo">
            <summary>
            Classe responsável por traduzir os nomes dos dados do registro
            do resultado de uma consulta para a propriedade de uma classe.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.Path">
            <summary>
            Caminho para chegar até a propriedade final.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.PathLength">
            <summary>
            Comprimento do caminho.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.PathAddress">
            <summary>
            Endereço do caminho.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.Property">
            <summary>
            Propriedade de onde o valor será recuperado.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.FieldName">
            <summary>
            Nome do campo no resultado.
            </summary>
        </member>
        <member name="P:GDA.TranslatorDataInfo.FieldPosition">
            <summary>
            Posição do campo no resultado.
            </summary>
        </member>
        <member name="M:GDA.TranslatorDataInfo.SetValue(System.Object,System.Object)">
            <summary>
            Define o valor da propriedade na instancia.
            </summary>
            <param name="instance"></param>
            <param name="value"></param>
        </member>
        <member name="M:GDA.TranslatorDataInfo.#ctor(System.String,System.Reflection.PropertyInfo[])">
            <summary>
            Construtor padrão.
            </summary>
            <param name="fieldName">Nome do campo no banco de dados.</param>
            <param name="path">Caminho para chegar até a proprieade final.</param>
        </member>
        <member name="T:GDA.SimpleBaseDAO`1">
            <summary>
            Implementação de uma base DAO simples.
            </summary>
        </member>
        <member name="F:GDA.SimpleBaseDAO`1.currentPersistenceObject">
            <summary>
            PersistenceObject que será responsável por tratar o acesso a dados
            </summary>
        </member>
        <member name="P:GDA.SimpleBaseDAO`1.CurrentPersistenceObject">
            <summary>
            Gets PersistenceObject que será responsável por tratar o acesso a dados
            </summary>
        </member>
        <member name="P:GDA.SimpleBaseDAO`1.ObjPersistence">
            <summary>
            Gets PersistenceObject que será responsável por tratar o acesso a dados
            </summary>
        </member>
        <member name="P:GDA.SimpleBaseDAO`1.Configuration">
            <summary>
            Provider de configuração usado na DAO.
            </summary>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="providerConfig">Provider com todo a configuração para acesso a dados.</param>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.#ctor">
            <summary>
            Constrói uma instancia de BaseDAO e carrega as configuração do arquivo de configuração.
            </summary>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(GDA.GDASession,System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(GDA.GDASession,System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Insert(System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(GDA.GDASession,System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(GDA.GDASession,System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Update(System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Delete(GDA.GDASession,System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.Delete(System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.InsertOrUpdate(GDA.GDASession,System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.InsertOrUpdate(System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="M:GDA.SimpleBaseDAO`1.SelectToDataRecord(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a consulta submetida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Diagnostics.CommandExecutionInfo">
            <summary>
            Armazena as informações de execução de um comando.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.CommandText">
            <summary>
            Texto do comando da execução.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.CommandType">
            <summary>
            Tipo de comando.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.Parameters">
            <summary>
            Parametros do comando.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.ElapsedTime">
            <summary>
            Tempo decorrido.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.Success">
            <summary>
            Identifica se o comando foi executado com sucesso.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.Error">
            <summary>
            Erro ocorrido.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.RowsAffects">
            <summary>
            Quantidade de linhas afetadas.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.Timeout">
            <summary>
            Tempo limite para a execução do comando.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor(System.String,System.Data.CommandType,System.Collections.Generic.IEnumerable{System.Data.IDataParameter},System.Int32,System.Int32,System.TimeSpan,System.Exception)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="commandText"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <param name="timeout"></param>
            <param name="rowsAffects"></param>
            <param name="executionTime"></param>
            <param name="error"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor(System.Data.IDbCommand,System.TimeSpan,System.Int32)">
            <summary>
            Cria a instancia com os dados do comando.
            </summary>
            <param name="command"></param>
            <param name="rowsAffects">Quantidade de linhas afetadas.</param>
            <param name="executionTime">Tempo de execução do comando.</param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor(System.Data.IDbCommand)">
            <summary>
            Cria a instancia com base no comando.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor(System.Data.IDbCommand,System.TimeSpan,System.Exception)">
            <summary>
            Cria a instancia com os dados do erro ocorrido na execução do comando.
            </summary>
            <param name="command"></param>
            <param name="executionTime"></param>
            <param name="error"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Construtor usado para deserializar os dados.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.Finish(System.TimeSpan,System.Int32)">
            <summary>
            Notifica que a execução foi finalizada.
            </summary>
            <param name="executionTime"></param>
            <param name="rowsAffects">Quantidade de linhas afetadas.</param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.Fail(System.TimeSpan,System.Exception)">
            <summary>
            Notifica a falha ocorrida na execução do comando.
            </summary>
            <param name="executionTime"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.ToString">
            <summary>
            Recupera o texto da instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Recupera os dados da instancia.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:GDA.Diagnostics.CommandExecutionInfo.DataParameter">
            <summary>
            Representa uma parametro de dados.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.DbType">
            <summary>
            Tipo do dado.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.Direction">
            <summary>
            Direção do parametro.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.IsNullable">
            <summary>
            Identifica se o parametro é nullable.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.ParameterName">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.SourceColumn">
            <summary>
            Nome da coluna de origem.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.SourceVersion">
            <summary>
            Versão da origem.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.CommandExecutionInfo.DataParameter.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.DataParameter.#ctor(System.Data.IDataParameter)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.DataParameter.#ctor(System.String,System.Object)">
            <summary>
            Cria a instancia com os dados básicos.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.DataParameter.#ctor">
            <summary>
            Contrutor vazio.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.DataParameter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Recupera os dados serializados.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:GDA.Diagnostics.CommandExecutionInfo.DataParameter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:GDA.Diagnostics.GDADebugTraceListener">
            <summary>
            Implementação do Listener do GDA para Debug.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDADebugTraceListener.IsThreadSafe">
            <summary>
            Identifica se o listener exige thread safe.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDADebugTraceListener.NotifyBeginExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notifica o inicio da execução do comando.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDADebugTraceListener.NotifyExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notificação a execução de um comando no banco de dados.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="T:GDA.Diagnostics.GDATrace">
            <summary>
            Classe que trata o rastreamento dos eventos do GDA.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATrace.Listeners">
            <summary>
            Listener do trace.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.CreateExecutionHandler(System.Data.IDbCommand)">
            <summary>
            Cria o manipulador para a execução do comando.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.NotifyBeginExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notifica o inicio da execução do comando.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.NotifyExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notificação a execução de um comando no banco de dados.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="T:GDA.Diagnostics.GDATrace.ExecutionHandler">
            <summary>
            Manipulador da execução dos comando.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATrace.ExecutionHandler.RowsAffects">
            <summary>
            Quantidade de linhas afetadas.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.ExecutionHandler.#ctor(System.Data.IDbCommand)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.ExecutionHandler.Fail(System.Exception)">
            <summary>
            Notifica o erro ocorrido.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATrace.ExecutionHandler.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:GDA.Diagnostics.GDATraceException">
            <summary>
            Representa um erro do trace.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceException.#ctor(System.Exception)">
            <summary>
            Cria a instancia tendo como referencia um erro interno.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceException.#ctor(System.String)">
            <summary>
            Cria a instancia com a mensagem do erro.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceException.#ctor(System.String,System.Exception)">
            <summary>
            Cria a instancia com a mensagem do erro e com a referencia do erro interno.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceInternal.UseGlobalLock">
            <summary>
            Identifica se é para usar o lock global.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceInternal.Listeners">
            <summary>
            Relação dos listener registrados.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceInternal.AutoFlush">
            <summary>
            Identifica se é para auto liberar os dados.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceInternal.#cctor">
            <summary>
            Construtor estático.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceInternal.InitializeSettings">
            <summary>
            Inicializa as configurações.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceInternal.NotifyBeginExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notifica o inicio de execução de uma comando.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceInternal.NotifyExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notificação a execução de um comando no banco de dados.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="T:GDA.Diagnostics.GDATraceListener">
            <summary>
            Implementação base do listener do GDATrace.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListener.Name">
            <summary>
            Nome do listener.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListener.IsThreadSafe">
            <summary>
            Identifica se o listener é ThreadSafe.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListener.NotifyBeginExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notifica o inicio da execução do comando.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListener.NotifyExecution(GDA.Diagnostics.CommandExecutionInfo)">
            <summary>
            Notificação a execução de um comando no banco de dados.
            </summary>
            <param name="executionInfo"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListener.Flush">
            <summary>
            Libera a notificação.
            </summary>
        </member>
        <member name="T:GDA.Diagnostics.GDATraceListenerCollection">
            <summary>
            Implementação da coleção de listeners.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.Count">
            <summary>
            Recupera a quantidade de listener na coleção.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.Item(System.Int32)">
            <summary>
            Recupera o listener na posição informada.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.Item(System.String)">
            <summary>
            Recupera o listener pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Identifica se é uma coleção sincronizada.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Objeto para sincronizar a coleção.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Identifica se a coleção possui um tamanho fixo.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Identifica se a coleção é somente leitura.
            </summary>
        </member>
        <member name="P:GDA.Diagnostics.GDATraceListenerCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Recupera o listener na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Add(GDA.Diagnostics.GDATraceListener)">
            <summary>
            Adiciona um listener para a coleção.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.AddRange(GDA.Diagnostics.GDATraceListener[])">
            <summary>
            Adiciona um faixa de listeners
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.AddRange(GDA.Diagnostics.GDATraceListenerCollection)">
            <summary>
            Adiciona a faixa de valores contidos na coleção informada.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Clear">
            <summary>
            Limpa a coleção.
            </summary>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Contains(GDA.Diagnostics.GDATraceListener)">
            <summary>
            Verifica se na coleção possui o listener informado.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.CopyTo(GDA.Diagnostics.GDATraceListener[],System.Int32)">
            <summary>
            Copia os listeners da coleção para o vetor informado.
            </summary>
            <param name="listeners"></param>
            <param name="index"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.GetEnumerator">
            <summary>
            Recupera o enumerador dos listeners.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.IndexOf(GDA.Diagnostics.GDATraceListener)">
            <summary>
            Recupera o indice do listener na coleção.
            </summary>
            <param name="listener"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.InitializeListener(GDA.Diagnostics.GDATraceListener)">
            <summary>
            Inicializa o listener.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Insert(System.Int32,GDA.Diagnostics.GDATraceListener)">
            <summary>
            Adiciona o listener na posição informada.
            </summary>
            <param name="index"></param>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Remove(GDA.Diagnostics.GDATraceListener)">
            <summary>
            Remove o listener informado.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.Remove(System.String)">
            <summary>
            Remove o listener com o nome informado.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GDA.Diagnostics.GDATraceListenerCollection.RemoveAt(System.Int32)">
            <summary>
            Remove o listener a posição informada.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:GDA.Helper.TypeHelper">
            <summary>
            Auxilia na manipulação dos tipos.
            </summary>
        </member>
        <member name="M:GDA.Helper.TypeHelper.IsNullableType(System.Type)">
            <summary>
            Verifica se é um tipo Nullable;
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.TypeHelper.GetElementType(System.Type)">
            <summary>
            Recupera o tipo do elemento da enumeração.
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.TypeHelper.FindIEnumerable(System.Type)">
            <summary>
            Recupera o tipo do elemento da enumeração.
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.TypeHelper.GetMemberType(System.Reflection.MemberInfo)">
            <summary>
            What is the type of the current member?
            </summary>
        </member>
        <member name="M:GDA.Helper.TypeHelper.SetMemberValue(System.Object,System.Reflection.MemberInfo,System.Object)">
            <summary>
            If mi is a Property, then its sets it value to value
            If mi is a Field, it assigns value to it
            </summary>
        </member>
        <member name="M:GDA.Helper.TypeHelper.GetMemberValue(System.Object,System.Reflection.MemberInfo)">
            <summary>
            If mi is a Property, then it returns its value
            If mi is a Field, then it returns its value
            </summary>
        </member>
        <member name="T:GDA.Helper.Base32">
            <summary>
            Encodes and decodes 'Canonical' base32 format.
            </summary>
        </member>
        <member name="M:GDA.Helper.Base32.Encode(System.Byte[])">
            <summary>
            Codifica os bytes para a base 32.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Base32.Encode(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Codifica os bytes para a base 32.
            </summary>
            <param name="bytes"></param>
            <param name="loc"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Helper.Serialization.BFormatterNavigate">
            <summary>
            Navegador de registros serializados.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterNavigate.baseType">
            <summary>
            Tipo base do navegador.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterNavigate.sizeCurrentItem">
            <summary>
            Tamanho do atual item.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterNavigate.coreSupports">
            <summary>
            Informações dos dados de suporte para trabalhar a os dados.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterNavigate.memberAllowNullCount">
            <summary>
            Númer de membros da tipo que permite valores nulos.
            </summary>
        </member>
        <member name="P:GDA.Helper.Serialization.BFormatterNavigate.Count">
            <summary>
            Quantidade de itens contidos no navegador.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterNavigate.#ctor(System.IO.Stream,System.Type)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="stream">Stream onde os dados estão armazenados.</param>
            <param name="baseType">Tipo base do navegador.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterNavigate.Initialize">
            <summary>
            Inicializa a instância.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterNavigate.Reset">
            <summary>
            Reseta a navegação.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterNavigate.GetItem">
            <summary>
            Recupera o item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterNavigate.Read">
            <summary>
            Lê o próximo registro.
            </summary>
            <returns>True caso o registro tenha sido lido.</returns>
        </member>
        <member name="T:GDA.Helper.Serialization.BFormatterSource">
            <summary>
            Representa uma fonte de dados.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterSource.source">
            <summary>
            Stream onde os dados serão salvos.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterSource.localStream">
            <summary>
            Identifica se a stream foi criada na atual instância.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterSource.coreSupports">
            <summary>
            Informações dos dados de suporte para trabalhar a os dados.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatterSource.memberAllowNullCount">
            <summary>
            Númer de membros da tipo que permite valores nulos.
            </summary>
        </member>
        <member name="P:GDA.Helper.Serialization.BFormatterSource.Count">
            <summary>
            Quantidade de itens contidos na fonte.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterSource.#ctor(System.IO.Stream,System.Type)">
            <summary>
            Instancia uma fonte que será salva na stream informada.
            </summary>
            <param name="stream">Stream onde os dados serão salvos.</param>
            <param name="baseType">Tipo base trabalhado pela fonte.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterSource.#ctor(System.IO.Stream,System.Type,System.Boolean)">
            <summary>
            Instancia uma fonte que será salva na stream informada.
            </summary>
            <param name="stream">Stream onde os dados serão salvos.</param>
            <param name="baseType">Tipo base trabalhado pela fonte.</param>
            <param name="append">Identifica que a fonte será uma continuação.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterSource.Flush">
            <summary>
            Força o salvamento da informação na stream.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterSource.Add(System.Object)">
            <summary>
            Adiciona um item na fonte.
            </summary>
            <param name="item">Item contendo os dados.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatterSource.Dispose">
            <summary>
            Libera a instancia.
            </summary>
        </member>
        <member name="T:GDA.Helper.Serialization.BNonSerializeAttribute">
            <summary>
            Atributo para identifica que aquele campo ou método não será serializado.
            </summary>
        </member>
        <member name="T:GDA.Helper.Serialization.SerializableMaxLenghtAttribute">
            <summary>
            Atribute que identifica o tamanho máximo em byte que o campo pode conter.
            </summary>
        </member>
        <member name="P:GDA.Helper.Serialization.SerializableMaxLenghtAttribute.MaxLenght">
            <summary>
            Gets a quantidade máxima de byte que o campo suporta.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.SerializableMaxLenghtAttribute.#ctor(System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="maxLenght">Tamanho máximo para serializar.</param>
        </member>
        <member name="T:GDA.Helper.Serialization.BFormatter">
            <summary>
            Serializa e deserializa um objeto em um junto de dados binários.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.coreTypes">
            <summary>
            Tipos básico suportados para serialização
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.fullSerializeTypes">
            <summary>
            Tipos que terão uma serialização completa.
            </summary>
        </member>
        <member name="T:GDA.Helper.Serialization.BFormatter.InfoCoreSupport">
            <summary>
            Armazena as informações sobre os tipos suportados.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Construtor padrão
            </summary>
            <param name="coreTypeSupported">Identifica se é um tipo básico suportado.</param>
            <param name="allowNullValue">Permite valores nulos.</param>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.coreTypeSupported">
            <summary>
            Identifica se o tipo do paramentro é suportado
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.allowNullValue">
            <summary>
            Identifica se o tipo do paramentro suporta valor nulos.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.fieldInfo">
            <summary>
            Informações sobre o campo.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.propertyInfo">
            <summary>
            Informações sobre a propriedade.
            </summary>
        </member>
        <member name="F:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.maxLenght">
            <summary>
            Tamanho máximo do membro.
            </summary>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.GetValue(System.Object)">
            <summary>
            Recupera o valor do membro do objeto informado. 
            </summary>
            <param name="graph"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.InfoCoreSupport.GetMemberType">
            <summary>
            Recupera o tipo do membro.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.IsStruct(System.Type)">
            <summary>
            Verifica se o tipo informado é uma estrutura.
            </summary>
            <param name="type">Tipo.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.IsCoreType(System.Type)">
            <summary>
            Verifica se é um tipo básico aceitável para serialização.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Support(System.Type)">
            <summary>
            Verifica se o tipo é suportado pela serialização.
            </summary>
            <param name="type">Tipo a ser verificado.</param>
            <returns>
            <list type="bool">
            <item>True: o tipo é suportado.</item>
            <item>False: o tipo não é suportado.</item>
            </list>
            </returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.WriteData(System.IO.Stream,System.Object,System.Type,System.Int32)">
            <summary>
            Escreve o valor do objeto na stream.
            </summary>
            <param name="stream">Stream aonde serão salvos os dados do objeto.</param>
            <param name="o">Objeto contendo os dados.</param>
            <param name="type">Tipo do valor a ser serializado.</param>
            <param name="maxLenght">Tamanho máximo a ser serializado.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.ReadData(System.IO.Stream,System.Type,System.Int32)">
            <summary>
            Lê os dados da stream e salva no objeto
            </summary>
            <param name="stream"></param>
            <param name="type">Tipo de dado a ser lido.</param>
            <return>Valor lido.</return>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Export(System.IO.Stream,GDA.Helper.Serialization.BFormatter.InfoCoreSupport[],System.Int16,System.Object)">
            <summary>
            Extrai os dados do objeto.
            </summary>
            <param name="streamOut">Stream onde será armazenado os dados extraídos.</param>
            <param name="supports">Informações dos membros onde estão os dados.</param>
            <param name="membersAllowNullCount">Quantidade de membros que aceitam valores nulos.</param>
            <param name="graph">Objeto de onde será estraído os dados.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Import(System.IO.Stream,GDA.Helper.Serialization.BFormatter.InfoCoreSupport[],System.Int16,System.Object)">
            <summary>
            Importa os dados do objeto contidos na stream.
            </summary>
            <param name="streamIn">Stream onde estão os dados a serem importados.</param>
            <param name="supports">Informações dos membros que mapeam os dados.</param>
            <param name="memberAllowNullCount">Quantidade de membros que aceitam valores nulos.</param>
            <param name="graph">Objeto onde os dados importados serão salvos.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.LoadTypeInformation(System.Type,System.Int16@)">
            <summary>
            Carrega as informações sobre o tipo.
            </summary>
            <param name="type">Tipo a ser examinado.</param>
            <param name="membersAllowNullCount">Númeor de membros que permite valores nulos.</param>
            <returns>Informações de suporte.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.DeserializeBase(System.IO.Stream,System.Type,GDA.Helper.Serialization.BFormatter.InfoCoreSupport[],System.Int16,System.Int32,System.Object)">
            <summary>
            Deserializa os dados.
            </summary>
            <param name="stream">Stream onde os dados estão armazenados.</param>
            <param name="type">Tipo que será recuperado.</param>
            <param name="supports">Membros mapeados.</param>
            <param name="memberAllowNull">Quantidade de membros que aceitam valores nulos.</param>
            <param name="maxLenght">Tamanho máximo aceito.</param>
            <param name="graph">Objeto onde a deserialização será salva.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.SerializeBase(System.IO.Stream,GDA.Helper.Serialization.BFormatter.InfoCoreSupport[],System.Int16,System.Int32,System.Object)">
            <summary>
            Serializa os dados.
            </summary>
            <param name="stream">Stream onde será salvo os dados.</param>
            <param name="supports">Membros mapeados.</param>
            <param name="membersAllowNull">Quantidade de membros que aceitam valores nulos.</param>
            <param name="maxLenght">Tamanho máximo aceito.</param>
            <param name="graph">Objeto que será serializado.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.RegisterFullSerializeType(System.Type)">
            <summary>
            Registra o tipo que terá uma serialização completa.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.ReadArrayLenght(System.IO.Stream,System.Int32)">
            <summary>
            Lê o tamanho do vetor serializado no stream.
            </summary>
            <param name="stream">Stream onde está armazenada os dados.</param>
            <param name="maxLenght">Tamanho máximo do vetor.</param>
            <returns>Tamanho do vetor salvo no arquivo.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Serialize(System.Object)">
            <summary>
            Serializa o objeto passado, e armazena os dados na stream.
            </summary>
            <param name="graph">Objeto a serializado.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GDA.Helper.Serialization.BFormatter.Serialize(System.IO.Stream,System.Object)" -->
        <member name="M:GDA.Helper.Serialization.BFormatter.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deseriliza os dados contidos na stream e retorna o objeto do tipo passado com os dados preenchidos.
            </summary>
            <param name="serializationStream">Stream onde estão os dados para serem deserializados.</param>
            <param name="typeReturn">Tipo de retorno do elemento.</param>
            <returns>Objeto com os dados dados preenchidos.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Deserialize(System.Byte[],System.Type)">
            <summary>
            Deseriliza os dados contidos no buffer e retorna o objeto do tipo passado com os dados preenchidos.
            </summary>
            <param name="buffer">Buffer onde estão os dados para serem deserializados.</param>
            <param name="typeReturn">Tipo de retorno do elemento.</param>
            <returns>Objeto com os dados dados preenchidos.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.Deserialize(System.Byte[],System.Type,System.Object)">
            <summary>
            Deseriliza os dados contidos no buffer e retorna o objeto do tipo passado com os dados preenchidos.
            </summary>
            <param name="buffer">Buffer onde estão os dados para serem deserializados.</param>
            <param name="typeReturn">Tipo de retorno do elemento.</param>
            <returns>Objeto com os dados dados preenchidos.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.CopyInstance``1(``0)">
            <summary>
            Copia os dados de uma instância para a outra sem
            nenhum vinculo de ponteiro.
            </summary>
            <typeparam name="T">Tipo que será usado para cópia.</typeparam>
            <param name="source">Objeto contendo a fonte dos dados.</param>
            <returns>Objeto para onde dados foram copiados.</returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.CopyInstance``1(``0,``0)">
            <summary>
            Copia os dados de uma instância para a outra sem
            nenhum vinculo de ponteiro.
            </summary>
            <typeparam name="T">Tipo que será usado para cópia.</typeparam>
            <param name="source">Objeto contendo a fonte dos dados.</param>
            <param name="destination">Objeto para onde será copiado os dados.</param>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.BytesToDecimal(System.Byte[])">
            <summary>
            Converte um array de bytes para decimal.
            </summary>
            <param name="bytes">O array de bytes que será convertido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.Serialization.BFormatter.DecimalToBytes(System.Decimal)">
            <summary>
            Converte um decimal para um array de bytes.
            </summary>
            <param name="d">O decimal que será convertido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.ThreadSafeEvents.FireEvent``1(System.Delegate,System.Object,``0)">
            <summary>
            Fires the specified event, and passes the input as a parameter.
            </summary>
            <typeparam name="T">Type of the input parameter.</typeparam>
            <param name="eventToFire">The event to fire.</param>
            <param name="input">The input.</param>
        </member>
        <member name="T:GDA.Helper.GDAComparer`1">
            <summary>
            Classe usada para ordenar a lista.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GDA.Helper.GDAComparer`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="sortExpression">Expressão de ordenação que a GridView passa como parametro.</param>
        </member>
        <member name="M:GDA.Helper.GDAHelper.SortExpression(System.String)">
            <summary>
            Verifica se a expressão de ordenação possui um item que represente reversão na ordenação.
            </summary>
            <param name="sortExpression">Expressão de ordenação.</param>
            <returns>True se existir reversão.</returns>
        </member>
        <member name="M:GDA.Helper.GDAHelper.ConvertGDAParameter(System.Data.IDbCommand,GDA.GDAParameter,GDA.Interfaces.IProvider)">
            <summary>
            Converte um parametro do GDA para um parametro do ADO.NET.
            </summary>
            <param name="cmd"></param>
            <param name="parameter"></param>
            <param name="provider">Provider que será usado na conversão.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.GDAHelper.IsNullableType(System.Type)">
            <summary>
            Verifica se o tipo e um Nullable.
            </summary>
            <param name="theType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.GDAHelper.TryParse(System.String,System.Int32@)">
            <summary>
            Tenta recupera o valor da string.
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Helper.GDAHelper.TryParse(System.String,System.Boolean@)">
            <summary>
            Tenta recupera o valor da string.
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.IGeneratorKey">
            <summary>
            Interface com as assinaturas dos métodos usado para gerar uma chave.
            </summary>
        </member>
        <member name="M:GDA.IGeneratorKey.GenerateKey(System.Object,GDA.GenerateKeyArgs)">
            <summary>
            Método usado para gerar a chave.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapper">
            <summary>
            Armazena o mapeamento usado no GDA.
            </summary>
        </member>
        <member name="F:GDA.Mapper._name">
            <summary>
            Nome do campo na tabela na qual a propriedade está relacionada.
            </summary>
        </member>
        <member name="F:GDA.Mapper._parameterType">
            <summary>
            Tipo do parametro.
            </summary>
        </member>
        <member name="F:GDA.Mapper._size">
            <summary>
            Tamanho do campo.
            </summary>
        </member>
        <member name="F:GDA.Mapper._direction">
            <summary>
            Direção como o parametro se comporta.
            </summary>
        </member>
        <member name="F:GDA.Mapper._propertyMapperName">
            <summary>
            Nome da propriedade mapeada.
            </summary>
        </member>
        <member name="F:GDA.Mapper._propertyMapper">
            <summary>
            Propriedade mapeada.
            </summary>
        </member>
        <member name="F:GDA.Mapper._validation">
            <summary>
            Validação relacionada com o mapeamento.
            </summary>
        </member>
        <member name="F:GDA.Mapper._foreignKeys">
            <summary>
            Informações se houver foreignkeys relacionadas.
            </summary>
        </member>
        <member name="F:GDA.Mapper._modelType">
            <summary>
            Tipo da model do mapeamento.
            </summary>
        </member>
        <member name="F:GDA.Mapper._generatorKeyName">
            <summary>
            Nome da gerador de código relacionado.
            </summary>
        </member>
        <member name="F:GDA.Mapper._generatorKey">
            <summary>
            Instancia do gerador de chave relacionado.
            </summary>
        </member>
        <member name="F:GDA.Mapper._isNotNull">
            <summary>
            Identifica se a propriedade aceita ou não valores nulos.
            </summary>
        </member>
        <member name="P:GDA.Mapper.Name">
            <summary>
            Nome do campo da tabela na qual a propriedade está relacionada.
            </summary>
        </member>
        <member name="P:GDA.Mapper.ParameterType">
            <summary>
            Tipo do parâmetro.
            </summary>
        </member>
        <member name="P:GDA.Mapper.Size">
            <summary>
            Tamanho máximo do campo.
            </summary>
        </member>
        <member name="P:GDA.Mapper.Direction">
            <summary>
            Direção como o parâmetro se comporta.
            </summary>
        </member>
        <member name="P:GDA.Mapper.PropertyMapper">
            <summary>
            Propriedade mapeada.
            </summary>
        </member>
        <member name="P:GDA.Mapper.PropertyMapperName">
            <summary>
            Nome da propriedade mapeada.
            </summary>
        </member>
        <member name="P:GDA.Mapper.ForeignKeys">
            <summary>
            Informações se houver foreignkey relacionada.
            </summary>
        </member>
        <member name="P:GDA.Mapper.Validation">
            <summary>
            Validação relacionada com o mapeamento.
            </summary>
        </member>
        <member name="P:GDA.Mapper.GeneratorKeyName">
            <summary>
            Nome da gerador de código relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapper.GeneratorKey">
            <summary>
            Instancia do gerador de código relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapper.IsNotNull">
            <summary>
            Identifica se a propriedade aceita ou não valores nulos.
            </summary>
        </member>
        <member name="P:GDA.Mapper.IsNullableType">
            <summary>
            Identifica se o tipo é Nullable
            </summary>
        </member>
        <member name="P:GDA.Mapper.DeclaringType">
            <summary>
            Tipo de declaração do membro.
            </summary>
        </member>
        <member name="P:GDA.Mapper.IsAssociation">
            <summary>
            Identifica se o membro é uma associação.
            </summary>
        </member>
        <member name="P:GDA.Mapper.IsDbGenerated">
            <summary>
            Verifica se o membro é gerado pelo banco de dados.
            </summary>
        </member>
        <member name="P:GDA.Mapper.IsPrimaryKey">
            <summary>
            Identifica se o membro é uma chave primária.
            </summary>
        </member>
        <member name="M:GDA.Mapper.#ctor(System.Type,GDA.PersistencePropertyAttribute,System.Reflection.PropertyInfo)">
            <summary>
            Cria uma instancia para propriedade mapeada.
            </summary>
            <param name="modelType"></param>
            <param name="ppa"></param>
            <param name="propertyMapper"></param>
        </member>
        <member name="M:GDA.Mapper.#ctor(System.Type,System.String,GDA.DirectionParameter,GDA.PersistenceParameterType,System.Int32,System.Reflection.PropertyInfo,System.String)">
            <summary>
            
            </summary>
            <param name="modelType"></param>
            <param name="name"></param>
            <param name="direction"></param>
            <param name="parameterType"></param>
            <param name="size"></param>
            <param name="propertyMapper"></param>
            <param name="generatorKeyName">Nome do gerador de codigo relacionado.</param>
        </member>
        <member name="M:GDA.Mapper.AddForeignKey(GDA.ForeignKeyMapper)">
            <summary>
            Adiciona uma chave estrangeira para o mapeamento.
            </summary>
            <param name="fkMapper"></param>
        </member>
        <member name="T:GDA.ValidationMode">
            <summary>
            Possíveis modos onde é feita a validação.
            </summary>
        </member>
        <member name="F:GDA.ValidationMode.Insert">
            <summary>
            Quando o registro é para ser inserido.
            </summary>
        </member>
        <member name="F:GDA.ValidationMode.Update">
            <summary>
            Quando o registro é para ser atualizado
            </summary>
        </member>
        <member name="F:GDA.ValidationMode.Delete">
            <summary>
            Quando o registro é para ser apagado.
            </summary>
        </member>
        <member name="T:GDA.ModelValidator">
            <summary>
            Classe singleton usada para executar a perfomace de validação do objeto.
            </summary>
        </member>
        <member name="M:GDA.ModelValidator.Validate(GDA.ValidationMode,System.Object)">
            <summary>
            Interface estática para validação em um objeto.
            </summary>
            <param name="obj">Objeto onde será realizada a operação de validação.</param>
            <returns>Mensagens da validação.</returns>
        </member>
        <member name="M:GDA.ModelValidator.Validate(GDA.GDASession,GDA.ValidationMode,System.Object)">
            <summary>
            Interface estática para validação em um objeto.
            </summary>
            <param name="session">Sessão de conexão do GDA que será usada na validação.</param>
            <param name="obj">Objeto onde será realizada a operação de validação.</param>
            <returns>Mensagens da validação.</returns>
        </member>
        <member name="T:GDA.GDAMappingException">
            <summary>
            Reprsenta uma exception lançada por causa de um mapeamento.
            </summary>
        </member>
        <member name="M:GDA.GDAMappingException.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="message">Mensagem do error.</param>
        </member>
        <member name="T:GDA.ValidationException">
            <summary>
            Representa os errors de validação.
            </summary>
        </member>
        <member name="T:GDA.ModelsNamespaceInfo">
            <summary>
            Armazena as informações dos models do namespace.
            </summary>
        </member>
        <member name="F:GDA.ModelsNamespaceInfo.Namespace">
            <summary>
            Namespace das models.
            </summary>
        </member>
        <member name="F:GDA.ModelsNamespaceInfo.AssemblyName">
            <summary>
            Assembly do namespace.
            </summary>
        </member>
        <member name="P:GDA.ModelsNamespaceInfo.CurrentAssembly">
            <summary>
            Assembly do namespace.
            </summary>
        </member>
        <member name="M:GDA.ModelsNamespaceInfo.#ctor(System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="ns"></param>
            <param name="assemblyName"></param>
        </member>
        <member name="F:GDA.ProviderConfigurationInfo.ConnectionString">
            <summary>
            ConnectionString do provider.
            </summary>
        </member>
        <member name="F:GDA.ProviderConfigurationInfo.ProviderName">
            <summary>
            Nome do provider relacionado.
            </summary>
        </member>
        <member name="F:GDA.ProviderConfigurationInfo.Name">
            <summary>
            Nome do providerConfigurationInfo.
            </summary>
        </member>
        <member name="F:GDA.ProviderConfigurationInfo.Dialect">
            <summary>
            Dialeto que será usado na configuração do provedor.
            </summary>
        </member>
        <member name="M:GDA.ProviderConfigurationInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="name">Nome do providerConfigurationInfo.</param>
            <param name="providerName">Nome do provider.</param>
            <param name="connectionString">ConnectionString do provider.</param>
            <param name="dialect">Dialeto que será usado na configuração do provedor.</param>
        </member>
        <member name="T:GDA.Interfaces.IObjectDataRecord">
            <summary>
            Assinatura usada nas classe que necessita trabalhar as colunas
            do resultado da consulta independente das propriedades da classe.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IObjectDataRecord.InsertRecordField(System.String,System.Object)">
            <summary>
            Insere um campo do registro na classe.
            </summary>
            <param name="fieldName">Nome do campo.</param>
            <param name="value">Valor do campo.</param>
        </member>
        <member name="P:GDA.Interfaces.IObjectDataRecord.LoadMappedsRecordFields">
            <summary>
            Identifica se classe deverá ou não carrega os campos do registro que já foram mapeados.
            </summary>
        </member>
        <member name="T:GDA.Interfaces.IParameterConverter">
            <summary>
            Assinatura de um conversor de parametros.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IParameterConverter.Convert(GDA.GDAParameter)">
            <summary>
            Converte um parametro do GDA para um parametro de dados.
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Interfaces.IParameterConverter2">
            <summary>
            Assinatura de um conversor de parametros que utiliza o IDbCommand como parametro.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IParameterConverter2.Converter(System.Data.IDbCommand,GDA.GDAParameter)">
            <summary>
            Converte um parametro do GDA para um parametro de dados.
            </summary>
            <param name="command">Instancia do comando onde o parametro será utilizado.</param>
            <param name="parameter">Instancia do parametro que será convertido.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Interfaces.IBaseDAO`1">
            <summary>
            
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Delete(`0)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Delete(GDA.GDASession,`0)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(`0,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(GDA.GDASession,`0,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(`0)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Insert(GDA.GDASession,`0)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.InsertOrUpdate(`0)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="objUpdate">Objeto contendo os dados.</param>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.InsertOrUpdate(GDA.GDASession,`0)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados.</param>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            /// <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            /// <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(`0,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(GDA.GDASession,`0,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(`0)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Update(GDA.GDASession,`0)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.RecoverData(`0)">
            <summary>
            Recupera os dados do objeto submetido tem como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.RecoverData(GDA.GDASession,`0)">
            <summary>
            Recupera os dados do objeto submetido tem como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Select">
            <summary>
            Carrega todos os dados contidos na tabela.
            </summary>
            <returns>Todos os dados da tabela.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Select(GDA.GDASession)">
            <summary>
            Carrega todos os dados contidos na tabela.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Todos os dados da tabela.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Select(GDA.Sql.IQuery)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="query">Dados da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Select(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Dados da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Count(GDA.Sql.Query)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Count(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Count">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Count(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Sum(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Efetua a soma de uma determina propriedade da classe T definida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Soma dos valores.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Max(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera o item com o maior valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Maior valor encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Min(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera o item com o menor valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Menor valor encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.Avg(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera a média dos valores da propriedade especificada na consulta.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Valor medio encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.Interfaces.IBaseDAO`1.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,`0)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="P:GDA.Interfaces.IPersistenceObjectBase.UserProvider">
            <summary>
            Provider utilizado para conexão com BD.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IPersistenceObjectBase.Configuration">
            <summary>
            Provider de configuração.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IPersistenceObjectBase.CreateConnection">
            <summary>
            Cria uma instância de conexão com o BD.
            </summary>
            <returns>Nova instância de conexão.</returns>
        </member>
        <member name="M:GDA.Interfaces.IPersistenceObjectBase.ExecuteCommand(System.String,GDA.GDAParameter[])">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="sqlQuery">Causa sql a ser executada.</param>
            <param name="parameters">Parametros a serem passados para o comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.IPersistenceObjectBase.ExecuteCommand(System.String)">
            <summary>
            Executa comandos sql.
            </summary>
            <param name="sqlQuery">Causa sql a ser executada.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="T:GDA.Interfaces.IProvider">
            <summary>
            Interface contendo os métodos base que são usados para gerênciar o provider
            com a base de dados.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.ExecuteCommandsOneAtATime">
            <summary>
            Identifica se os comando serão executados um de cada vez.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.SqlQueryReturnIdentity">
            <summary>
            Query sql que retorna a identidade gerada no auto incremental.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.GenerateIdentity">
            <summary>
            Identifica se a identidade da chaves da tabelas serão geradas pelo BD ou pela aplicação.
            True quando a aplicação gera a identidade.
            </summary>
            <value>
            <list type="bool">
            <item>true: quando a aplicação fica encarregada de gerar a chave.</item>
            <item>false: quando o DB fica responsável por gerar a chave</item>
            </list>
            </value>
        </member>
        <member name="M:GDA.Interfaces.IProvider.GetIdentitySelect(System.String,System.String)">
            <summary>
            Esse método com base no nome da tabela e na coluna identidade da tabela 
            recupera a consulta SQL que irá recupera o valor da chave identidade gerado
            para o registro recentemente inserido.
            </summary>
            <param name="tableName">Nome da tabela onde o registro será inserido.</param>
            <param name="identityColumnName">Nome da coluna identidade da tabela.</param>
            <returns>The modified sql string which also retrieves the identity value</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.GetIdentitySelect(GDA.Sql.TableName,System.String)">
            <summary>
            Esse método com base no nome da tabela e na coluna identidade da tabela 
            recupera a consulta SQL que irá recupera o valor da chave identidade gerado
            para o registro recentemente inserido.
            </summary>
            <param name="tableName">Nome da tabela onde o registro será inserido.</param>
            <param name="identityColumnName">Nome da coluna identidade da tabela.</param>
            <returns>The modified sql string which also retrieves the identity value</returns>
        </member>
        <member name="P:GDA.Interfaces.IProvider.ParameterPrefix">
            <summary>
            Prefixo usado nos parametros.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.ParameterSuffix">
            <summary>
            Sufixo usado nos parametros.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.Name">
            <summary>
            Nome do do tipo de classe de acesso do provider.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.SupportSQLCommandLimit">
            <summary>
            Identifica se o provider tem suporte ao método SQLCommandLimit.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IProvider.GetDbType(System.Type)">
            <summary>
            Obtem um número inteiro que corresponde ao tipo da base de dados que representa o tipo
            informado. O valor de retorno pode ser convertido em um tipo válido (enum value) para 
            o atual provider. Esse method é chamado para traduzir os tipos do sistema para os tipos
            do banco de dados que não são convertidos explicitamento.
            </summary>
            <param name="type">Tipo do sistema.</param>
            <returns>Tipo correspondente da base de dados.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.GetDbType(System.String,System.Boolean)">
            <summary>
            Esse método converte a string (extraída da tabelas do banco de dados) para o tipo do system
            correspondente.
            </summary>
            <param name="dbType">Nome do tipo usado no banco de dados.</param>
            <param name="isUnsigned">Valor boolean que identifica se o tipo é unsigned.</param>
            <returns>Valor do enumerator do tipo correspondente do banco de dados. O retorno é um número
            inteiro por causa que em alguns provider o enumerations não seguem o padrão do DbType definido
            no System.Data.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.GetSystemType(System.Int64)">
            <summary>
            Esse método retorna o tipo do sistema correspodente ao tipo specifico indicado no long.
            A implementação padrão não retorna exception, mas sim null.
            </summary>
            <param name="dbType">Tipo especifico do provider.</param>
            <returns>Tipo do sistema correspondente.</returns>
        </member>
        <member name="P:GDA.Interfaces.IProvider.MinimumSupportedDateTime">
            <summary>
            Retorna o valor minimo suportado por um valor DateTime.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.MaximumSupportedDateTime">
            <summary>
            Retorna o valor maximo suportado por um valor DateTime.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.StatementTerminator">
            <summary>
            Obtem a caracter ou string usado para terminar o delimitar o statement.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IProvider.IsReservedWord(System.String)">
            <summary>
            Determina se uma palavra é reservada and necessita de um atribuição entre quoting.
            </summary>
            <returns>True se a palavra for reservada.</returns>
        </member>
        <member name="P:GDA.Interfaces.IProvider.QuoteCharacter">
            <summary>
            Obtem o caracter usado para delimitar os parametros de string.
            </summary>
            <returns>The quote character.</returns>
        </member>
        <member name="P:GDA.Interfaces.IProvider.Capabilities">
            <summary>
            Obtem um enum descrevendo as capacidades suportadas pelo banco de dados. 
            Por padrão todas são suportadas. Veja <see cref="T:GDA.Provider.Capability"/> para mais 
            detalhes sobre as capacidades disponíveis.	
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.ReservedsWords">
            <summary>
            Lista das palavras reservadas do provider.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IProvider.QuoteExpression(System.String)">
            <summary>
            Obtem uma container (Quote) para permitir que colunas com nomes especiais
            sejam inseridas na consulta.
            </summary>
            <param name="word">Nome da coluna ou do paramenrto.</param>
            <returns>Expressão com a formatação adequada.</returns>
        </member>
        <member name="P:GDA.Interfaces.IProvider.QuoteExpressionBegin">
            <summary>
            Quote inicial da expressão.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProvider.QuoteExpressionEnd">
            <summary>
            Quote final da expressão.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IProvider.BuildTableName(GDA.Sql.TableName)">
            <summary>
            Transforma o nome de tabela representado pela classe <see cref="T:GDA.Sql.TableName"/>
            em uma string que será usada na consulta do banco de dados.
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.CreateConnection">
            <summary>
            Cria uma instância do connection que o provider representa.
            </summary>
            <returns>Connection.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.CreateCommand">
            <summary>
            Cria uma instância do command que o provider representa.
            </summary>
            <returns>Command.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.CreateDataAdapter">
            <summary>
            Cria uma instância do DataAdapter que o provider representa.
            </summary>
            <returns>DataAdapter.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.CreateParameter">
            <summary>
            Cria uma instância do Parameter que o provider representa.
            </summary>
            <returns>Parameter.</returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.SQLCommandLimit(System.Collections.Generic.List{GDA.Mapper},System.String,System.Int32,System.Int32)">
            <summary>
            Métodos responsável por tratar o comando sql e adapta-lo para executar
            estruturas de paginação.
            </summary>
            <param name="sqlQuery">Clausula SQL que será tratada.</param>
            <param name="startRecord">Apartir da qual deve começar o resultado.</param>
            <param name="size">Quantidade de registros por resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Interfaces.IProvider.SetParameterValue(System.Data.IDbDataParameter,System.Object)">
            <summary>
            Converte o valor do parametro.
            </summary>
            <param name="parameter">Instancia do parametro.</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="T:GDA.Interfaces.IProviderConfiguration">
            <summary>
            Fornece as informações adicionais para o provider.
            </summary>
        </member>
        <member name="E:GDA.Interfaces.IProviderConfiguration.ConnectionCreated">
            <summary>
            Evento acionado quando uma conexão é criada pelo provedor.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProviderConfiguration.ProviderIdentifier">
            <summary>
            Identificador único do provider de configuração.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProviderConfiguration.Provider">
            <summary>
            Gets And Sets o provider relacionado.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProviderConfiguration.ConnectionString">
            <summary>
            Gets And Sets o connectionString do provider.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.IProviderConfiguration.Dialect">
            <summary>
            Gets And Sets do dialeto que será usado no provider.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.IProviderConfiguration.CreateConnection">
            <summary>
            Cria uma conexão com banco de dados já com o connection string configurado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Interfaces.IProviderConfiguration.GetDatabaseAnalyzer">
            <summary>
            Analyzer relacionado com o provider.
            </summary>
        </member>
        <member name="T:GDA.Interfaces.ISimpleBaseDAO">
            <summary>
            Interface que possui os método simples relacionados com a DAO.
            </summary>
        </member>
        <member name="P:GDA.Interfaces.ISimpleBaseDAO.Configuration">
            <summary>
            Provider de configuração usado na DAO.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Delete(GDA.GDASession,System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Delete(System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(GDA.GDASession,System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(GDA.GDASession,System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Insert(System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.InsertOrUpdate(GDA.GDASession,System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados.</param>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.InsertOrUpdate(System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="objUpdate">Objeto contendo os dados.</param>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(GDA.GDASession,System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(GDA.GDASession,System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.Update(System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="T:GDA.Interfaces.ISimpleBaseDAO`1">
            <summary>
            Interface que possui os método simples relacionados com a DAO.
            </summary>
        </member>
        <member name="M:GDA.Interfaces.ISimpleBaseDAO`1.SelectToDataRecord(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a consulta submetida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.BaseDAOMapping">
            <summary>
            Armazena os dados da DAO base relacionada com a classe.
            </summary>
        </member>
        <member name="P:GDA.Mapping.BaseDAOMapping.TypeInfo">
            <summary>
            Informações do tipo relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.BaseDAOMapping.GenericTypes">
            <summary>
            Nome dos tipos genericos usados para instancia da DAO.
            </summary>
        </member>
        <member name="M:GDA.Mapping.BaseDAOMapping.#ctor(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Constroi uma instancia com base no dados do elemento.
            </summary>
            <param name="element"></param>
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.BaseDAOMapping.#ctor(GDA.Mapping.TypeInfo,System.String[])">
            <summary>
            Constrói uma instancia do mapeamento da DAO.
            </summary>
            <param name="typeInfo">Informações do tipo da DAO.</param>
            <param name="genericTypes">Tipo</param>
        </member>
        <member name="T:GDA.Mapping.ClassMapping">
            <summary>
            Armazena os dados de uma classe mapeada.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.TypeInfo">
            <summary>
            Informações do tipo da classe.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.Table">
            <summary>
            Nome da tabela que a classe mapea.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.Schema">
            <summary>
            Esquema da tabela que a classe mapea.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.BaseDAO">
            <summary>
            DAO base relacionada com a classe.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.Provider">
            <summary>
            Provedor relacionado com o mapeamento.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ClassMapping.Properties">
            <summary>
            Lista das propriedades mapeada para a classe.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ClassMapping.#ctor(System.Xml.XmlElement,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constrói uma instancia com base nos dados do elemento.
            </summary>
            <param name="element"></param>
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
            <param name="defaultProviderName">Nome do provider padrão que poderá ser usado pela classe.</param>
            <param name="defaultProviderConfigurationName">Nome da configuração do provedor que podera ser usada</param>
            <param name="defaultConnectionString">String de conexão padrão que poderá ser usada.</param>
            <param name="defaultSchema">Esquema padrão da tabela da classe.</param>
        </member>
        <member name="M:GDA.Mapping.ClassMapping.#ctor(GDA.Mapping.TypeInfo,System.String,System.String,GDA.Mapping.BaseDAOMapping,GDA.Mapping.ProviderMapping,System.Collections.Generic.IEnumerable{GDA.Mapping.PropertyMapping})">
            <summary>
            Constrói uma instancia do mapeamento da classe.
            </summary>
            <param name="typeInfo">Informações do tipo.</param>
            <param name="table">Nome da tabela equivalente do BD.</param>
            <param name="schema">Esquema onde a tabela está inserida.</param>
            <param name="baseDAO">Informações sobre a DAO relacionada.</param>
            <param name="provider">Informações do Provider relacionado.</param>
            <param name="properties">Propriedades mapeadas.</param>
        </member>
        <member name="M:GDA.Mapping.ClassMapping.GetPersistenceClass">
            <summary>
            Recupera o atribute de classe persistente.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.ElementMapping.GetAttributeString(System.Xml.XmlElement,System.String)">
            <summary>
            Recupera o valor da string contida no atributo.
            </summary>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.ElementMapping.GetAttributeString(System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>
            Recupera o valor da string contida no atributo.
            </summary>
            <param name="attr"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.ElementMapping.GetAttributeString(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Recupera o valor da string contida no atributo.
            </summary>
            <param name="attr"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.ElementMapping.FirstOrDefault``1(System.Collections.IEnumerable)">
            <summary>
            Recupera o primeiro elemento ou o padrão.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.ForeignItemMapping">
            <summary>
            Armazena os dados de um item estrangeiro do mapeamento.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ForeignItemMapping.TypeOfClassRelated">
            <summary>
            Tipo da classe que representa a tabela relacionada.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ForeignItemMapping.PropertyName">
            <summary>
            Nome da propriedade da classe do tipo especificado aonde o relacionamento será feito.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ForeignItemMapping.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ForeignItemMapping.#ctor(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.ForeignItemMapping.#ctor(GDA.Mapping.TypeInfo,System.String,System.String)">
            <summary>
            Constrói uma instancia do mapeamento do item estrangeiro.
            </summary>
            <param name="typeOfClassRelated">Tipo da classe relacionada.</param>
            <param name="propertyName">Nome da propriedade relacionada.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
        </member>
        <member name="T:GDA.Mapping.ForeignKeyMapping">
            <summary>
            Armazena os dados do mapeamento de uma chave estrangeira.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ForeignKeyMapping.#ctor(System.Xml.XmlElement,System.String,System.String)">
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.ForeignKeyMapping.#ctor(GDA.Mapping.TypeInfo,System.String,System.String)">
            <summary>
            Constrói uma instancia do mapeamento da chave estrangeira.
            </summary>
            <param name="typeOfClassRelated">Tipo da classe relacionada.</param>
            <param name="propertyName">Nome da propriedade relacionada.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
        </member>
        <member name="T:GDA.Mapping.ForeignMemberMapping">
            <summary>
            Armazena os dados do mapeamento de um membro estrangeiro.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ForeignMemberMapping.#ctor(System.Xml.XmlElement,System.String,System.String)">
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.ForeignMemberMapping.#ctor(GDA.Mapping.TypeInfo,System.String,System.String)">
            <summary>
            Constrói uma instancia do mapeamento do membro estrangeiro.
            </summary>
            <param name="typeOfClassRelated">Tipo da classe relacionada.</param>
            <param name="propertyName">Nome da propriedade relacionada.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
        </member>
        <member name="T:GDA.Mapping.MappingExtractor">
            <summary>
            Classe responsável por realizar a extração dos mapeamento.
            </summary>
        </member>
        <member name="M:GDA.Mapping.MappingExtractor.ExtractXmlMapping(System.Reflection.Assembly,System.IO.Stream)">
            <summary>
            Extrai o mapeamento xml contido no assembly informado.
            </summary>
            <param name="assembly"></param>
            <param name="outStream">Stream de saída.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.PropertyMappingBuilder`1">
            <summary>
            Classe que auxilia na construção do mapeamento das propriedades.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Create(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adiciona as propridades para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adiciona as propridades para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            Adiciona a propriedade para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,GDA.DirectionParameter)">
            <summary>
            Adiciona a propriedade para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,GDA.PersistenceParameterType)">
            <summary>
            Adiciona a propriedade para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},GDA.DirectionParameter)">
            <summary>
            Adiciona a propriedade para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMappingBuilder`1.Add(GDA.Mapping.PropertyMapping)">
            <summary>
            Adiciona a propriedade para o mapeamento.
            </summary>
            <param name="propertiesSelector"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.ReferenceMapping">
            <summary>
            Representa um referencia de mapeamento.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ReferenceMapping.AssemblyName">
            <summary>
            Nome do assembly onde o mapeamento está inserido.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ReferenceMapping.ResourceName">
            <summary>
            Nome do resource do mapeamento.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ReferenceMapping.FileName">
            <summary>
            Arquivo aonde o mapemento está inserido.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ReferenceMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Cria uma instancia com base nos dados contidos no elemento informado.
            </summary>
            <param name="element"></param>
        </member>
        <member name="T:GDA.Mapping.SqlQueryParameterMapping">
            <summary>
            Armazena os dados do mapeamento de uma parametro do GDA.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryParameterMapping.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryParameterMapping.TypeName">
            <summary>
            Nome do tipo do parametro no sistema.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryParameterMapping.DefaultValue">
            <summary>
            Valor padrão do parametro.
            </summary>
        </member>
        <member name="M:GDA.Mapping.SqlQueryParameterMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Constrói uma instancia do mapeamento do parametro da consulta.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:GDA.Mapping.SqlQueryParameterMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Constrói uma instancia do mapeamento do parametro da consulta.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="typeName">Nome do tipo dao parametro.</param>
            <param name="defaultValue">Valor padrão do parametro.</param>
        </member>
        <member name="M:GDA.Mapping.SqlQueryParameterMapping.ValidateTypeName">
            <summary>
            Valida o nome do tipo do parametro.
            </summary>
        </member>
        <member name="T:GDA.Mapping.GeneratorKeyMapping">
            <summary>
            Armazena os dados do gerador de chave mapeado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.GeneratorKeyMapping.Name">
            <summary>
            Nome do gerador.
            </summary>
        </member>
        <member name="P:GDA.Mapping.GeneratorKeyMapping.ClassType">
            <summary>
            Tipo da classe do gerador.
            </summary>
        </member>
        <member name="T:GDA.Mapping.MappingData">
            <summary>
            Armazena os dados do mapeamento.
            </summary>
        </member>
        <member name="F:GDA.Mapping.MappingData._references">
            <summary>
            Relação das referencias já carregadas.
            </summary>
        </member>
        <member name="M:GDA.Mapping.MappingData.GetMapping(System.Type)">
            <summary>
            Recupera o mapeamento do tipo informado.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.GetMapping(System.String)">
            <summary>
            Recupera o mapeamento do classes.
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.GetMappings">
            <summary>
            Recupera os mapeamentos do sistema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.AddMapping(GDA.Mapping.ClassMapping)">
            <summary>
            Adiciona o mapeamento da classe.
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:GDA.Mapping.MappingData.RemoteMapping(System.String)">
            <summary>
            Remove o mapeamento.
            </summary>
            <param name="typeInfoFullname">Nome do tipo mapeado.</param>
        </member>
        <member name="M:GDA.Mapping.MappingData.GetSqlQuery(System.String)">
            <summary>
            Recupera a consulta SQL mapeada.
            </summary>
            <param name="queryName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.GetSqlQueries">
            <summary>
            Recupera as consultas mapeadas no sistema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.AddSqlQuery(GDA.Mapping.SqlQueryMapping)">
            <summary>
            Adiciona o mapeamento de uma consulta no sistema.
            </summary>
            <param name="query">Dados da consulta.</param>
        </member>
        <member name="M:GDA.Mapping.MappingData.RemoteSqlQuery(System.String)">
            <summary>
            Remove a consulta SQL mapeada no sistema.
            </summary>
            <param name="queryName">Nome da consulta.</param>
        </member>
        <member name="M:GDA.Mapping.MappingData.Import(System.String,System.String)">
            <summary>
            Importa os dados do mapeamento.
            </summary>
            <param name="assemblyString">Assembly onde o mapeamento está inserido.</param>
            <param name="resourceName"></param>
        </member>
        <member name="M:GDA.Mapping.MappingData.Import(System.String)">
            <summary>
            Importa os dados de um arquivo.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:GDA.Mapping.MappingData.Import(System.IO.Stream)">
            <summary>
            Importa os dados do mapeamento contido na stream.
            </summary>
            <param name="inputStream"></param>
        </member>
        <member name="M:GDA.Mapping.MappingData.RefactorSystemMapping(System.Reflection.Assembly)">
            <summary>
            Realiza um refactor no mapeamento do sistema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.MappingData.RefactorClass(System.Type,System.String,System.Xml.XmlDocument)">
            <summary>
            Processa a classe e recupera um elemento que representa seu mapeamento.
            </summary>
            <param name="type"></param>
            <param name="baseNamespace">Namespace base.</param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.ModelsNamespaceMapping">
            <summary>
            Carrega os dados do mapeamento do namespace dos modelos do sisitema.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ModelsNamespaceMapping.Namespace">
            <summary>
            Namespace onde os modelos estão inseridos.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ModelsNamespaceMapping.Assembly">
            <summary>
            Assembly onde o namespace está inserido.
            </summary>
        </member>
        <member name="T:GDA.Mapping.IPropertyMappingInfo">
            <summary>
            Armazena as informações básica do mapeamento da propriedade
            </summary>
        </member>
        <member name="P:GDA.Mapping.IPropertyMappingInfo.Name">
            <summary>
            Nome da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.IPropertyMappingInfo.Column">
            <summary>
            Nome da coluna que a propriedade mapea.
            </summary>
        </member>
        <member name="P:GDA.Mapping.IPropertyMappingInfo.Direction">
            <summary>
            Direção da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.IPropertyMappingInfo.ParameterType">
            <summary>
            Tipo do parametro que a propriedade representa.
            </summary>
        </member>
        <member name="T:GDA.Mapping.PropertyMappingInfo">
            <summary>
            Armazena as informações do mapeamento da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMappingInfo.Name">
            <summary>
            Nome da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMappingInfo.Column">
            <summary>
            Nome da coluna que a propriedade mapea.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMappingInfo.Direction">
            <summary>
            Direção da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMappingInfo.ParameterType">
            <summary>
            Tipo do parametro que a propriedade representa.
            </summary>
        </member>
        <member name="T:GDA.Mapping.PropertyMapping">
            <summary>
            Armazena os dados do mapeamento da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.Name">
            <summary>
            Nome da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.Column">
            <summary>
            Nome da coluna que a propriedade mapea.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.ParameterType">
            <summary>
            Tipo do parametro que a propriedade representa.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.Size">
            <summary>
            Tamanho do campo.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.Direction">
            <summary>
            Direção da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.ForeignKey">
            <summary>
            Dados da chave estrangeira relacionada.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.ForeignMember">
            <summary>
            Dados do membro estrangeiro relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.Validators">
            <summary>
            Validadores da propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.GeneratorKeyName">
            <summary>
            Nome do gerador de codigo relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.IsNotPersists">
            <summary>
            Identifica que a propriedade não deve ser persistida.
            </summary>
        </member>
        <member name="P:GDA.Mapping.PropertyMapping.IsNotNull">
            <summary>
            Identifica que a propriedade não aceita valores nulos.
            </summary>
        </member>
        <member name="M:GDA.Mapping.PropertyMapping.#ctor(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.PropertyMapping.#ctor(System.String,System.String,GDA.PersistenceParameterType,System.Int32,System.Boolean,System.Boolean,GDA.DirectionParameter,System.String,GDA.Mapping.ForeignKeyMapping,GDA.Mapping.ForeignMemberMapping,System.Collections.Generic.IEnumerable{GDA.Mapping.ValidatorMapping})">
            <summary>
            Constrói uma instancia do mapeamento da propriedade.
            </summary>
            <param name="name">Nome da propriedade</param>
            <param name="column">Nome da coluna relacionada com a propriedade.</param>
            <param name="parameterType">Tipo do parametro do mapeamento.</param>
            <param name="size">Tamanho da coluna.</param>
            <param name="isNotPersists">Identifica se a propriedade não para ser persistida.</param>
            <param name="isNotNull">Identifica se a propriedade aceita valores nulos.</param>
            <param name="direction">Direção do mapeamento da propriedade.</param>
            <param name="generatorKeyName">Nome do gerador de chave usado pela propriedade.</param>
            <param name="foreignKey">Dados da chave estrangeira relacionada.</param>
            <param name="foreignMember">Dados do membro estrangeiro relacionado.</param>
            <param name="validators">Validadores aplicados a propriedade.</param>
        </member>
        <member name="M:GDA.Mapping.PropertyMapping.GetPersistenceProperty">
            <summary>
            Recupera uma instancia do atributo de persistencia relacionado
            </summary>
            <param name="pi"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Mapping.PropertyMapping.Build``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Constrói um mapeamento com base no tipo.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertySelector"></param>
            <param name="column">Nome da coluna relacionada com a propriedade.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.Mapping.ProviderMapping">
            <summary>
            Armazena os dados do mapeamento do provedor relacionado com a classe mapeada.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ProviderMapping.Name">
            <summary>
            Nome do provedor que será usado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ProviderMapping.ConfigurationName">
            <summary>
            Nome da configuração relacionada.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ProviderMapping.ConnectionString">
            <summary>
            String de conexão relacionada com o provedor.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ProviderMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Constrói uma instancia com base no dados do elemento.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:GDA.Mapping.ProviderMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Constrói uma instancia do mapeamento do Provider.
            </summary>
            <param name="name">Nome do provider.</param>
            <param name="configurationName">Nome da configuração do provider.</param>
            <param name="connectionString">String de conexão que será usada pelo provider.</param>
        </member>
        <member name="T:GDA.Mapping.SqlQueryMapping">
            <summary>
            Armazena os dados do mapeamento de uma consulta sql.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryMapping.Name">
            <summary>
            Nome da consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryMapping.UseDatabaseSchema">
            <summary>
            Verifica se é usado o esquema do banco de dados para fazer a consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryMapping.Parameters">
            <summary>
            Parametros usados na consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryMapping.Return">
            <summary>
            Informações sobre o retorno da consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryMapping.Query">
            <summary>
            SQL da consulta.
            </summary>
        </member>
        <member name="M:GDA.Mapping.SqlQueryMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Constrói uma instancia do mapeamento da consulta.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:GDA.Mapping.SqlQueryMapping.#ctor(System.String,System.Boolean,GDA.Mapping.SqlQueryReturnMapping,System.String,System.Collections.Generic.IEnumerable{GDA.Mapping.SqlQueryParameterMapping})">
            <summary>
            Constrói uma instancia do mapeamento da consulta.
            </summary>
            <param name="name">Nome da consulta.</param>
            <param name="useDatabaseSchema">Identifica se sera usado o esquema do banco de dados para fazer a consulta.</param>
            <param name="returnMapping">Informações sobre o retorno da consulta.</param>
            <param name="query">SQL da consulta.</param>
            <param name="parameters">Parametros usados na consulta.</param>
        </member>
        <member name="T:GDA.Mapping.SqlQueryReturnMapping">
            <summary>
            Mapeamento do resultado da consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryReturnMapping.ClassTypeName">
            <summary>
            Nome do tipo da classe do retorno.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryReturnMapping.ReturnProperties">
            <summary>
            Relação das propriedade do retorno da consulta.
            </summary>
        </member>
        <member name="M:GDA.Mapping.SqlQueryReturnMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Constrói uma instancia do mapeamento do retorno da consulta.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:GDA.Mapping.SqlQueryReturnMapping.#ctor(System.String,System.Collections.Generic.IEnumerable{GDA.Mapping.SqlQueryReturnPropertyMapping})">
            <summary>
            Constrói uma instancia do mapeamento do retorno da consulta.
            </summary>
            <param name="classTypeName">Nome do tipo da classe do retorno.</param>
            <param name="returnProperties">Propriedades do retorno da consulta.</param>
        </member>
        <member name="T:GDA.Mapping.SqlQueryReturnPropertyMapping">
            <summary>
            Armazena os dados do mapeamento da propriedade de retorno da consulta.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryReturnPropertyMapping.Name">
            <summary>
            Nome da propriedade do retorno.
            </summary>
        </member>
        <member name="P:GDA.Mapping.SqlQueryReturnPropertyMapping.Column">
            <summary>
            Nome da coluna do retorno.
            </summary>
        </member>
        <member name="M:GDA.Mapping.SqlQueryReturnPropertyMapping.#ctor(System.Xml.XmlElement)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:GDA.Mapping.TypeInfo.Name">
            <summary>
            Nome do tipo.
            </summary>
        </member>
        <member name="P:GDA.Mapping.TypeInfo.Assembly">
            <summary>
            Assembly relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.TypeInfo.Namespace">
            <summary>
            Namespace relacionado.
            </summary>
        </member>
        <member name="P:GDA.Mapping.TypeInfo.FullnameWithAssembly">
            <summary>
            Nome completo do tipo
            </summary>
        </member>
        <member name="P:GDA.Mapping.TypeInfo.Fullname">
            <summary>
            Nome completo do tipo.
            </summary>
        </member>
        <member name="M:GDA.Mapping.TypeInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name">Nome do tipo que será processado.</param>
            <param name="mappingNamespace">Namespace informado no mapeamento.</param>
            <param name="mappingAssembly">Assembly informado no mapeamento.</param>
        </member>
        <member name="M:GDA.Mapping.TypeInfo.#ctor(System.Type)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:GDA.Mapping.TypeInfo.#ctor(System.String)">
            <summary>
            Constrói uma instancia com base no nome do tipo.
            </summary>
            <param name="typeFullname"></param>
        </member>
        <member name="T:GDA.Mapping.ValidatorMapping">
            <summary>
            Armazena os dados do validador que será usado no propriedade.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ValidatorMapping.Name">
            <summary>
            Nome do tipo.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ValidatorMapping.Parameters">
            <summary>
            Parametros do validador.
            </summary>
        </member>
        <member name="M:GDA.Mapping.ValidatorMapping.#ctor(System.String,System.Collections.Generic.IEnumerable{GDA.Mapping.ValidatorParamMapping})">
            <summary>
            Constrói uma instancia do mapeamento da validador.
            </summary>
            <param name="name"></param>
            <param name="parameters"></param>
        </member>
        <member name="T:GDA.Mapping.ValidatorParamMapping">
            <summary>
            Armazena os dados do parametro da classe do validador.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ValidatorParamMapping.Name">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:GDA.Mapping.ValidatorParamMapping.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="T:GDA.Provider.CreateConnectionEvent">
            <summary>
            Representa o evento que é acionado quando uma conexão é criada no 
            provedor de configuração.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:GDA.Provider.CreateConnectionEventArgs">
            <summary>
            Classe que armazena os argumentos que são informados quando
            uma conexão do provedor de configuração é criada.
            </summary>
        </member>
        <member name="P:GDA.Provider.CreateConnectionEventArgs.Connection">
            <summary>
            Instancia da conexão que foi criada.
            </summary>
        </member>
        <member name="M:GDA.Provider.CreateConnectionEventArgs.#ctor(System.Data.IDbConnection)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="connection">Instancia da conexão criada.</param>
        </member>
        <member name="F:GDA.Provider.Capability.BatchQuery">
            <summary>
            This capability signifies that the database backend supports executing 
            multiple SQL statements in one batch. When this capability is not present
            Gentle will perform two queries for insert operations on tables with 
            autogenerated primary keys (one to perform the insert and one for 
            retrieving the generated key).
            </summary>
        </member>
        <member name="F:GDA.Provider.Capability.Paging">
            <summary>
            This capability signifies that the database backend supports paging of
            result sets, i.e. that SQL can be generated to retrieve only a certain
            set of rows.
            </summary>
        </member>
        <member name="F:GDA.Provider.Capability.NamedParameters">
            <summary>
            This capability signifies that the data provider supports named parameters.
            If not supported, positional parameters will be used instead.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.#ctor(GDA.Provider.MsAccess.MsAccessProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="providerConfiguration"></param>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetTables(System.String)">
            <summary>
            Recupera a estrutura da tabela.
            http://msdn.microsoft.com/library/en-us/oledb/htm/oledbtables_rowset.asp
            Restriction columns: TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE ("TABLE","VIEW")
            Schema columns: TABLE_GUID, DESCRIPTION, TABLE_PROPID, DATE_CREATED, DATE_MODIFIED
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetColumns(System.String)">
            <summary>
            Recupera as informações das colunas da tabela.
            http://msdn.microsoft.com/library/en-us/oledb/htm/oledbcolumns_rowset.asp
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/oledb/htm/oledbtype_indicators.asp
            Restriction columns: TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
            Schema columns: DATA_TYPE, ORDINAL_POSITION, COLUMN_HASDEFAULT, COLUMN_DEFAULT, 
            	COLUMN_FLAGS, IS_NULLABLE, NUMERIC_PRECISION, NUMERIC_SCALE, 
            	CHARACTER_MAXIMUM_LENGTH, CHARACTER_OCTET_LENGTH
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetPrimaryKeys(System.String)">
            <summary>
            http://msdn.microsoft.com/library/en-us/oledb/htm/oledbprimary_keys_rowset.asp
            Restriction columns: TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
            Schema columns: COLUMN_NAME, COLUMN_GUID, COLUMN_PROPID, ORDINAL, PK_NAME
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetPrimaryKeyInfo(System.String)">
            <summary>
            Recupera as informações sobre as chaves primárias da tabela.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetForeignKeys(System.String)">
            <summary>
            Recupera as chaves estrangeiras da tabela.
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/oledb/htm/oledbtable_constraints_rowset.asp
            Restriction columns: PK_TABLE_CATALOG, PK_TABLE_SCHEMA, PK_TABLE_NAME, 
            FK_TABLE_CATALOG, FK_TABLE_SCHEMA, FK_TABLE_NAME
            Schema columns: FK_COLUMN_NAME, FK_COLUMN_GUID, FK_COLUMN_PROPID, UPDATE_RULE,
            DELETE_RULE, PK_NAME, FK_NAME, DEFERRABILITY 
            </summary>
        </member>
        <member name="T:GDA.Provider.MsAccess.MsAccessAnalyzer.DBCOLUMNFLAGS">
            <summary>
            This enumeration represents the bitmask values of the COLUMN_FLAGS value used below.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetColumnData(GDA.Analysis.TableMap)">
            <summary>
            Este método preenche os dados das colunas da table.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetPrimaryKeyData">
            <summary>
            Recupera os dados das chaves primárias da tabela.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessAnalyzer.GetForeignKeyData">
            <summary>
            Recupera os dados de todas as chaves estrangeiras.
            </summary>
        </member>
        <member name="T:GDA.Provider.MsAccess.MsAccessProvider">
            <summary>
            Provider da base de dados Microsoft Access.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProvider.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsAccess.MsAccessProvider.QuoteExpressionBegin">
            <summary>
            Quote inicial da expressão.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsAccess.MsAccessProvider.QuoteExpressionEnd">
            <summary>
            Quote final da expressão.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProvider.SQLCommandLimit(System.Collections.Generic.List{GDA.Mapper},System.String,System.Int32,System.Int32)">
            <summary>
            Métodos responsável por tratar o comando sql e adapta-lo para executar
            estruturas de paginação.
            </summary>
            <param name="sqlQuery">Clausula SQL que será tratada.</param>
            <param name="startRecord">Apartir da qual deve começar o resultado.</param>
            <param name="size">Quantidade de registros por resultado.</param>
            <returns>Consulta sql tratada</returns>
        </member>
        <member name="P:GDA.Provider.MsAccess.MsAccessProvider.SupportSQLCommandLimit">
            <summary>
            Identifica que o provider suporta paginação usando o comando sql.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsAccess.MsAccessProvider.QuoteCharacter">
            <summary>
            Obtem o caracter usado para delimitar os parametros de string.
            </summary>
            <returns>The quote character.</returns>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProvider.QuoteExpression(System.String)">
            <summary>
            Obtem uma container (Quote) para permitir que colunas com nomes especiais
            sejam inseridas na consulta.
            </summary>
            <param name="word">Nome da coluna ou do paramenrto.</param>
            <returns>Expressão com a formatação adequada.</returns>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProvider.GetDbType(System.Type)">
            <summary>
            Obtem um número inteiro que corresponde ao tipo da base de dados que representa o tipo
            informado. O valor de retorno pode ser convertido em um tipo válido (enum value) para 
            o atual provider. Esse method é chamado para traduzir os tipos do sistema para os tipos
            do banco de dados que não são convertidos explicitamento.
            </summary>
            <param name="type">Tipo do sistema.</param>
            <returns>Tipo correspondente da base de dados.</returns>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProvider.GetSystemType(System.Int64)">
            <summary>
            Esse método retorna o tipo do sistema correspodente ao tipo specifico indicado no long.
            A implementação padrão não retorna exception, mas sim null.
            </summary>
            <param name="dbType">Tipo especifico do provider.</param>
            <returns>Tipo do sistema correspondente.</returns>
        </member>
        <member name="F:GDA.Provider.MsAccess.MsAccessProviderConfiguration.currentProvider">
            <summary>
            Provider padrão.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsAccess.MsAccessProviderConfiguration.Provider">
            <summary>
            Gets And Sets o provider relacionado.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProviderConfiguration.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="connectionString">Connection string para conexão com a BD.</param>
        </member>
        <member name="M:GDA.Provider.MsAccess.MsAccessProviderConfiguration.GetDatabaseAnalyzer">
            <summary>
            Analyzer relacionado com o provider.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSql92Analyzer.select">
            <summary>
            Consulta para recupera os dados das tabelas.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSql92Analyzer.foreignKeysTables">
            <summary>
            Consulta usada para recuperar todos as chaves estrangeiras das tabelas.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSql92Analyzer.#ctor(GDA.Provider.MsSql.MsSqlProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSql92Analyzer.GetBoolean(System.String)">
            <summary>
            Recuperae o valor booleano contido na string.
            </summary>
            <param name="boolean"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSql92Analyzer.Analyze(System.String)">
            <summary>
            Please refer to the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> class and the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> 
            interface it implements a description of this method.
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSql92Analyzer.Analyze(System.String,System.String)">
            <summary>
            Please refer to the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> class and the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> 
            interface it implements a description of this method.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlAnalyzer.#ctor(GDA.Provider.MsSql.MsSqlProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlAnalyzer.Analyze(System.String)">
            <summary>
            Please refer to the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> class and the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> 
            interface it implements a description of this method.
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlAnalyzer.Analyze(System.String,System.String)">
            <summary>
            Please refer to the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> class and the <see cref="T:GDA.Analysis.DatabaseAnalyzer"/> 
            interface it implements a description of this method.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlAnalyzer.GetIdentityInformation(GDA.Analysis.TableMap)">
            <summary>
            Recupera as informações sobre a chave identidade da tabela.
            </summary>
            <param name="map"></param>
        </member>
        <member name="T:GDA.Provider.MsSql.MsSqlProvider">
            <summary>
            Provide da base de dados Microsoft SqlServer.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProvider._msSqlDialect">
            <summary>
            Dialeto padrão do provedor.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProvider.MsSqlDialect">
            <summary>
            Dialeto do Provider.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.SQLCommandLimit(System.Collections.Generic.List{GDA.Mapper},System.String,System.Int32,System.Int32)">
            <summary>
            Métodos responsável por tratar o comando sql e adapta-lo para executar
            estruturas de paginação.
            </summary>
            <param name="sqlQuery">Clausula SQL que será tratada.</param>
            <param name="startRecord">Apartir da qual deve começar o resultado.</param>
            <param name="size">Quantidade de registros por resultado.</param>
            <returns>Consulta sql tratada</returns>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProvider.SupportSQLCommandLimit">
            <summary>
            Identifica que o provider suporta paginação usando o comando sql.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProvider.QuoteExpressionBegin">
            <summary>
            Quote inicial da expressão.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProvider.QuoteExpressionEnd">
            <summary>
            Quote final da expressão.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.GetDbType(System.Type)">
            <summary>
            Obtem um número inteiro que corresponde ao tipo da base de dados que representa o tipo
            informado. O valor de retorno pode ser convertido em um tipo válido (enum value) para 
            o atual provider. Esse method é chamado para traduzir os tipos do sistema para os tipos
            do banco de dados que não são convertidos explicitamento.
            </summary>
            <param name="type">Tipo do sistema.</param>
            <returns>Tipo correspondente da base de dados.</returns>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.GetDbType(System.String,System.Boolean)">
            <summary>
            Esse método converte a string (extraída da tabelas do banco de dados) para o tipo do system
            correspondente.
            </summary>
            <param name="dbType">Nome do tipo usado no banco de dados.</param>
            <param name="isUnsigned">Valor boolean que identifica se o tipo é unsigned.</param>
            <returns>Valor do enumerator do tipo correspondente do banco de dados. O retorno é um número
            inteiro por causa que em alguns provider o enumerations não seguem o padrão do DbType definido
            no System.Data.</returns>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.GetSystemType(System.Int64)">
            <summary>
            Esse método retorna o tipo do sistema correspodente ao tipo specifico indicado no long.
            A implementação padrão não retorna exception, mas sim null.
            </summary>
            <param name="dbType">Tipo especifico do provider.</param>
            <returns>Tipo do sistema correspondente.</returns>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProvider.QuoteCharacter">
            <summary>
            Obtem o caracter usado para delimitar os parametros de string.
            </summary>
            <returns>The quote character.</returns>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProvider.QuoteExpression(System.String)">
            <summary>
            Obtem uma container (Quote) para permitir que colunas com nomes especiais
            sejam inseridas na consulta.
            </summary>
            <param name="word">Nome da coluna ou do paramenrto.</param>
            <returns>Expressão com a formatação adequada.</returns>
        </member>
        <member name="T:GDA.Provider.MsSql.MsSqlProviderDialects">
            <summary>
            Possíveis dialetos do provedor do sql server.
            </summary>
        </member>
        <member name="T:GDA.Provider.MsSql.MsSqlProviderConfiguration">
            <summary>
            Configuração para conexão com a base de dados SqlServer.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProviderConfiguration._dataBase">
            <summary>
            Nome da base de dados.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProviderConfiguration._server">
            <summary>
            Nome do servidor da base de dados.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProviderConfiguration._user">
            <summary>
            Usuário para acesso.
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProviderConfiguration._password">
            <summary>
            Senha do usuário
            </summary>
        </member>
        <member name="F:GDA.Provider.MsSql.MsSqlProviderConfiguration._msSqlDialect">
            <summary>
            Dialeto padrão do provedor.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.DataBase">
            <summary>
            Gets and Sets o nome da base de dados.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.Server">
            <summary>
            Gets and Sets o nome do servidor da base de dados.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.User">
            <summary>
            Gets and Set o usuário para acesso.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.Password">
            <summary>
            Gets and Sets a senha do usuário.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.ConnectionString">
            <summary>
            Gets And Sets o connectionString do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.MsSqlDialect">
            <summary>
            Dialeto do Provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.MsSql.MsSqlProviderConfiguration.Provider">
            <summary>
            Gets And Sets o provider relacionado.
            </summary>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProviderConfiguration.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="server">Servidor.</param>
            <param name="database">Nome da base de dados.</param>
            <param name="user">Usuário para acesso.</param>
            <param name="password">Senha para acesso.</param>
        </member>
        <member name="M:GDA.Provider.MsSql.MsSqlProviderConfiguration.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="connectionString">Connection string para conexão com a BD.</param>
        </member>
        <member name="T:GDA.Provider.Provider">
            <summary>
            Provider que ir� fezer o controle DAO referenciado para o projeto.
            </summary>
        </member>
        <member name="F:GDA.Provider.Provider.No_DbType">
            <summary>
            Identifica que n�o um tipo da BD v�lido.
            </summary>
        </member>
        <member name="F:GDA.Provider.Provider.m_ConnectionType">
            <summary>
            Type do objeto que representa o connection.
            </summary>
        </member>
        <member name="F:GDA.Provider.Provider.m_ExecuteCommandsOneAtATime">
            <summary>
            Identifica se os comando ser�o executados um de cada vez.
            </summary>
        </member>
        <member name="F:GDA.Provider.Provider._reservedsWords">
            <summary>
            Lista as palavras reservadas do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.ExecuteCommandsOneAtATime">
            <summary>
            Identifica se os comando ser�o executados um de cada vez.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.SqlQueryReturnIdentity">
            <summary>
            Query sql que retorna a identidade gerada no auto incremental.
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.GetIdentitySelect(System.String,System.String)">
            <summary>
            Esse m�todo com base no nome da tabela e na coluna identidade da tabela 
            recupera a consulta SQL que ir� recupera o valor da chave identidade gerado
            para o registro recentemente inserido.
            </summary>
            <param name="tableName">Nome da tabela onde o registro ser� inserido.</param>
            <param name="identityColumnName">Nome da coluna identidade da tabela.</param>
            <returns>The modified sql string which also retrieves the identity value</returns>
        </member>
        <member name="M:GDA.Provider.Provider.GetIdentitySelect(GDA.Sql.TableName,System.String)">
            <summary>
            Esse m�todo com base no nome da tabela e na coluna identidade da tabela 
            recupera a consulta SQL que ir� recupera o valor da chave identidade gerado
            para o registro recentemente inserido.
            </summary>
            <param name="tableName">Nome da tabela onde o registro ser� inserido.</param>
            <param name="identityColumnName">Nome da coluna identidade da tabela.</param>
            <returns>The modified sql string which also retrieves the identity value</returns>
        </member>
        <member name="P:GDA.Provider.Provider.GenerateIdentity">
            <summary>
            Identifica se a identidade da chaves da tabelas ser�o geradas pelo BD ou pela aplica��o.
            True quando a aplica��o gera a identidade.
            </summary>
            <value>
            <list type="bool">
            <item>true: quando a aplica��o fica encarregada de gerar a chave.</item>
            <item>false: quando o DB fica respons�vel por gerar a chave</item>
            </list>
            </value>
        </member>
        <member name="P:GDA.Provider.Provider.ConnectionType">
            <summary>
            Carrega o tipo de classe que cuida da conex�o.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.CommandType">
            <summary>
            Carrega o tipo de classe que cuida do command sql.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.DataAdapterType">
            <summary>
            Carrega o tipo de classe que cuida do DataAdapter do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.ParameterType">
            <summary>
            Carrega o tipo de classe que cuida do paramater do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.Name">
            <summary>
            Nome do do tipo de classe de acesso do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.ParameterPrefix">
            <summary>
            Prefixo usado nos parametros.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.ParameterSuffix">
            <summary>
            Sufixo usado nos parametros.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.SupportSQLCommandLimit">
            <summary>
            Identifica se o provider tem suporte ao m�todo SQLCommandLimit.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.MinimumSupportedDateTime">
            <summary>
            Retorna o valor minimo suportado por um valor DateTime.
            O padr�o � 1/1/1800.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.MaximumSupportedDateTime">
            <summary>
            Retorna o valor maximo suportado por um valor DateTime.
            O padr�o � 1/1/3000.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.QuoteExpressionBegin">
            <summary>
            Quote inicial da express�o.
            </summary>
        </member>
        <member name="P:GDA.Provider.Provider.QuoteExpressionEnd">
            <summary>
            Quote final da express�o.
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.#ctor(System.String,System.Type,System.Type,System.Type)">
            <summary>
            Construtor
            </summary>
            <param name="name">Nome da biblioteca ADO a ser tratada pelo provider.</param>
            <param name="connection">Type do connection.</param>
            <param name="dataAdapter">Type do dataAdapter.</param>
            <param name="command">Type do command.</param>
        </member>
        <member name="P:GDA.Provider.Provider.ProviderAssembly">
            <summary>
            Carrega o assembly do do namespace que cont�m os objetos de acesso.
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.CreateConnection">
            <summary>
            Cria uma inst�ncia do connection que o provider representa.
            </summary>
            <returns>Connection.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.CreateCommand">
            <summary>
            Cria uma inst�ncia do command que o provider representa.
            </summary>
            <returns>Command.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.CreateDataAdapter">
            <summary>
            Cria uma inst�ncia do DataAdapter que o provider representa.
            </summary>
            <returns>DataAdapter.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.CreateParameter">
            <summary>
            Cria uma inst�ncia do Parameter que o provider representa.
            </summary>
            <returns>Parameter.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.SQLCommandLimit(System.Collections.Generic.List{GDA.Mapper},System.String,System.Int32,System.Int32)">
            <summary>
            M�todos respons�vel por tratar o comando sql e adapta-lo para executar
            estruturas de pagina��o.
            </summary>
            <param name="mapping">Mapeamentos dos campos da model.</param>
            <param name="sqlQuery">Clausula SQL que ser� tratada.</param>
            <param name="startRecord">Apartir da qual deve come�ar o resultado.</param>
            <param name="size">Quantidade de registros por resultado.</param>
            <returns>Consulta sql tratada</returns>
        </member>
        <member name="M:GDA.Provider.Provider.BuildTableName(GDA.Sql.TableName)">
            <summary>
            Transforma o nome de tabela representado pela classe <see cref="T:GDA.Sql.TableName"/>
            em uma string que ser� usada na consulta do banco de dados.
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Provider.Provider.GetDbType(System.Type)">
            <summary>
            Obtem um n�mero inteiro que corresponde ao tipo da base de dados que representa o tipo
            informado. O valor de retorno pode ser convertido em um tipo v�lido (enum value) para 
            o atual provider. Esse method � chamado para traduzir os tipos do sistema para os tipos
            do banco de dados que n�o s�o convertidos explicitamento.
            </summary>
            <param name="type">Tipo do sistema.</param>
            <returns>Tipo correspondente da base de dados.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.GetDbType(System.String,System.Boolean)">
            <summary>
            Esse m�todo converte a string (extra�da da tabelas do banco de dados) para o tipo do system
            correspondente.
            </summary>
            <param name="dbType">Nome do tipo usado no banco de dados.</param>
            <param name="isUnsigned">Valor boolean que identifica se o tipo � unsigned.</param>
            <returns>Valor do enumerator do tipo correspondente do banco de dados. O retorno � um n�mero
            inteiro por causa que em alguns provider o enumerations n�o seguem o padr�o do DbType definido
            no System.Data.</returns>
        </member>
        <member name="P:GDA.Provider.Provider.StatementTerminator">
            <summary>
            Obtem a caracter ou string usado para terminar o delimitar o statement.
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.IsReservedWord(System.String)">
            <summary>
            Determina se uma palavra � reservada and necessita de um atribui��o entre quoting.
            </summary>
            <returns>True se a palavra for reservada.</returns>
        </member>
        <member name="P:GDA.Provider.Provider.QuoteCharacter">
            <summary>
            Obtem o caracter usado para delimitar os parametros de string.
            </summary>
            <returns>The quote character.</returns>
        </member>
        <member name="P:GDA.Provider.Provider.Capabilities">
            <summary>
            Obtem um enum descrevendo as capacidades suportadas pelo banco de dados. 
            Por padr�o todas s�o suportadas. Veja <see cref="T:GDA.Provider.Capability"/> para mais 
            detalhes sobre as capacidades dispon�veis.	
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.GetSystemType(System.Int64)">
            <summary>
            Esse m�todo retorna o tipo do sistema correspodente ao tipo specifico indicado no long.
            A implementa��o padr�o n�o retorna exception, mas sim null.
            </summary>
            <param name="dbType">Tipo especifico do provider.</param>
            <returns>Tipo do sistema correspondente.</returns>
        </member>
        <member name="P:GDA.Provider.Provider.ReservedsWords">
            <summary>
            Lista da palavra reservadas do provider.
            </summary>
        </member>
        <member name="M:GDA.Provider.Provider.QuoteExpression(System.String)">
            <summary>
            Obtem uma container (Quote) para permitir que colunas com nomes especiais
            sejam inseridas na consulta.
            </summary>
            <param name="word">Nome da coluna ou do paramenrto.</param>
            <returns>Express�o com a formata��o adequada.</returns>
        </member>
        <member name="M:GDA.Provider.Provider.SetParameterValue(System.Data.IDbDataParameter,System.Object)">
            <summary>
            Converte o valor do parametro.
            </summary>
            <param name="parameter">Instancia do parametro.</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="F:GDA.Provider.ProviderConfiguration._Provider">
            <summary>
            Provider relacionado.
            </summary>
        </member>
        <member name="F:GDA.Provider.ProviderConfiguration._ConnectionString">
            <summary>
            ConnectionString do provider.
            </summary>
        </member>
        <member name="F:GDA.Provider.ProviderConfiguration._dialect">
            <summary>
            Dialeto que ser� usado.
            </summary>
        </member>
        <member name="F:GDA.Provider.ProviderConfiguration._providerIdentifier">
            <summary>
            Identificador �nico do provider.
            </summary>
        </member>
        <member name="E:GDA.Provider.ProviderConfiguration.ConnectionCreated">
            <summary>
            Evento acionado quando uma conex�o � criada pelo provedor.
            </summary>
        </member>
        <member name="P:GDA.Provider.ProviderConfiguration.ProviderIdentifier">
            <summary>
            Identificador �nico do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.ProviderConfiguration.Provider">
            <summary>
            Gets And Sets o provider relacionado.
            </summary>
        </member>
        <member name="P:GDA.Provider.ProviderConfiguration.ConnectionString">
            <summary>
            Gets And Sets o connectionString do provider.
            </summary>
        </member>
        <member name="P:GDA.Provider.ProviderConfiguration.Dialect">
            <summary>
            Gets And Sets do dialeto que ser� usado pelo provider.
            </summary>
        </member>
        <member name="M:GDA.Provider.ProviderConfiguration.#ctor(System.String,GDA.Interfaces.IProvider)">
            <summary>
            Construtor Padr�o.
            </summary>
            <param name="connectionString">ConnectionString a ser utilizado pelo provider.</param>
            <param name="provider">Provider a ser tratado.</param>
        </member>
        <member name="M:GDA.Provider.ProviderConfiguration.CreateConnection">
            <summary>
            Cria uma conex�o com banco de dados j� com o connection string configurado.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Provider.ProviderConfiguration.GetDatabaseAnalyzer">
            <summary>
            Analyzer relacionado com o provider.
            </summary>
        </member>
        <member name="T:GDA.Sql.BaseQuery">
            <summary>
            Implementação básica de uma consulta.
            </summary>
        </member>
        <member name="F:GDA.Sql.BaseQuery._skipCount">
            <summary>
            Número de registros que deverão ser pulados.
            </summary>
        </member>
        <member name="F:GDA.Sql.BaseQuery._takeCount">
            <summary>
            Quantidade de registros que serão recuperados.
            </summary>
        </member>
        <member name="F:GDA.Sql.BaseQuery._aggregationFunctionProperty">
            <summary>
            Nome da propriedade para utiliza uma função de agregação.
            </summary>
        </member>
        <member name="P:GDA.Sql.BaseQuery.AggregationFunctionProperty">
            <summary>
            Nome da propriedade para utiliza uma função de agregação.
            </summary>
        </member>
        <member name="P:GDA.Sql.BaseQuery.ReturnTypeQuery">
            <summary>
            Tipo do retorno da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.BaseQuery.SkipCount">
            <summary>
            Número de registros que deverão ser pulados.
            </summary>
        </member>
        <member name="P:GDA.Sql.BaseQuery.TakeCount">
            <summary>
            Quantidade de registros que serão recuperados.
            </summary>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BaseSkip(System.Int32)">
            <summary>
            Salta um número especifico de registros antes de recuperar os resultado.
            </summary>
            <param name="count">Quantidade de registros que serão saltados.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BaseTake(System.Int32)">
            <summary>
            Define a quantidade de registro que serão recuperados.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToCursor``1">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToCursor``1(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToCursor``2(GDA.GDASession)">
            <summary>
            Recipera o resultado da consulta em forma de cursor e recupera o resultado 
            em objetos de outro tipo informado.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <typeparam name="Result">Tipos que estarão no retorno.</typeparam>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToCursor``2">
            <summary>
            Recipera o resultado da consulta em forma de cursor e recupera o resultado 
            em objetos de outro tipo informado.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <typeparam name="Result">Tipos que estarão no retorno.</typeparam>        
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToDataRecords``1">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToDataRecords``1(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValue``1(System.String)">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValue``1(GDA.GDASession,System.String)">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValues``1(System.String)">
            <summary>
            Recupera os valores da propriedade.
            </summary>
            <typeparam name="T"></typeparam> 
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValues``1(GDA.GDASession,System.String)">
            <summary>
            Recupera os valores da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValue``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertySelector">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValue``1(GDA.GDASession,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertySelector">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValues``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Recupera os valores da propriedade.
            </summary>
            <typeparam name="T"></typeparam> 
            <param name="propertySelector">Propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.GetValues``1(GDA.GDASession,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Recupera os valores da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertySelector">Propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToList``1">
            <summary>
            Recupera o resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.ToList``1(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.First``1">
            <summary>
            Recupera o primeiro elemento da sequencia obedecendo as condições especificadas.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Valor do primeiro item encontrado.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.First``1(GDA.GDASession)">
            <summary>
            Recupera o primeiro elemento da sequencia obedecendo as condições especificadas.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Valor do primeiro item encontrado.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BuildResultInfo``1">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <typeparam name="T">Tipo de dados que será tratado na consulta.</typeparam>
            <returns>Consulta SQL gerada.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BuildResultInfo``1(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <typeparam name="T">Tipo de dados que será tratado na consulta.</typeparam>
            <returns>Consulta SQL gerada.</returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BuildResultInfo(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="provider">Provider que será utilizado no build.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BaseQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider">Provider que será utilizado no build.</param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="classesDictionary">Dicionário com as classe que já foram processadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.#ctor(System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="pageSize">Tamanho da página da lista</param>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.#ctor(GDA.Sql.Query,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="query">Consulta.</param>
            <param name="pageSize">Tamanho da página da consulta.</param>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.#ctor(GDA.Sql.Query,GDA.GDASession,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="query">Consulta.</param>
            <param name="session">Sessão usada nas consultas.</param>
            <param name="pageSize">Tamanho da página da consulta.</param>
        </member>
        <member name="F:GDA.Sql.BindingResultList`1._sortProperty">
            <summary>
            Propriedade que e lista está ordenada.
            </summary>
        </member>
        <member name="F:GDA.Sql.BindingResultList`1._direction">
            <summary>
            Direção da ordenação da lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.AllowEdit">
            <summary>
            Identifica se é permitida a edição da lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.AllowNew">
            <summary>
            Identifica se é permitido a criação de novos itens na lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.AllowRemove">
            <summary>
            Identifica se é permitido a remoção de itens na lista.
            </summary>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Aplica um ordenação na lista.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.RemoveSort">
            <summary>
            Remove a ordenação da lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.IsSorted">
            <summary>
            Identifica se a lista está ordenada.
            </summary>
        </member>
        <member name="E:GDA.Sql.BindingResultList`1.ListChanged">
            <summary>
            Evento acionado quando a lista for alterada.
            </summary>
        </member>
        <member name="M:GDA.Sql.BindingResultList`1.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Remove o index do filtro.
            </summary>
            <param name="property"></param>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.SortDirection">
            <summary>
            Direção de ordenação da lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.SortProperty">
            <summary>
            Propriedade que a lista está ordenada.
            </summary>
        </member>
        <member name="P:GDA.Sql.BindingResultList`1.SupportsChangeNotification">
            <summary>
            Identifica se a lista da suporta a notificação de alteração.
            </summary>
        </member>
        <member name="P:GDA.Sql.Conditional.Expression">
            <summary>
            Expressão condicional.
            </summary>
        </member>
        <member name="P:GDA.Sql.Conditional.Parent">
            <summary>
            Container pai.
            </summary>
        </member>
        <member name="M:GDA.Sql.Conditional.#ctor(System.String)">
            <summary>
            Constrói com condiçõa com base na expressão informada.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="F:GDA.Sql.ConditionalContainer._conditionals">
            <summary>
            Condições do container.
            </summary>
        </member>
        <member name="F:GDA.Sql.ConditionalContainer._logicalOperators">
            <summary>
            Operadores lógicos usados.
            </summary>
        </member>
        <member name="P:GDA.Sql.ConditionalContainer.ParameterContainer">
            <summary>
            Container onde são registrados os parametros.
            </summary>
        </member>
        <member name="P:GDA.Sql.ConditionalContainer.Count">
            <summary>
            Quantidade de itens no container.
            </summary>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.#ctor(System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.#ctor(GDA.Sql.Conditional)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="conditional"></param>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.And(GDA.Sql.Conditional)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Or(GDA.Sql.Conditional)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.And(System.String)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Or(System.String)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Start(GDA.Sql.Conditional)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Start(System.String)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.GDA#IGDAParameterContainer#TryGet(System.String,GDA.GDAParameter@)">
            <summary>
            Tenta recupera o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.GDA#IGDAParameterContainer#ContainsKey(System.String)">
            <summary>
            Verifica se existe algum parametro com o nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ConditionalContainer.GDA#IGDAParameterContainer#Remove(System.String)">
            <summary>
            Remove o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.SelectVariable">
            <summary>
            Representa o select que está em uma variável.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SelectVariable.#ctor(GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrao
            </summary>
            <param name="expression"></param>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.Column">
            <summary>
            Armazena as informações do campo.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.Column._name">
            <summary>
            Nome do campo.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.Column._tableName">
            <summary>
            Nome da tabela que o campo está relacionado.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.Column._alias">
            <summary>
            Apelido atribuido a coluna.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.Column.Name">
            <summary>
            Nome do campo.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.Column.TableName">
            <summary>
            Nome da tabela que o campo está relacionado.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.Column.Alias">
            <summary>
            Apelido atribuido a coluna.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.Column.#ctor(System.String,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="tableName">Nome da tabela.</param>
            <param name="columnName">Nome da coluna.</param>
            <param name="alias">Apelido da coluna.</param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.Column.#ctor(GDA.Sql.InterpreterExpression.Nodes.SqlExpression,GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression">Expressão onde está contidos os dados da coluna.</param>
            <param name="aliasExpression">Expressão do apelido da coluna.</param>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.HavingPart">
            <summary>
            Representa a parte do having.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.HavingPart.Expressions">
            <summary>
            Expressões associadas.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.OrderByExpression._asc">
            <summary>
            Identifica se o item tem direção ascedente.
            </summary>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.Select">
            <summary>
            Representa uma expressão que é um SELECT.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.Select.#ctor(GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.SelectExpression">
            <summary>
            Representa uma expressão da projeção da consulta
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.SelectExpression._asExpression">
            <summary>
            Expressão que armazena o AS se existir.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.AsExpression">
            <summary>
            Expressão que armazena o AS se existir.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.ColumnName">
            <summary>
            Expressão que contem o nome da coluna.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.ColumnAlias">
            <summary>
            Expressão que contem o apelido da coluna.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.Column">
            <summary>
            Informações da coluna.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.#ctor(GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            
            </summary>
            <param name="columnName">Expressão contendo o nome da coluna.</param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.#ctor(GDA.Sql.InterpreterExpression.Nodes.SqlExpression,GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            
            </summary>
            <param name="columnName">Expressão contendo o nome da coluna.</param>
            <param name="columnAlias">Expressão contendo o apelido da coluna.</param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SelectExpression.#ctor(GDA.Sql.InterpreterExpression.Nodes.SqlExpression,GDA.Sql.InterpreterExpression.Nodes.SqlExpression,GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            
            </summary>
            <param name="columnName">Expressão contendo o nome da coluna.</param>
            <param name="columnAlias">Expressão contendo o apelido da coluna.</param>
            <param name="asExpression">Expressão AS.</param>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.SelectPart._topInPercent">
            <summary>
            Identifica se a valor do top está em porcentagem.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.SelectPart._resultType">
            <summary>
            Tipo da resultado que a clausula pode retornar.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.SelectPart._selectionExpressions">
            <summary>
            Expressões relacionadas a parte.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectPart.TopInPercent">
            <summary>
            Identifica se a valor do top está em porcentagem.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SelectPart.ResultType">
            <summary>
            Tipo da resultado que a clausula pode retornar.
            </summary>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Nodes.SqlExpression">
            <summary>
            Representa uma expressão Sql.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SqlExpression.Value">
            <summary>
            Valor da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.SqlExpression.Type">
            <summary>
            Tipo da expressão.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SqlExpression.#ctor(GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="expression">Expressão relacionadas</param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SqlExpression.#ctor(GDA.Sql.InterpreterExpression.Expression,GDA.Sql.InterpreterExpression.Enums.SqlExpressionType)">
            <summary>
            Construtor completo.
            </summary>
            <param name="value">Expressão.</param>
            <param name="type">Tipo da expressão.</param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Nodes.SqlExpression.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.TableNameExpression.Name">
            <summary>
            Nome da tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.TableNameExpression.Schema">
            <summary>
            Esquema onde a tabela está introduzida.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.TableNameExpression.InnerExpression">
            <summary>
            Expressão interna.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Nodes.TableExpression._asExpression">
            <summary>
            Expressão que armazena o AS se existir.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Nodes.TableExpression.AsExpression">
            <summary>
            Expressão que armazena o AS se existir.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ArrayHelper.Exists``1(``0[],System.Predicate{``0})">
            <summary>
            Verifica se o elemento tratado pelo Predicate está contido no Array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ArrayHelper.FindIndex``1(``0[],System.Predicate{``0})">
            <summary>
            Localiza o indice do elemento procurado no Array passado.
            </summary>
            <typeparam name="T">Tipo do elemento de Array que serà localizado.</typeparam>
            <param name="array">Array onde o elemento será procurado.</param>
            <param name="match">Predicate que será acionado para verificar o elemento.</param>
            <returns>-1 ou a posição do indice encontrado.</returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ArrayHelper.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
            <summary>
            Localiza o indice do elemento procurado no Array passado.
            </summary>
            <typeparam name="T">Tipo do elemento de Array que serà localizado.</typeparam>
            <param name="array">Array onde o elemento será procurado.</param>
            <param name="startIndex">Posição inicial da pesquisa.</param>
            <param name="match">Predicate que será acionado para verificar o elemento.</param>
            <returns>-1 ou a posição do indice encontrado.</returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ArrayHelper.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
            <summary>
            Localiza o indice do elemento procurado no Array passado.
            </summary>
            <typeparam name="T">Tipo do elemento de Array que serà localizado.</typeparam>
            <param name="array">Array onde o elemento será procurado.</param>
            <param name="startIndex">Posição inicial da pesquisa.</param>
            <param name="count">Quantidade de itens que deveram ser procurados.</param>
            <param name="match">Predicate que será acionado para verificar o elemento.</param>
            <returns>-1 ou a posição do indice encontrado.</returns>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Enums.SelectClauseResultTypes.All">
            <summary>
            Especifica que linhas duplicados podem existir no resultado.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Enums.SelectClauseResultTypes.Distinct">
            <summary>
            Especifica que somente linhas unicas serão mostradas no resultado.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer._type">
            <summary>
            Tipo de comparação a ser feita.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer._textComparer">
            <summary>
            Texto usado na comparação.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer._caseSensitive">
            <summary>
            Identifica se a comparação é case sensitive.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer._numberPreviousExpressions">
            <summary>
            Número de expressões anteriores que são usadas na comparação.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer._numberNextExpressions">
            <summary>
            Número de expressões próximas que são usadas na comparação.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.Type">
            <summary>
            Tipo de comparação a ser feita.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.TextComparer">
            <summary>
            Texto usado na comparação.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.CaseSensitive">
            <summary>
            Identifica se a comparação é case sensitive.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.NumberPreviousExpressions">
            <summary>
            Número de expressões anteriores que são usadas na comparação.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.NumberNextExpressions">
            <summary>
            Número de expressões próximas que são usadas na comparação.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Grammar.ExpressionComparer.JumpNextExpressions">
            <summary>
            Número de expressões que o comparador saltou.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Parser._lex">
            <summary>
            Examinador lexer relacionado.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Parser.Lex">
            <summary>
            Examinador lexer relacionado.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.NextExpression(System.Boolean)">
            <summary>
            Move para a proxima expressao.
            </summary>
            <param name="expected">Identifica se a proxima expressao e esperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.Execute">
            <summary>
            Executa o parser.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ExecuteSelectPart">
            <summary>
            Executa o parser somente encima da parte da clausula SELECT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ExecuteWherePart">
            <summary>
            Executa um parser somente em cima da parte da clausula WHERE.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ExecuteOrderByPart">
            <summary>
            Executa um parser somente em cima da parte da clausula ORDER BY
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ExecuteGroupByPart">
            <summary>
            Executa um parser somente em cima da parte da clausula GROUP BY.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ExecuteHavingPart">
            <summary>
            Executa um parser somente na parte do HAVING.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserSelect">
            <summary>
            Recupera os dados do comando SELECT
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserSelectPart">
            <summary>
            Recupera os dados da parte do SELECT.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserContainerConditional">
            <summary>
            Executa o parser de um container condicional.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserContainerConditional(System.Boolean)">
            <summary>
            
            </summary>
            <param name="jumpFirstExpression">Identifica se deve pular a primeira expressão.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserGroupByPart(System.Boolean)">
            <summary>
            
            </summary>
            <param name="ignoreOrderByExpression">
            Ignora a existencia da expressão group by e não 
            pula para a próxima expressão para começar a fazer a analise.
            </param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Parser.ParserOrderByPart(System.Boolean)">
            <summary>
            
            </summary>
            <param name="ignoreOrderByExpression">
            Ignora a existencia da expressão order by e não 
            pula para a próxima expressão para começar a fazer a analise.
            </param>
            <returns></returns>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.ContainerExpression.containerChar">
            <summary>
            Caracter container da expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.ContainerExpression.endContainerChar">
            <summary>
            Caracter de fim do container
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.ContainerExpression._line">
            <summary>
            Expressões contidas.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.ContainerExpression.ContainerChar">
            <summary>
            Caracter container da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.ContainerExpression.EndContainerChar">
            <summary>
            Caracter de fim do container
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ContainerExpression.#ctor(System.Int32,System.Char,GDA.Sql.InterpreterExpression.ExpressionLine)">
            <summary>
            Expressões contidas.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.SpecialContainer.BeginCharSpecialContainer">
            <summary>
            Caracter inicial do container aonde a expressão está contida.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.SpecialContainer.EndCharSpecialContainer">
            <summary>
            Caracter final do container aonde a expressão está contida.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.SpecialContainer.#ctor(System.Char,System.Char)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="beginChar"></param>
            <param name="endChar"></param>
        </member>
        <member name="T:GDA.Sql.InterpreterExpression.Expression">
            <summary>
            Representa um expressao.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.beginPoint">
            <summary>
            Ponto inicial da expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.length">
            <summary>
            Ponto final da expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.text">
            <summary>
            Texto da expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.line">
            <summary>
            Linha que a expressão está contida.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.container">
            <summary>
            Container aonde a expressão está contida.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression.containerPosition">
            <summary>
            Posição da expressão no container.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression._token">
            <summary>
            Token relacionado a expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Expression._currentSpecialContainer">
            <summary>
            Container especial que a expressão está contida.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.BeginPoint">
            <summary>
            Ponto inicial da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.Length">
            <summary>
            Ponto final da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.Text">
            <summary>
            Texto da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.Line">
            <summary>
            Linha que a expressão está contida.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.Container">
            <summary>
            Container aonde a expressão está contida.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.ContainerPosition">
            <summary>
            Posição da expressão no container.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Expression.CurrentSpecialContainer">
            <summary>
            Container especial que a expressão está contida.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Expression.#ctor">
            <summary>
            Contrutor padrão.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Expression.#ctor(GDA.Sql.InterpreterExpression.Enums.TokenID)">
            <summary>
            Cria a instancia com o tipo do token informado.
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Expression.#ctor(System.Int32,System.Int32)">
            <summary>
            Craia a expressão com o ponto do texto.
            </summary>
            <param name="beginPoint"></param>
            <param name="length"></param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Expression.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer.tabsChar">
            <summary>
            Caracteres separadores.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer.joinTabsChar">
            <summary>
            Caracteres que podem se conectar com caracteres separadores.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer.beginContainers">
            <summary>
            Containers iniciais.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer.endContainers">
            <summary>
            Containers finais.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer.beginStringContainers">
            <summary>
            Caracters que define containers de expressões string
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer._lines">
            <summary>
            Linhas do documento.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer._command">
            <summary>
            Comando a ser interpretado.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.Lexer._expressions">
            <summary>
            Lista das expressões interpretadas.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Lexer.Expressions">
            <summary>
            Lista da expressões interpretadas.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Lexer.FindIdentifierPositions(System.String)">
            <summary>
            Recupera as posições do identificaro informada.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.Lexer.Command">
            <summary>
            Comando a ser interpretado.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Lexer.isAlphanumeric(System.Char)">
            <summary>
            Verifica se o caracter passado é alfanumerico.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Lexer.isAlpha(System.Char)">
            <summary>
            Verifica se o caracter passado está contido no alfabeto.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Lexer.isNumeric(System.Char)">
            <summary>
            Verifica se o caracter pertence aos numeros decimais e hexadecimais
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.Lexer.Lex">
            <summary>
            Executa a análise lexa no comando.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.ExpressionLine.beginPoint">
            <summary>
            Ponto inicial da expressão.
            </summary>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.ExpressionLine.length">
            <summary>
            Ponto final da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.ExpressionLine.BeginPoint">
            <summary>
            Ponto inicial da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.ExpressionLine.Length">
            <summary>
            Ponto final da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.ExpressionLine.Expressions">
            <summary>
            Expressões da linha.
            </summary>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ExpressionLine.#ctor(System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="beginPoint"></param>
        </member>
        <member name="M:GDA.Sql.InterpreterExpression.ExpressionLine.ToString">
            <summary>
            Recupera o texto que representa a instancia.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GDA.Sql.InterpreterExpression.SpecialContainerExpression.containerChar">
            <summary>
            Caracter container da expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.InterpreterExpression.SpecialContainerExpression.ContainerChar">
            <summary>
            Caracter container da expressão.
            </summary>
        </member>
        <member name="T:GDA.Sql.MappingSelectStatementReferences">
            <summary>
            Implementação generica do ISelectStatementReferences.
            </summary>
        </member>
        <member name="M:GDA.Sql.MappingSelectStatementReferences.GetMapping(System.String)">
            <summary>
            Recupera o mapeamento do classes.
            </summary>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.MappingSelectStatementReferences.GetMappings">
            <summary>
            Recupera os mapeamentos do sistema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.MappingSelectStatementReferences.AddMapping(GDA.Mapping.ClassMapping)">
            <summary>
            Adiciona o mapeamento da classe.
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:GDA.Sql.MappingSelectStatementReferences.GetFirstKeyPropertyMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera a primeira propriedade chave mapeada para o tipo.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.MappingSelectStatementReferences.GetPropertiesMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera as propriedades mapeadas.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.IQuery">
            <summary>
            Representa uma consulta no GDA.
            </summary>
        </member>
        <member name="P:GDA.Sql.IQuery.ReturnTypeQuery">
            <summary>
            Tipo do retorno da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.IQuery.SkipCount">
            <summary>
            Número de registros que deverão ser pulados.
            </summary>
        </member>
        <member name="P:GDA.Sql.IQuery.TakeCount">
            <summary>
            Quantidade de registros que serão recuperados.
            </summary>
        </member>
        <member name="P:GDA.Sql.IQuery.AggregationFunctionProperty">
            <summary>
            Nome da propriedade para utiliza uma função de agregação.
            </summary>
        </member>
        <member name="M:GDA.Sql.IQuery.BuildResultInfo``1(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <typeparam name="T">Tipo de dados que será tratado na consulta.</typeparam>
            <returns>Consulta SQL gerada.</returns>
        </member>
        <member name="M:GDA.Sql.IQuery.BuildResultInfo(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.IQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="provider">Provider que será utilizado no build.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.IQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider">Provider que será utilizado no build.</param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="classesDictionary">Dicionário com as classe que já foram processadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ISelectStatementReferences.GetPropertyMapping(GDA.Mapping.TypeInfo,System.String)">
            <summary>
            Recupera o nome da coluna mapeada para a propriedade do tipo.
            </summary>
            <param name="typeInfo"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ISelectStatementReferences.GetFirstKeyPropertyMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera a primeira propriedade chave mapeada para o tipo.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ISelectStatementReferences.GetPropertiesMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera as propriedades mapeadas.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ISelectStatementReferences.GetTableName(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera o nome da tabela com base no tipo.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ISelectStatementReferences.GetTypeInfo(GDA.Sql.TableInfo)">
            <summary>
            Recupera a informação do tipo.
            </summary>
            <param name="tableInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.NativeQuery">
            <summary>
            Armazena os dados de uma consulta nativa no banco de dados.
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._commandText">
            <summary>
            Armanena o texto da consulta que será executada.
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._commandType">
            <summary>
            Tipo do comando que será executado.
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._parameters">
            <summary>
            Lista dos parametros relacionados com a consulta.
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._orderClause">
            <summary>
            Clausula de ordenação
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._selectProperties">
            <summary>
            Nome das propriedades a serem recuperadas pela consulta.
            </summary>
        </member>
        <member name="F:GDA.Sql.NativeQuery._keyFieldName">
            <summary>
            Nome do campo chave da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.CommandText">
            <summary>
            Armanena o texto da consulta que será executada.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.Parameters">
            <summary>
            Recupera a lista de parametros
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.Order">
            <summary>
            Recupera e define a clausula ORDER BY.
            Não é usada a palavra chave ORDER BY na clausula.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.SelectProperties">
            <summary>
            Nome das propriedades a serem recuperadas pela consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.CommandType">
            <summary>
            Tipo do comando que será executado.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeQuery.KeyFieldName">
            <summary>
            Nome do campo chave da consulta.
            </summary>
        </member>
        <member name="M:GDA.Sql.NativeQuery.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Sql.NativeQuery.#ctor(System.String)">
            <summary>
            Inicializa a consulta já informando o texto.
            </summary>
            <param name="queryText"></param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(GDA.GDAParameter)">
            <summary>
            Adiciona um novo parametro na consulta.
            </summary>
            <param name="parameter">Paramentro a ser adicionado.</param>
            <returns>Retorna a referencia da consulta aonde o parametro foi adicionado.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(GDA.GDAParameter[])">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.Collections.Generic.IEnumerable{GDA.GDAParameter})">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.Data.DbType,System.Object)">
            <summary>
            Adiciona um parametro na consulta.
            </summary>
            <param name="dbtype">Tipo usado na base de dados</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adiciona um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.String,System.Object)">
            <summary>
            Adiciona um parametro.
            </summary>
            <param name="name">Nome do parametro</param>
            <param name="value">Valor do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Select(System.String)">
            <summary>
            Define os nomes das propriedades que serão recuperadas pela consulta.
            </summary>
            <param name="selectProperties"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.SetOrder(System.String)">
            <summary>
            Define a clausula ORDER BY.
            </summary>
            <param name="orderClause">Clausula ORDER BY.</param>
            <returns>Referência da consulta.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.SetCommandType(System.Data.CommandType)">
            <summary>
            Define o tipo de comando qeu será executado.
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.SetCommandTimeout(System.Int32)">
            <summary>
            Define o Timeout do comando.
            </summary>
            <param name="commandTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Count">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Count(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Skip(System.Int32)">
            <summary>
            Salta um número especifico de registros antes de recuperar os resultado.
            </summary>
            <param name="count">Quantidade de registros que serão saltados.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Take(System.Int32)">
            <summary>
            Define a quantidade de registro que serão recuperados.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Execute">
            <summary>
            Executa a consulta.
            </summary>
            <returns>Quantidade de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.ExecuteScalar(GDA.GDASession)">
            <summary>
            Executa a consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.ExecuteScalar">
            <summary>
            Executa a consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.Execute(GDA.GDASession)">
            <summary>
            Executa a consulta.
            </summary>
            <returns>Quantidade de linhas afetadas.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GDA.Sql.NativeQuery.ToResultList``1(System.Int32)" -->
        <member name="M:GDA.Sql.NativeQuery.ToResultList``1(GDA.GDASession,System.Int32)">
            <summary>
            Recupera o <see cref="!:GDA.Sql.ResultList"/> do resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.ToDataRecords">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.ToDataRecords(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GDA.Sql.NativeQuery.BuildResultInfo2(GDA.Interfaces.IProvider,System.String,System.Collections.Generic.Dictionary{System.String,System.Type})" -->
        <member name="M:GDA.Sql.NativeQuery.PrepareCommand(GDA.GDASession,System.Data.IDbCommand)">
            <summary>
            Prepara o comando para ser executado.
            </summary>
            <param name="session"></param>
            <param name="command"></param>
        </member>
        <member name="M:GDA.Sql.NativeQuery.BuildResultInfo(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.BuildResultInfo``1(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Constrói o resultado com as informações que serão processadas.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.GetNamedQuery(System.String)">
            <summary>
            Recupera uma consulta nomeada.
            </summary>
            <param name="queryName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.GDA#IGDAParameterContainer#TryGet(System.String,GDA.GDAParameter@)">
            <summary>
            Tenta recupera o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.GDA#IGDAParameterContainer#ContainsKey(System.String)">
            <summary>
            Verifica se existe algum parametro com o nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeQuery.GDA#IGDAParameterContainer#Remove(System.String)">
            <summary>
            Remove o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.NativeWhereClause">
            <summary>
            Clausula condicional nativa.
            </summary>
        </member>
        <member name="M:GDA.Sql.NativeWhereClause.#ctor(GDA.Sql.ConditionalContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="container"></param>
        </member>
        <member name="T:GDA.Sql.NativeSelectStatementReferences">
            <summary>
            Implementação nativa.
            </summary>
        </member>
        <member name="P:GDA.Sql.NativeSelectStatementReferences.Instance">
            <summary>
            Recupera a instancia unica da classe.
            </summary>
        </member>
        <member name="M:GDA.Sql.NativeSelectStatementReferences.GetPropertyMapping(GDA.Mapping.TypeInfo,System.String)">
            <summary>
            Recupera o nome da coluna mapeada para a propriedade do tipo.
            </summary>
            <param name="typeInfo"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeSelectStatementReferences.GetFirstKeyPropertyMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera a primeira propriedade chave mapeada para o tipo.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeSelectStatementReferences.GetPropertiesMapping(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera as propriedades mapeadas.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeSelectStatementReferences.GetTableName(GDA.Mapping.TypeInfo)">
            <summary>
            Recupera o nome da tabela com base no tipo.
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.NativeSelectStatementReferences.GetTypeInfo(GDA.Sql.TableInfo)">
            <summary>
            Recupera a informação do tipo.
            </summary>
            <param name="tableInfo"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.QueryPropertySelector`1">
            <summary>
            Implementação do seletor de propriedades da consulta.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:GDA.Sql.QueryPropertySelector`1._properties">
            <summary>
            Lista das propriedades relacionadas.
            </summary>
        </member>
        <member name="P:GDA.Sql.QueryPropertySelector`1.Query">
            <summary>
            Recupera a instancia da query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.Add(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adiciona uma propriedade na lista.
            </summary>
            <param name="propertiesSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToCursor">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>        
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToCursor(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToCursor``1(GDA.GDASession)">
            <summary>
            Recipera o resultado da consulta em forma de cursor e recupera o resultado 
            em objetos de outro tipo informado.
            </summary>
            <typeparam name="Result">Tipos que estarão no retorno.</typeparam>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToCursor``1">
            <summary>
            Recipera o resultado da consulta em forma de cursor e recupera o resultado 
            em objetos de outro tipo informado.
            </summary>
            <typeparam name="Result">Tipos que estarão no retorno.</typeparam>        
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToDataRecords">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToDataRecords(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToList">
            <summary>
            Recupera o resultado da consulta.
            </summary>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToList(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Lista dos elementos recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToResultList(System.Int32)">
            <summary>
            Recupera o <see cref="!:GDA.Sql.ResultList"/> do resultado da consulta.
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.ToResultList(GDA.GDASession,System.Int32)">
            <summary>
            Recupera o <see cref="!:GDA.Sql.ResultList"/> do resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.QueryPropertySelector`1.op_Implicit(GDA.Sql.QueryPropertySelector{`0})~System.String">
            <summary>
            Converte implicitamente para um lista tipada.
            </summary>
            <param name="collection"></param>
            <returns>Lista tipada.</returns>
        </member>
        <member name="T:GDA.Sql.LoadResultPageArgs`1">
            <summary>
            Representa os argumentos para o evento de carga
            da página de resultados.
            </summary>
        </member>
        <member name="P:GDA.Sql.LoadResultPageArgs`1.PageSize">
            <summary>
            Tamanho da página solicitada
            </summary>
        </member>
        <member name="P:GDA.Sql.LoadResultPageArgs`1.StartRow">
            <summary>
            Linha inicial da recuperação da página.
            </summary>
        </member>
        <member name="P:GDA.Sql.LoadResultPageArgs`1.Session">
            <summary>
            Sessão de conexão do GDA que foi usada na recuperação da página.
            </summary>
        </member>
        <member name="P:GDA.Sql.LoadResultPageArgs`1.Page">
            <summary>
            Elementos da página.
            </summary>
        </member>
        <member name="M:GDA.Sql.LoadResultPageArgs`1.#ctor(System.Int32,System.Int32,GDA.GDASession,System.Collections.ObjectModel.ReadOnlyCollection{`0})">
            <summary>
            Construtor padrão.
            </summary>
            <param name="pageSize"></param>
            <param name="startRow"></param>
            <param name="session"></param>
            <param name="page"></param>
        </member>
        <member name="T:GDA.Sql.LoadResultPageHandler`1">
            <summary>
            Representa o evento acionado quando uma página de dados é carregada.
            </summary>
            <typeparam name="Model">Tipo do item da página de dados.</typeparam>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GDA.Sql.ResultList`1">
            <summary>
            Lista virtual para resultados de uma consulta.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="F:GDA.Sql.ResultList`1._myQuery">
            <summary>
            Instância da consulta usada na lista.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._queryInstance">
            <summary>
            Instancia da consulta associada.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._myGDASession">
            <summary>
            Sessão do GDA usada para fazer as consultas.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._pageSize">
            <summary>
            Tamanho da página de cada sessão.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._count">
            <summary>
            Quantidade de elementos da lista.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._sessions">
            <summary>
            Sessões onde são armazenados os elementos carregados na lista
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._version">
            <summary>
            Versão da lista.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1._syncRoot">
            <summary>
            Objeto usadao para garantir a sincronização da lista.
            </summary>
        </member>
        <member name="E:GDA.Sql.ResultList`1.LoadResultPage">
            <summary>
            Evento acionado quando uma página de resultado é carregada pela lista.
            </summary>
        </member>
        <member name="M:GDA.Sql.ResultList`1.#ctor(System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="pageSize">Tamanho da página da lista</param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.#ctor(GDA.Sql.BaseQuery,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="query">Consulta.</param>
            <param name="pageSize">Tamanho da página da consulta.</param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.#ctor(GDA.Sql.BaseQuery,GDA.GDASession,System.Int32)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="query">Consulta.</param>
            <param name="session">Sessão usada nas consultas.</param>
            <param name="pageSize">Tamanho da página da consulta.</param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.GetItem(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index">Posição do item.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ResultList`1.SetItem(System.Int32,`0)">
            <summary>
            Define o item na posição informada.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.RegisterProcessMethod(System.Func{`0,`0})">
            <summary>
            Registra o método que será responsável por processar os itens carregados na coleção.
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.Refresh">
            <summary>
            Atualiza os dados da lista.
            </summary>
        </member>
        <member name="P:GDA.Sql.ResultList`1.Item(System.Int32)">
            <summary>
            Recupera o item na posição informada.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.ResultList`1.SetOrder(System.String)">
            <summary>
            Define a ordenação da lista.
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.ApplyFilter(System.String)">
            <summary>
            Aplica um filtro para carregar os dados da lista.
            </summary>
            <remarks>O filtro só será aplicado realmente após a chamada do método refresh.</remarks>
            <param name="filter"></param>
        </member>
        <member name="M:GDA.Sql.ResultList`1.OnRefresh">
            <summary>
            Método acionado quando se dar um refresh na lista.
            </summary>
        </member>
        <member name="M:GDA.Sql.ResultList`1.System#Collections#Generic#IEnumerable{Model}#GetEnumerator">
            <summary>
            Recupera o enumerator da lista.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.ResultList`1.Enumerator`1">
            <summary>
            Enumerator usado na lista.
            </summary>
            <typeparam name="Model"></typeparam>
        </member>
        <member name="F:GDA.Sql.ResultList`1.Enumerator`1.list">
            <summary>
            Lista em questão.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1.Enumerator`1.index">
            <summary>
            Atual index.
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1.Enumerator`1.version">
            <summary>
            Versão atual da lista
            </summary>
        </member>
        <member name="F:GDA.Sql.ResultList`1.Enumerator`1.current">
            <summary>
            Objeto atualmente selecionado.
            </summary>
        </member>
        <member name="M:GDA.Sql.ResultList`1.Enumerator`1.MoveNext">
            <summary>
            Movimenta para o proximo objeto.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.ResultList`1.Enumerator`1.Current">
            <summary>
            Atual objeto selecionado.
            </summary>
        </member>
        <member name="P:GDA.Sql.ResultList`1.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Atual objeto selecionado.
            </summary>
        </member>
        <member name="M:GDA.Sql.ResultList`1.Enumerator`1.System#Collections#IEnumerator#Reset">
            <summary>
            Reseta a lista.
            </summary>
        </member>
        <member name="T:GDA.Sql.ColumnInfo">
            <summary>
            Armazena as informações de uma coluna.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._expression">
            <summary>
            Expressão associada com a coluna.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._columnExpressionsRef">
            <summary>
            Lista de referencias do nome da coluna.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._realTableNameOrTablesAlias">
            <summary>
            Nome ou apelido real da tabela relacionado, quer dizer contendo os caracteres especiais.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._oldTableNameOrTableAlias">
            <summary>
            Nome ou apelido antigo da tabela relacionada.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._tableNameOrTableAlias">
            <summary>
            Nome ou apelido da tabela relacionada.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._columnName">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._dbColumnName">
            <summary>
            Mapeamento da coluna.
            </summary>
            <summary>
            Nome da coluna no Banco de Dados.
            </summary>
        </member>
        <member name="F:GDA.Sql.ColumnInfo._originalColumnName">
            <summary>
            Nome original da coluna.
            </summary>
        </member>
        <member name="P:GDA.Sql.ColumnInfo.TableNameOrTableAlias">
            <summary>
            Mapeamento da coluna.
            </summary>
            <summary>
            Nome ou apelido da tabela relacionada.
            </summary>
        </member>
        <member name="P:GDA.Sql.ColumnInfo.ColumnName">
            <summary>
            Nome da coluna.
            </summary>
        </member>
        <member name="P:GDA.Sql.ColumnInfo.DBColumnName">
            <summary>
            Nome da coluna no BD.
            </summary>
        </member>
        <member name="M:GDA.Sql.ColumnInfo.#ctor(GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="columnNameExpression">Referência da primeira expressão que armazena o nome da coluna.</param>
        </member>
        <member name="M:GDA.Sql.ColumnInfo.AddColumn(GDA.Sql.ColumnInfo)">
            <summary>
            Adiciona mais uma referência do nome da coluna.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:GDA.Sql.ColumnInfo.Rename(System.String)">
            <summary>
            Renomeia a coluna.
            </summary>
            <param name="newColumnName">Nome nome da coluna.</param>
        </member>
        <member name="M:GDA.Sql.ColumnInfo.RenameToMapper(GDA.Interfaces.IProvider)">
            <summary>
            Renomea a coluna para o nome do mapeamento.
            </summary>
            <param name="provider">Provider que será usado para renomear.</param>
        </member>
        <member name="T:GDA.Sql.JoinType">
            <summary>
            Tipos de join
            </summary>
        </member>
        <member name="T:GDA.Sql.JoinInfo">
            <summary>
            Representa as informações de um JOIN.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.ClassTypeMain">
            <summary>
            Tipo da classe principal do join.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.ClassTypeJoin">
            <summary>
            Tipo da classe representada pelo join.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:GDA.Sql.JoinInfo.Type">
            <summary>
            Tipo do join.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.ClassTypeMainAlias">
            <summary>
            Apelido da classe principal do join.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.ClassTypeJoinAlias">
            <summary>
            Apelido da classe relacionada com o join.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.GroupOfRelationship">
            <summary>
            Nome do grupo de relacionamento do join.
            </summary>
        </member>
        <member name="P:GDA.Sql.JoinInfo.JoinTableAlias">
            <summary>
            Apelido da tabela do join.
            </summary>
        </member>
        <member name="M:GDA.Sql.JoinInfo.#ctor(GDA.Sql.JoinType,System.Type,System.Type,System.String,System.String,System.String)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="type">Tipo do join.</param>
            <param name="classTypeMain">Tipo da classe principal do join.</param>
            <param name="classTypeJoin">Tipo da classe relacionada com o join.</param>
            <param name="classTypeJoinAlias">Apelido da classe relacionada com o join.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento do join.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:GDA.Sql.Operator">
            <summary>
            Enumeration dos operadores de comparação usados no comando sql.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.Equals">
            <summary>
            Operador que faz uma comparação restrita.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.NotEquals">
            <summary>
            Operador que faz uma comparação de diferença.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.Like">
            <summary>
            Operador que faz uma comparação se uma string está contida
            no campo referenciado.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.NotLike">
            <summary>
            Operador que faz uma comparação se uma string não está contida
            no campo referenciado.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.LessThan">
            <summary>
            Operador menor que.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.LessThanOrEquals">
            <summary>
            Operador menor que ou igual.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.GreaterThan">
            <summary>
            Operador maior que.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.GreaterThanOrEquals">
            <summary>
            Operador maior que ou igual.
            </summary>
        </member>
        <member name="F:GDA.Sql.Operator.In">
            <summary>
            Operador indica que o campo referenciado tem que ter o seus valores
            contidos no em um conjunto de dados separados por virgula, ou em um
            outro comando sql.
            </summary>
        </member>
        <member name="T:GDA.Sql.LogicalOperator">
            <summary>
            Enumeration dos operadores lógicos usados no comando sql.
            </summary>
        </member>
        <member name="T:GDA.Sql.Order">
            <summary>
            Enumeration dos tipos de ordenação.
            </summary>
        </member>
        <member name="P:GDA.Sql.ParserToSqlCommand.QuoteExpressionBegin">
            <summary>
            Quote inicial para escrever a expressão.
            </summary>
        </member>
        <member name="P:GDA.Sql.ParserToSqlCommand.QuoteExpressionEnd">
            <summary>
            Quote final para escrever a expressão.
            </summary>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.#ctor(GDA.Sql.InterpreterExpression.Parser)">
            <summary>
            Cria a instancia o com Parser que será usado na execução.
            </summary>
            <param name="parser"></param>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.#ctor(GDA.Sql.InterpreterExpression.Nodes.WherePart,System.String,System.String)">
            <summary>
            Cria o parser da clausula WHERE.
            </summary>
            <param name="wp"></param>
            <param name="quoteExpressionBegin"></param>
            <param name="quoteExpressionEnd"></param>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.#ctor(GDA.Sql.InterpreterExpression.Nodes.HavingPart,System.String,System.String)">
            <summary>
            Cria o parser para o clausula HAVING.
            </summary>
            <param name="havingPart"></param>
            <param name="quoteExpressionBegin"></param>
            <param name="quoteExpressionEnd"></param>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.ApplyQuoteExpression(System.String)">
            <summary>
            Aplica a marcação de citação na expressão.
            </summary>
            <param name="expression"></param>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.GetSelectInfo(GDA.Sql.InterpreterExpression.Nodes.Select)">
            <summary>
            Recupera as informações de Select
            </summary>
            <param name="select"></param>
        </member>
        <member name="M:GDA.Sql.ParserToSqlCommand.RemoveDefaultQuote(System.String)">
            <summary>
            Remove o quote padrao.
            </summary>
            <param name="text1"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.Query">
            <summary>
            Representa uma query que limita os registros afetados
            por um comando de execlusão ou alguma consulta SELECT.
            </summary>
        </member>
        <member name="F:GDA.Sql.Query._parameters">
            <summary>
            Lista de parametros.
            </summary>
        </member>
        <member name="F:GDA.Sql.Query._joins">
            <summary>
            Joins relacionados com a consulta.
            </summary>
        </member>
        <member name="F:GDA.Sql.Query._selectProperties">
            <summary>
            Nome das propriedades a serem recuperadas pela consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.MainAlias">
            <summary>
            Alias da tabela principal.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.SelectProperties">
            <summary>
            Nome das propriedades a serem recuperadas pela consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.Parameters">
            <summary>
            Recupera a lista de parametros
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.Join">
            <summary>
            Joins relacionados com a consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.WhereConditional">
            <summary>
            Condicional para a parte do WHERE.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.HavingConditional">
            <summary>
            Condicional para a parte do HAVING.
            </summary>
        </member>
        <member name="M:GDA.Sql.Query.#ctor">
            <summary>
            Cria uma nova consulta
            </summary>
        </member>
        <member name="M:GDA.Sql.Query.#ctor(System.String)">
            <summary>
            Cria uma nova consulta com base na clausula WHERE.
            </summary>
            <param name="whereClause">Clausula WHERE.</param>
        </member>
        <member name="M:GDA.Sql.Query.#ctor(System.String,System.String)">
            <summary>
            Cria uma nova consulta com base na clausula WHERE e na clausula ORDER BY.
            </summary>
            <param name="whereClause">Clausula WHERE</param>
            <param name="orderClause">Clausula ORDER BY</param>
        </member>
        <member name="M:GDA.Sql.Query.#ctor(System.String,System.Collections.Generic.IEnumerable{GDA.GDAParameter})">
            <summary>
            Cria uma nova consulta com base na clausula WHERE e na lista de parametros passados
            </summary>
            <param name="whereClause">Clausula WHERE</param>
            <param name="parameters">Lista de parametros</param>
        </member>
        <member name="M:GDA.Sql.Query.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{GDA.GDAParameter})">
            <summary>
            Cria uma nova consulta com base na clausula WHERE, na clausula ORDER BY
            e na lista de parametros.
            </summary>
            <param name="whereClause">WHERE clause</param>
            <param name="orderClause">ORDER BY clause</param>
            <param name="parameters">list of parameters</param>
        </member>
        <member name="M:GDA.Sql.Query.Alias(System.String)">
            <summary>
            Define o apelido para a tabela principal.
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.Distinct">
            <summary>
            Adiciona um Distinct na consulta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RemoveDistinct">
            <summary>
            Remove o distinct da consulta se existir.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.Skip(System.Int32)">
            <summary>
            Salta um número especifico de registros antes de recuperar os resultado.
            </summary>
            <param name="count">Quantidade de registros que serão saltados.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.Take(System.Int32)">
            <summary>
            Define a quantidade de registro que serão recuperados.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.Query.Where">
            <summary>
            Recupera e define a clausula WHERE.
            Não é usada a palavra chave WHERE na clausula
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.WhereClause">
            <summary>
            Clausula condicional WHERE.
            </summary>
        </member>
        <member name="M:GDA.Sql.Query.CreateWhereClause(System.String)">
            <summary>
            Cria um container de contição para a consulta.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SetWhereClause(GDA.Sql.ConditionalContainer)">
            <summary>
            Define a classe de consulta.
            </summary>
            <param name="clause"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.Query.HavingText">
            <summary>
            Having.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.HavingClause">
            <summary>
            Clausula condicional HAVING.
            </summary>
        </member>
        <member name="M:GDA.Sql.Query.Having(System.String)">
            <summary>
            Cria um container de contição para o Having.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SetHavingClause(GDA.Sql.ConditionalContainer)">
            <summary>
            Define a classe do HAVING.
            </summary>
            <param name="clause"></param>
            <returns></returns>
        </member>
        <member name="P:GDA.Sql.Query.Order">
            <summary>
            Recupera e define a clausula ORDER BY.
            Não é usada a palavra chave ORDER BY na clausula.
            </summary>
        </member>
        <member name="P:GDA.Sql.Query.GroupByClause">
            <summary>
            Nome das propriedades que serão agrupadas.
            </summary>
        </member>
        <member name="M:GDA.Sql.Query.Select(System.String)">
            <summary>
            Define os nomes das propriedades que serão recuperadas pela consulta.
            </summary>
            <param name="selectProperties"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.PropertySelector``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Recupera o seletor de propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertiesSelector"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SelectFirst``1(GDA.GDASession,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Seleciona o primeiro registro para a consulta e filtra as colunas 
            do tipo que irão para o resultado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session">Sessão que será usada na execução do comando.</param>
            <param name="propertiesSelector">Seletor das propriedades que deverão ser retornadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SelectFirst``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Seleciona o primeiro registro para a consulta e filtra as colunas 
            do tipo que irão para o resultado.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propertiesSelector">Seletor das propriedades que deverão ser retornadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SelectFirstValue``1(GDA.GDASession,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Executa a consulta selecionar o valor da coluna
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session">Sessão que será usada na execução do comando.</param>
            <param name="selector">Propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.SelectFirstValue``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Executa a consulta selecionar o valor da coluna
            </summary>
            <typeparam name="T"></typeparam>
            <param name="selector">Propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``1">
            <summary>
            Adiciona o join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``1(System.String)">
            <summary>
            Adiciona o join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``1(System.String,System.String)">
            <summary>
            Adiciona o join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``2">
            <summary>
            Adiciona um join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``2(System.String)">
            <summary>
            Adiciona um join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.InnerJoin``2(System.String,System.String,System.String)">
            <summary>
            Adiciona um join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="classTypeMainAlias">Apelido da classe principal do join.</param>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``1">
            <summary>
            Adicionar o left join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``1(System.String)">
            <summary>
            Adiciona o join com a classE especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``1(System.String,System.String)">
            <summary>
            Adiciona o join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``2">
            <summary>
            Adiciona um left join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``2(System.String)">
            <summary>
            Adiciona um left join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.LeftJoin``2(System.String,System.String,System.String)">
            <summary>
            Adiciona um left join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="classTypeMainAlias">Apelido da classe principal do join.</param>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``1">
            <summary>
            Adicionar o right join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``1(System.String)">
            <summary>
            Adiciona o right join com a classE especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``1(System.String,System.String)">
            <summary>
            Adiciona o right join com a class especificada.
            </summary>
            <typeparam name="ClassJoin">Tipo da classe que será feito o join.</typeparam>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``2">
            <summary>
            Adiciona um right join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``2(System.String)">
            <summary>
            Adiciona um right join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.RightJoin``2(System.String,System.String,System.String)">
            <summary>
            Adiciona um right join na consulta.
            </summary>
            <typeparam name="ClassMain"></typeparam>
            <typeparam name="ClassJoin"></typeparam>
            <param name="classTypeMainAlias">Apelido da classe principal do join.</param>
            <param name="classTypeJoinAlias">Apelido da classe do join.</param>
            <param name="groupRelationship">Nome do grupo de relacionamento.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.Add(GDA.GDAParameter)">
            <summary>
            Adiciona um novo parametro na consulta.
            </summary>
            <param name="parameter">Paramentro a ser adicionado.</param>
            <returns>Retorna a referencia da consulta aonde o parametro foi adicionado.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Add(GDA.GDAParameter[])">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Add(System.Collections.Generic.IEnumerable{GDA.GDAParameter})">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.Query.SetWhere(System.String)">
            <summary>
            Define a clausula WHERE na consulta.
            </summary>
            <param name="whereClause">Clausula WHERE.</param>
            <returns>Referência da consulta.</returns>
        </member>
        <member name="M:GDA.Sql.Query.SetOrder(System.String)">
            <summary>
            Define a clausula ORDER BY.
            </summary>
            <param name="orderClause">Clausula ORDER BY.</param>
            <returns>Referência da consulta.</returns>
        </member>
        <member name="M:GDA.Sql.Query.SetGroupBy(System.String)">
            <summary>
            Define a cláusula GROUP BY.
            </summary>
            <param name="groupByClause">Clausula GROUP BY</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.ToResultList``1(System.Int32)">
            <summary>
            Recupera o <see cref="!:GDA.Sql.ResultList"/> do resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GDA.Sql.Query.ToResultList``1(GDA.GDASession,System.Int32)" -->
        <member name="M:GDA.Sql.Query.ToCursor``2(GDA.GDASession)">
            <summary>
            Recipera o resultado da consulta em forma de cursor e recupera o resultado 
            em objetos de outro tipo informado.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <typeparam name="Result">Tipos que estarão no retorno.</typeparam>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.GetValue``1(GDA.GDASession,System.String)">
            <summary>
            Recupera o valor da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.GetValues``1(GDA.GDASession,System.String)">
            <summary>
            Recupera os valores da propriedade.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.Delete``1">
            <summary>
            Apaga os registros com base no critério informado.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Delete``1(GDA.GDASession)">
            <summary>
            Apaga os registros com base no critério informado.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Sql.Query.From``1(System.String)">
            <summary>
            Recupera uma instância para o tipo definido.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.From``1">
            <summary>
            Recupera uma instância para o tipo definido.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.BuildResultInfo``1(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <typeparam name="T">Tipo de dados que será tratado na consulta.</typeparam>
            <returns>Consulta SQL gerada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.BuildResultInfo``1(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <typeparam name="T">Tipo de dados que será tratado na consulta.</typeparam>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns>Consulta SQL gerada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.BuildResultInfo(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.BuildResultInfo2(GDA.Interfaces.IProvider,System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider"></param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.BuildResultInfo2(GDA.Interfaces.IProvider,System.String,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider">Provider que será utilizado no build.</param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="classesDictionary">Dicionário com as classe que já foram processadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.ProcessConditionalSelectStatement(GDA.Interfaces.IProvider,System.Collections.Generic.Dictionary{System.String,System.Type},System.String,System.Collections.Generic.List{GDA.Mapper},GDA.Sql.SelectStatement,System.Boolean)">
            <summary>
            Processa o Select Statement.
            </summary>
            <param name="provider"></param>
            <param name="classesDictionary"></param>
            <param name="mainTableAlias"></param>
            <param name="columns"></param>
            <param name="ss"></param>
            <param name="supportWildcardColumn">Identifica se deve possui suporte para coluna curinga "*"</param>
        </member>
        <member name="M:GDA.Sql.Query.Equals(System.Object)">
            <summary>
            Verifica a igualdade com outro objeto.
            </summary>
            <param name="obj">Outro objeto</param>
            <returns>True se for igual, false senão.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Equals(GDA.Sql.Query)">
            <summary>
            Verifica a igualdade com outro objeto Query.
            </summary>
            <param name="other">outro objeto Query</param>
            <returns>True se for igual, false senão.</returns>
        </member>
        <member name="M:GDA.Sql.Query.GetHashCode">
            <summary>
            Gets the hash code for this instance.
            </summary>
            <returns>hash code</returns>
        </member>
        <member name="M:GDA.Sql.Query.Add(System.Data.DbType,System.Object)">
            <summary>
            Adiciona um parametro na consulta.
            </summary>
            <param name="dbtype">Tipo usado na base de dados</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="M:GDA.Sql.Query.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.Query.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.Query.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.Query.Count``1">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Count``1(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Sum``1(System.String)">
            <summary>
            Efetua a soma de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="propertyName">Propriedade que sera somada.</param>
            <returns>Soma dos valores da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Sum``1(GDA.GDASession,System.String)">
            <summary>
            Efetua a soma de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertyName">Propriedade que sera somada.</param>
            <returns>Soma dos valores da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Max``1(System.String)">
            <summary>
            Recupera o valor máximo de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="propertyName">Propriedade onde será recupera o valor máximo.</param>
            <returns>Valor máximo da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Max``1(GDA.GDASession,System.String)">
            <summary>
            Recupera o valor máximo de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertyName">Propriedade onde será recupera o valor máximo.</param>
            <returns>Valor máximo da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Min``1(System.String)">
            <summary>
            Recupera o valor mínimo de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="propertyName">Propriedade onde será recupera o valor mínimo.</param>
            <returns>Valor mínimo da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Min``1(GDA.GDASession,System.String)">
            <summary>
            Recupera o valor mínimo de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertyName">Propriedade onde será recupera o valor mínimo.</param>
            <returns>Valor mínimo da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Avg``1(System.String)">
            <summary>
            Recupera o valor médio de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="propertyName">Propriedade onde será recupera o valor médio.</param>
            <returns>Valor médio da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.Avg``1(GDA.GDASession,System.String)">
            <summary>
            Recupera o valor médio de uma determina propriedade da classe T definida.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertyName">Propriedade onde será recupera o valor médio.</param>
            <returns>Valor médio da propriedade identificada.</returns>
        </member>
        <member name="M:GDA.Sql.Query.GDA#IGDAParameterContainer#TryGet(System.String,GDA.GDAParameter@)">
            <summary>
            Tenta recupera o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.GDA#IGDAParameterContainer#ContainsKey(System.String)">
            <summary>
            Verifica se existe algum parametro com o nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.Query.GDA#IGDAParameterContainer#Remove(System.String)">
            <summary>
            Remove o parametro pelo nome informado.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.QueryReturnInfo">
            <summary>
            Representa as informações para o retorno da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.QueryReturnInfo.Parameters">
            <summary>
            Lista dos parametros que serão utilizados.
            </summary>
        </member>
        <member name="P:GDA.Sql.QueryReturnInfo.CommandText">
            <summary>
            Comando de texto da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.QueryReturnInfo.RecoverProperties">
            <summary>
            Lista das propriedades mapeadas que devem ser recuperadas.
            </summary>
        </member>
        <member name="M:GDA.Sql.QueryReturnInfo.#ctor(System.String,System.Collections.Generic.IList{GDA.GDAParameter},System.Collections.Generic.List{GDA.Mapper})">
            <summary>
            Construtor interno padrão.
            </summary>
            <param name="commandText">Comando de texto da consulta.</param>
            <param name="parameters">Lista dos parametros que serão utilizados.</param>
            <param name="recoverProperties">Lista com as propriedades que devem ser recuperadas na consulta.</param>
        </member>
        <member name="T:GDA.Sql.SelectStatement">
            <summary>
            Implementação de um Statement para Select.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._commandType">
            <summary>
            Tipo do comando que será executado.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._steps">
            <summary>
            Número de passos gasto para pecorrer todo o parser.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._parser">
            <summary>
            Parser relacionado.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._tablesInfo">
            <summary>
            Lista que armazenas as informações das tabela usadas no comando.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._columnsInfo">
            <summary>
            Lista das colunas encontrars no sql.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._tablesInfoList">
            <summary>
            Lista das informações da tabelas.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._columnsInfoList">
            <summary>
            Lista das informações das colunas.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._variablesInfo">
            <summary>
            Lista com as informações da variáveis.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement.parameters">
            <summary>
            Lista dos parametros relacionados com a consulta.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._references">
            <summary>
            Instacia da classe de referencia usada.
            </summary>
        </member>
        <member name="F:GDA.Sql.SelectStatement._keyFieldName">
            <summary>
            Nome do campo chave da consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.TablesInfo">
            <summary>
            Lista das tabelas encontradas no comando sql.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.ColumnsInfo">
            <summary>
            Lista das informações das colunas.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.VariablesInfo">
            <summary>
            Informações das variáveis processadas.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.Command">
            <summary>
            Comando sql.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.Steps">
            <summary>
            Número de passos gasto para pecorrer todo o parser.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.Parameters">
            <summary>
            Recupera a lista de parametros
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.CommandType">
            <summary>
            Tipo do comando que será executado.
            </summary>
        </member>
        <member name="P:GDA.Sql.SelectStatement.KeyFieldName">
            <summary>
            Nome da propriedade chave da consulta.
            </summary>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Parser)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="references"></param>
            <param name="parser"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.InterpreterExpression.Parser)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="parser"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Nodes.WherePart)">
            <summary>
            Recupera as informações contidas dentro da clausula WHERE.
            </summary>
            <param name="wp"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.InterpreterExpression.Nodes.WherePart)">
            <summary>
            Recupera as informações contidas dentro da clausula WHERE.
            </summary>
            <param name="wp"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Nodes.OrderByPart)">
            <summary>
            Recupera as informações contidas dentro da clausula ORDER BY.
            </summary>
            <param name="references"></param>
            <param name="op"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.InterpreterExpression.Nodes.OrderByPart)">
            <summary>
            Recupera as informações contidas dentro da clausula ORDER BY.
            </summary>
            <param name="op"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Nodes.GroupByPart)">
            <summary>
            Recupera as informações contidas dentro da clausula GROUP BY.
            </summary>
            <param name="gbp"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.InterpreterExpression.Nodes.GroupByPart)">
            <summary>
            Recupera as informações contidas dentro da clausula GROUP BY.
            </summary>
            <param name="gbp"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Nodes.HavingPart)">
            <summary>
            Recupera as informações contidas dentro da clausula HAVING.
            </summary>
            <param name="references"></param>
            <param name="havingPart"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.#ctor(GDA.Sql.InterpreterExpression.Nodes.HavingPart)">
            <summary>
            Recupera as informações contidas dentro da clausula HAVING.
            </summary>
            <param name="havingPart"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.GetSelectInfo(GDA.Sql.InterpreterExpression.Nodes.Select)">
            <summary>
            Recupera as informacoes do Select.
            </summary>
            <param name="select"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ColumnName(GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            Recupera o nome da coluna.
            </summary>
            <param name="se"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.AddColumnInfo(GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            Adiciona as informacoes da coluna.
            </summary>
            <param name="se"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.AddVariableInfo(GDA.Sql.InterpreterExpression.Nodes.SqlExpression)">
            <summary>
            Adiciona as informações de uma variável.
            </summary>
            <param name="se"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ProcessVariablesInfo(GDA.IGDAParameterContainer)">
            <summary>
            Processa as informações das variáveis.
            </summary>
            <param name="parameterContainer"></param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Parser">
            <summary>
            Converte a consulta para string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Parser(GDA.Interfaces.IProvider)">
            <summary>
            Passa a consulta para string.
            </summary>
            <param name="provider">Provider usado para gerar a consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Parser2(GDA.IGDAParameterContainer)">
            <summary>
            Converte a consulta para string.
            </summary>
            <param name="parameterContainer">Container dos parametros que serão usado no processo.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Parser2(GDA.Interfaces.IProvider,GDA.IGDAParameterContainer)">
            <summary>
            Passa a consulta para string.
            </summary>
            <param name="provider">Provider usado para gerar a consulta.</param>
            <param name="parameterContainer"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(GDA.GDAParameter)">
            <summary>
            Adiciona um novo parametro na consulta.
            </summary>
            <param name="parameter">Paramentro a ser adicionado.</param>
            <returns>Retorna a referencia da consulta aonde o parametro foi adicionado.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(GDA.GDAParameter[])">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(System.Collections.Generic.IEnumerable{GDA.GDAParameter})">
            <summary>
            Adiciona um novo conjunto de parametros na consulta.
            </summary>
            <param name="parameters">Parametros a serem adicionados.</param>
            <returns>Retorna a referencia da consulta aonde os parametros foram adicionados.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(System.Data.DbType,System.Object)">
            <summary>
            Adiciona um parametro na consulta.
            </summary>
            <param name="dbtype">Tipo usado na base de dados</param>
            <param name="value">Valor do parametro.</param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.SelectStatement.SetCommandType(System.Data.CommandType)">
            <summary>
            Define o tipo de comando qeu será executado.
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.SetCommandTimeout(System.Int32)">
            <summary>
            Define o Timeout do comando.
            </summary>
            <param name="commandTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Skip(System.Int32)">
            <summary>
            Salta um número especifico de registros antes de recuperar os resultado.
            </summary>
            <param name="count">Quantidade de registros que serão saltados.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Take(System.Int32)">
            <summary>
            Define a quantidade de registro que serão recuperados.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Count">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.Count(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ToResultList``1(System.Int32)">
            <summary>
            Recupera o <see cref="!:ResultList"/> do resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ToResultList``1(GDA.GDASession,System.Int32)">
            <summary>
            Recupera o <see cref="!:GDA.Sql.ResultList"/> do resultado da consulta.
            </summary>
            <typeparam name="T">Model que será tratada.</typeparam>
            <param name="session"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ToDataRecords">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.ToDataRecords(GDA.GDASession)">
            <summary>
            Recupera o resultado da consulta em forma de cursor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <typeparam name="T">Model que será tratada.</typeparam>
            <returns>Lista dos registros recuperados com base nos parametros informados.</returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.BuildResultInfo``1(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Constrói o resultado com as informações que serão processadas.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.BuildResultInfo(System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.BuildResultInfo2(GDA.Interfaces.IProvider,System.String)">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider"></param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.BuildResultInfo2(GDA.Interfaces.IProvider,System.String,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Constrói as informações para o resultado da consulta.
            </summary>
            <param name="provider">Provider que será utilizado no build.</param>
            <param name="aggregationFunction">Função de agregação usada para recuperar o resultado.</param>
            <param name="classesDictionary">Dicionário com as classe que já foram processadas.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SelectStatement.GetNamedQuery(System.String)">
            <summary>
            Recupera uma consulta nomeada.
            </summary>
            <param name="queryName"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.SqlBuilder">
            <summary>
            Classe responsável por construir o comando sql.
            </summary>
        </member>
        <member name="M:GDA.Sql.SqlBuilder.ImportNamespace(System.Reflection.Assembly,System.String)">
            <summary>
            Importa um namespace para ser trabalhado pelo SqlBuilder.
            </summary>
            <param name="assembly">Assembly onde o namespace está introduzido.</param>
            <param name="namesSpace">Namespace importado.</param>
        </member>
        <member name="M:GDA.Sql.SqlBuilder.P(GDA.Sql.ISelectStatementReferences,System.String)">
            <summary>
            Recupera uma consulta para a tradução do comando passsado.
            </summary>
            <param name="command">Comando que sera traduzido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SqlBuilder.P(System.String)">
            <summary>
            Recupera uma consulta para a tradução do comando passsado.
            </summary>
            <param name="command">Comando que sera traduzido.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.SqlPropertyInfo.#ctor(System.String,System.Object)">
            <summary>
            Constrói uma instância de SqlPropertyInfo com seus valores apropriados.
            </summary>
            <param name="propertyName">Nome da propriedade que representa.</param>
            <param name="value">Valor da propriedades que representa.</param>
        </member>
        <member name="M:GDA.Sql.SqlPropertyInfo.#ctor(System.String,System.Object,GDA.Sql.Operator)">
            <summary>
            Constrói uma instância de SqlPropertyInfo com seus valores apropriados.
            </summary>
            <param name="propertyName">Nome da propriedade que representa.</param>
            <param name="value">Valor da propriedades que representa.</param>
            <param name="sqlOperator">Operação a ser usada.</param>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.PropertyName">
            <summary>
            Nome da propriedade a ser usada na consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.Value">
            <summary>
            Valor a ser utilizado na consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.SqlOperator">
            <summary>
            Operador a ser usado na consulta.
            </summary>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.UseOrderBy">
            <summary>
            Identifica se será usado ordenação pela propriedade.
            </summary>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.OrderByPos">
            <summary>
            Posição de ordenação em relacionação as outras propriedades.
            </summary>
        </member>
        <member name="P:GDA.Sql.SqlPropertyInfo.OrderType">
            <summary>
            Tipo de ordenação.
            </summary>
        </member>
        <member name="T:GDA.Sql.TableInfo">
            <summary>
            Armazena as informações de um tabela.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._tableNameExpression">
            <summary>
            Expressão que armazena o nome da tabela.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._tableAlias">
            <summary>
            Expressão que armazena o apelido da tabela.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._tableName">
            <summary>
            Nome da tabela.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._columns">
            <summary>
            Lista das colunas relacionadas com a tabela.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._classTypeRelated">
            <summary>
            Tipo da classe que a tabela está relacionada.
            </summary>
        </member>
        <member name="F:GDA.Sql.TableInfo._typeInfo">
            <summary>
            Armazena as informações do tipo relacionado com o nome da tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableInfo.ClassTypeRelated">
            <summary>
            Tipo da classe que a tabela está relacionada.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableInfo.Columns">
            <summary>
            Lista das colunas relacionadas com a tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableInfo.TableName">
            <summary>
            Nome da tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableInfo.TableAlias">
            <summary>
            Apelido da tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableInfo.TypeInfo">
            <summary>
            Informações do tipo relacionado com a tabela.
            </summary>
        </member>
        <member name="M:GDA.Sql.TableInfo.#ctor(GDA.Sql.ISelectStatementReferences,GDA.Sql.InterpreterExpression.Nodes.TableNameExpression,GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="tableName">Referência da expressão que armazena o nome da tabela.</param>
            <param name="tableAlias">Expressão que armazena o apelido da tabela.</param>
        </member>
        <member name="M:GDA.Sql.TableInfo.ExistsColumn(System.String)">
            <summary>
            Verifica se a tabela contem a coluna mencionada.
            </summary>
            <param name="columnName">Nome da coluna.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.TableInfo.ExistsColumn(GDA.Sql.ColumnInfo)">
            <summary>
            Verifica se a tabela contém a coluna mencionada.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.TableInfo.AddColumn(GDA.Sql.ColumnInfo)">
            <summary>
            Adiciona um coluna na tabela.
            </summary>
            <param name="ci"></param>
        </member>
        <member name="M:GDA.Sql.TableInfo.RenameToMapper">
            <summary>
            Renomeia as entrada para o mapeamento.
            </summary>
        </member>
        <member name="T:GDA.Sql.TableName">
            <summary>
            Armazena os dados do nome de uma tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableName.Name">
            <summary>
            Nome da tabela.
            </summary>
        </member>
        <member name="P:GDA.Sql.TableName.Schema">
            <summary>
            Esquema onde ela está introduzida.
            </summary>
        </member>
        <member name="M:GDA.Sql.TableName.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Sql.TableName.#ctor(System.String,System.String)">
            <summary>
            Cria uma instancia já preenchendo os valores.
            </summary>
            <param name="name"></param>
            <param name="schema"></param>
        </member>
        <member name="T:GDA.Sql.QueryWhereClause">
            <summary>
            Clausula condicional de uma consulta.
            </summary>
        </member>
        <member name="M:GDA.Sql.QueryWhereClause.#ctor(GDA.Sql.Query,GDA.Sql.ConditionalContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="query"></param>
            <param name="container"></param>
        </member>
        <member name="P:GDA.Sql.QueryWhereClause.Query">
            <summary>
            Instancia da query relacionada.
            </summary>
        </member>
        <member name="T:GDA.Sql.VariableInfo">
            <summary>
            Armazena as informações de uma variável.
            </summary>
        </member>
        <member name="P:GDA.Sql.VariableInfo.Name">
            <summary>
            Nome da variável associada.
            </summary>
        </member>
        <member name="M:GDA.Sql.VariableInfo.#ctor(GDA.Sql.InterpreterExpression.Expression)">
            <summary>
            Construtor padrão,
            </summary>
            <param name="expression">Expressão associada.</param>
            <param name="name">Nome da variavel.</param>
        </member>
        <member name="M:GDA.Sql.VariableInfo.Replace(GDA.Interfaces.IProvider,GDA.IGDAParameterContainer,System.Collections.Generic.Dictionary{System.String,System.Type})">
            <summary>
            Executa o replace da variável.
            </summary>
            <param name="provider"></param>
            <param name="parameterContainer">Container dos parametros que serão processados.</param>
            <param name="classesDictionary"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.VariableInfo.VariableInfoComparer">
            <summary>
            Implementação do comparador para as informações da variável.
            </summary>
        </member>
        <member name="M:GDA.Sql.VariableInfo.VariableInfoComparer.Compare(GDA.Sql.VariableInfo,GDA.Sql.VariableInfo)">
            <summary>
            Compara s duas instancia com as informações das variáveis.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.Sql.WhereClause`1">
            <summary>
            Representa um clausula condicional Where.
            </summary>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.#ctor(GDA.Sql.ConditionalContainer)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.And(GDA.Sql.Conditional)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Or(GDA.Sql.Conditional)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.And(System.String)">
            <summary>
            Adiciona uma condição do tipo AND.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Or(System.String)">
            <summary>
            Adiciona uma condição do tipo OR.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Start(GDA.Sql.Conditional)">
            <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
            </summary>
            <param name="conditional"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Start(System.String)">
             <summary>
            Adiciona a condição inicial. Essa operação limpa todas a outras condições já existentes.
             </summary>
             <param name="expression"></param>
             <returns></returns>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adicionar um parametro.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="dbtype">Tipo usado na base de dados.</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Add(System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:GDA.Sql.WhereClause`1.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a parameter.
            </summary>
            <param name="name">parameter name</param>
            <param name="dbtype">database data type</param>
            <param name="size">size of the database data type</param>
            <param name="value">parameter value</param>
        </member>
        <member name="F:GDA.BaseDAO`1.currentPersistenceObject">
            <summary>
            PersistenceObject que será responsável por tratar o acesso a dados
            </summary>
        </member>
        <member name="P:GDA.BaseDAO`1.CurrentPersistenceObject">
            <summary>
            Gets PersistenceObject que será responsável por tratar o acesso a dados
            </summary>
        </member>
        <member name="P:GDA.BaseDAO`1.Configuration">
            <summary>
            Provider de configuração usado na DAO.
            </summary>
        </member>
        <member name="M:GDA.BaseDAO`1.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor padrão.
            </summary>
            <param name="providerConfig">Provider com todo a configuração para acesso a dados.</param>
        </member>
        <member name="M:GDA.BaseDAO`1.#ctor">
            <summary>
            Constrói uma instancia de BaseDAO e carrega as configuração do arquivo de configuração.
            </summary>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Select">
            <summary>
            Carrega todos os dados contidos na tabela.
            </summary>
            <returns>Todos os dados da tabela.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Select(GDA.GDASession)">
            <summary>
            Carrega todos os dados contidos na tabela.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Todos os dados da tabela.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Select(GDA.Sql.IQuery)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="query">Dados da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Select(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Carrega os dados com base na consulta informada.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Dados da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.BaseDAO`1.SelectToDataRecord(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a consulta submetida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Count(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Count">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Count(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Count(GDA.Sql.Query)">
            <summary>
            Recupera a quantidade de registros com base na Query.
            </summary>
            <param name="query">Consulta usada.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Sum(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Efetua a soma de uma determina propriedade da classe T definida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Soma dos valores ou zero</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Max(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera o item com o maior valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Maior valor encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Min(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera o item com o menor valor.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Menor valor encontrado.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Avg(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Recupera a média dos valores da propriedade especificada na consulta.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta usada.</param>
            <returns>Valor medio encontrado ou zero.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,`0)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.RecoverData(`0)">
            <summary>
            Recupera os dados do objeto submetido tem como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.RecoverData(GDA.GDASession,`0)">
            <summary>
            Recupera os dados do objeto submetido tem como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,`0,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,`0)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(`0,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(`0)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,`0,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,`0)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(`0,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(`0)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(GDA.GDASession,`0)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(`0)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Remove o conjunto de itens relacionados com a model com base na consulta fornecida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Filtro para os itens a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(GDA.Sql.Query)">
            <summary>
            Remove o conjunto de itens relacionados com a model com base na consulta fornecida.
            </summary>
            <param name="query">Filtro para os itens a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.InsertOrUpdate(GDA.GDASession,`0)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.InsertOrUpdate(`0)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(System.Object,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(GDA.GDASession,System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Insert(System.Object)">
            <summary>
            Insere os dados no BD.
            </summary>
            <param name="objInsert">Objeto contendo os dados a serem inseridos.</param>
            <returns>Identidade gerada.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(System.Object,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(System.Object,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(GDA.GDASession,System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Update(System.Object)">
            <summary>
            Atualiza os dados no BD.
            </summary>
            <param name="objUpdate">Objeto contendo os dados a serem atualizados.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(GDA.GDASession,System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.Delete(System.Object)">
            <summary>
            Remove os dados no BD.
            </summary>
            <param name="objDelete">Objeto contendo os dados a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.InsertOrUpdate(GDA.GDASession,System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.InsertOrUpdate(System.Object)">
            <summary>
            Se o registro já existir, atualiza, caso contrário insere.
            </summary>
            <param name="objUpdate">Objeto contendo os dados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException"></exception>
        </member>
        <member name="M:GDA.BaseDAO`1.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="F:GDA.GDASettings.loadDataConfig">
            <summary>
            Identifica que os dados de configuração já foram carregados.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._providerConfiguration">
            <summary>
            Lista que armazena os provider já instânciados.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._providersConfigurationConstructors">
            <summary>
            Lista que armazena os construtores dos providers.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._providersConfigurationInfo">
            <summary>
            Lista que armazena as informações dos provider a serem construídos.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._modelsNamespaces">
            <summary>
            Lista que armazena os namespaces aonde as models estão alocacadas.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._constructorProvider">
            <summary>
            Construtor padrão do provider.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._defaultProvider">
            <summary>
            Nome do provider padrão.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._enabledDebugTrace">
            <summary>
            Identifica se está habilitado o debug.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._maximumMapperCache">
            <summary>
            Tamanho máximo do cache para armazenar os mapeamentos.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._decryptMethod">
            <summary>
            Instancia do método usado na descriptografia dos dados.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._encryptMethod">
            <summary>
            Instancia do método usado na criptografia dos dados.
            </summary>
        </member>
        <member name="F:GDA.GDASettings._generatorsKey">
            <summary>
            Instancias dos geradores de chave carregados no sistema.
            </summary>
        </member>
        <member name="P:GDA.GDASettings.DefaultProviderName">
            <summary>
            Nome do provider padrão.
            </summary>
        </member>
        <member name="P:GDA.GDASettings.MaximumMapperCache">
            <summary>
            Tamanho máximo do cache para armazenar os mapeamentos. Default 10.
            </summary>
        </member>
        <member name="P:GDA.GDASettings.DecryptMethod">
            <summary>
            Instancia do método usado na descriptografia dos dados.
            </summary>
        </member>
        <member name="P:GDA.GDASettings.EncryptMethod">
            <summary>
            Instancia do método usado na criptografia dos dados.
            </summary>
        </member>
        <member name="M:GDA.GDASettings.SetDefaultProvider(System.String)">
            <summary>
            Connection string a ser usada no provider.
            </summary>
        </member>
        <member name="M:GDA.GDASettings.SetMaximumMapperCache(System.Int32)">
            <summary>
            Define o tamanho máximo do cache para o mapeamentos das classes.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:GDA.GDASettings.Debug(System.Boolean)">
            <summary>
            Identifica se será usado o trace para o debug.
            </summary>
            <param name="trace"></param>
        </member>
        <member name="M:GDA.GDASettings.AddProviderConfiguration(System.String,GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Adiciona um provedor de configuração.
            </summary>
            <param name="name">Nome do provedor de configuração.</param>
            <param name="providerConfiguration">Instancia do provedor.</param>
        </member>
        <member name="M:GDA.GDASettings.AddCryptoClass(System.String,System.String,System.String)">
            <summary>
            Registra a classe que ficara responsável pela criptografia dos dados.
            </summary>
            <param name="classType"></param>
            <param name="name"></param>
        </member>
        <member name="M:GDA.GDASettings.AddProviderConfigurationInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Adiciona novas informação das configurações dos provider disponíveis.
            </summary>
            <param name="name">Nome do providerConfigurationInfo.</param>
            <param name="providerName">Nome do provider relacionado.</param>
            <param name="connectionString">Connection string usada pelo provider.</param>
        </member>
        <member name="M:GDA.GDASettings.AddModelsNamespace(System.String,System.String)">
            <summary>
            Adiciona um novo namespace que as models mapeadas estão localizadas.
            </summary>
            <param name="assembly"></param>
            <param name="name">Nome do namespace.</param>
        </member>
        <member name="M:GDA.GDASettings.AddModelsNamespace(System.Reflection.Assembly,System.String)">
            <summary>
            Adiciona um novo namespace que as models mapeadas estão localizadas.
            </summary>
            <param name="assembly"></param>
            <param name="name">Nome do namespace.</param>
        </member>
        <member name="M:GDA.GDASettings.AddGeneratorKey(System.String,GDA.IGeneratorKey)">
            <summary>
            Adiciona a instancia de um gerador de chave que será usada no sistema.
            </summary>
            <param name="name">Nome do gerador.</param>
            <param name="instance">Instancia do gerador.</param>
        </member>
        <member name="M:GDA.GDASettings.GetGeneratorsKey">
            <summary>
            Recupera os geradores de chave do sistema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GDA.GDASettings.GetGeneratorKey(System.String)">
            <summary>
            Recupera o gerador de chave com base no nome informado.
            </summary>
            <param name="name"></param>
            <returns>Instancia do gerador ou null caso não seja encontrado.</returns>
        </member>
        <member name="M:GDA.GDASettings.DefineGenerateKeyHandler(System.String,System.String)">
            <summary>
            Define o método que irá manipular a geração de chaves.
            </summary>
            <param name="classType"></param>
            <param name="methodName"></param>
        </member>
        <member name="M:GDA.GDASettings.DefineProviderConfigurationLoadHandler(System.String,System.String)">
            <summary>
            Define o método que irá manipular a inicialização dos provedores de configuração.
            </summary>
            <param name="classType"></param>
            <param name="methodName"></param>
        </member>
        <member name="P:GDA.GDASettings.DefaultProviderConfiguration">
            <summary>
            Provider para acesso aos dados.
            </summary>
        </member>
        <member name="M:GDA.GDASettings.GetProviderConfiguration(System.String)">
            <summary>
            Obtem o <see cref="T:GDA.Interfaces.IProviderConfiguration"/> com base no nome.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GDA.GDASettings.CreateProviderConfiguration(System.String,System.String)">
            <summary>
            Cria um provider.
            </summary>
            <param name="name">Nome do provider.</param>
            <param name="connectionString"></param>
            <returns>Instancia do provider.</returns>
        </member>
        <member name="M:GDA.GDASettings.AddProvider(System.String,System.String,System.String)">
            <summary>
            Adiciona um novo provider de configuração.
            </summary>
            <param name="name">Nome do provider.</param>
            <param name="classNamespace">Classe que representa o provider.</param>
            <param name="assembly"></param>
        </member>
        <member name="M:GDA.GDASettings.AddMapping(System.String,System.String,System.String)">
            <summary>
            Adiciona um mapeamento.
            </summary>
            <param name="assemblyName">Nome do assembly onde o mapeamento está inserido.</param>
            <param name="resourceName">Nome do resource do mapeamento.</param>
            <param name="fileName">Arquivo aonde o mapemento está inserido.</param>
        </member>
        <member name="P:GDA.GDASettings.ModelsNamespaces">
            <summary>
            Lista que armazena os namespaces aonde as models estão alocacadas.
            </summary>
        </member>
        <member name="M:GDA.GDASettings.LoadConfiguration">
            <summary>
            Carrega o arquivo de configuracao.
            </summary>
        </member>
        <member name="T:GDA.GDAConditionalClauseException">
            <summary>
            Exception que remete os erros com as claúsulas condicionais.
            </summary>
        </member>
        <member name="T:GDA.GDAException">
            <summary>
            Representa o error ocorrido no GDA.
            </summary>
        </member>
        <member name="M:GDA.GDAException.#ctor(System.String)">
            <summary>
            Construtor padr�o.
            </summary>
            <param name="message">Mensagem do error.</param>
        </member>
        <member name="T:GDA.IGDAParameterContainer">
            <summary>
            Assinatura das instancia que contem parametros.
            </summary>
        </member>
        <member name="M:GDA.IGDAParameterContainer.Add(GDA.GDAParameter)">
            <summary>
            Adiciona uma novo parametro.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:GDA.IGDAParameterContainer.TryGet(System.String,GDA.GDAParameter@)">
            <summary>
            Tenta recupera o parametro pelo nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <param name="parameter">Instancia do parametro encontrado.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.IGDAParameterContainer.ContainsKey(System.String)">
            <summary>
            Verifica se existe algum parametro com o nome informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.IGDAParameterContainer.Remove(System.String)">
            <summary>
            Remove o parametro informado.
            </summary>
            <param name="name">Nome do parametro.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.GDAParameter">
            <summary>
            Representa um parametro do GDA.
            </summary>
        </member>
        <member name="F:GDA.GDAParameter._dbType">
            <summary>
            Tipo do parametro.
            </summary>
        </member>
        <member name="M:GDA.GDAParameter.#ctor">
            <summary>
            Construtor padr�o.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.DbType">
            <summary>
            Tipo da base de dados tratado pelo parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.ParameterName">
            <summary>
            Nome do parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.Value">
            <summary>
            Valor do parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.Size">
            <summary>
            Tamanho do parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.Direction">
            <summary>
            Dire��o do parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.IsNullable">
            <summary>
            Identifica se o parametro aceita valores nulos.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.SourceColumn">
            <summary>
            Fonte da coluna do parametro.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.DbTypeIsDefined">
            <summary>
            Identifica se o tipo do banco de dados foi definido.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.NativeDbType">
            <summary>
            Tipo do DB nativo.
            </summary>
        </member>
        <member name="P:GDA.GDAParameter.NativeDbTypeIsDefined">
            <summary>
            Identifica se o tipo do DB nativo foi definido.
            </summary>
        </member>
        <member name="T:GDA.GDATableNameRepresentNotExistsException">
            <summary>
            
            </summary>
        </member>
        <member name="T:GDA.InfoPaging">
            <summary>
            Informações sobre a paginação.
            </summary>
        </member>
        <member name="P:GDA.InfoPaging.StartRow">
            <summary>
            Linha inicial da Página.
            </summary>
        </member>
        <member name="P:GDA.InfoPaging.PageSize">
            <summary>
            Tamanho do página.
            </summary>
        </member>
        <member name="P:GDA.InfoPaging.KeyFieldName">
            <summary>
            Nome do campo chave que pode ser usado para auxiliar na paginação.
            </summary>
        </member>
        <member name="M:GDA.InfoPaging.#ctor(System.Int32,System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="startRow">Linha inicial.</param>
            <param name="pageSize">Tamanho da página.</param>
        </member>
        <member name="P:GDA.InfoSortExpression.SortColumn">
            <summary>
            Coluna a ser ordenada.
            </summary>
        </member>
        <member name="P:GDA.InfoSortExpression.Reverse">
            <summary>
            Identifica a ordem da ordenação.
            </summary>
        </member>
        <member name="P:GDA.InfoSortExpression.AliasTable">
            <summary>
            Apelido da tabela na query sql.
            </summary>
        </member>
        <member name="P:GDA.InfoSortExpression.DefaultFieldSort">
            <summary>
            Campo que vem ordenado como padrão.
            </summary>
        </member>
        <member name="M:GDA.InfoSortExpression.#ctor(System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="sortExpression">Expressão de ordenação que a GridView passa como parametro.</param>
        </member>
        <member name="M:GDA.InfoSortExpression.#ctor(System.String,System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="sortExpression"></param>
            <param name="defaultFieldSort">Campo que vem ordenado por padrão.</param>
        </member>
        <member name="M:GDA.InfoSortExpression.#ctor(System.String,System.String,System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="sortExpression"></param>
            <param name="defaultFieldSort">Campo que vem ordenado por padrão.</param>
            <param name="aliasTable">Apelido da tabela aonde o campo está sendo ordenado.</param>
        </member>
        <member name="T:GDA.Persistent">
            <summary>
            Classe base para as models com métodos especializados.
            </summary>
        </member>
        <member name="M:GDA.Persistent.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.Persistent.Insert(System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Insert(GDA.GDASession,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Insert(System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Insert(GDA.GDASession,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Insert">
            <summary>
            Inseri o registro no BD.
            </summary>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.Persistent.Insert(GDA.GDASession)">
            <summary>
            Inseri o registro no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Chave gerada no processo.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
        </member>
        <member name="M:GDA.Persistent.Update(GDA.GDASession,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Persistent.Update(System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Persistent.Update(GDA.GDASession,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que serão atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Persistent.Update(System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="propertiesNamesUpdate">Nome das propriedades separadas por virgula, que serão atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.Persistent.Update(GDA.GDASession)">
            <summary>
            Atualiza o registro na BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Update">
            <summary>
            Atualiza o registro na BD.
            </summary>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Delete(GDA.GDASession)">
            <summary>
            Remove o registro da base de dados.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Delete">
            <summary>
            Remove o registro da base de dados.
            </summary>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.Persistent.Save">
            <summary>
            Salva os dados na base. Primeiro verifica se o registro existe, se existir ele será atualizado
            senão ele será inserido.
            </summary>
            <returns>A chave do registro inserido ou 0 se ele for atualizado.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado não possuir chaves.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
        </member>
        <member name="M:GDA.Persistent.Save(GDA.GDASession)">
            <summary>
            Salva os dados na base. Primeiro verifica se o registro existe, se existir ele será atualizado
            senão ele será inserido.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <returns>A chave do registro inserido ou 0 se ele for atualizado.</returns>
            <exception cref="T:GDA.GDAReferenceDAONotFoundException"></exception>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado não possuir chaves.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
        </member>
        <member name="M:GDA.Persistent.RecoverData">
            <summary>
            Recupera os valores da Model com base nos valores da chaves preenchidas.
            </summary>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.ItemNotFoundException"></exception>
        </member>
        <member name="M:GDA.Persistent.RecoverData(GDA.GDASession)">
            <summary>
            Recupera os valores da Model com base nos valores da chaves preenchidas.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:GDA.ItemNotFoundException"></exception>
        </member>
        <member name="M:GDA.Persistent.GetDAO">
            <summary>
            Captura a DAO relacionada com a Model.
            </summary>
            <returns>DAO.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(System.String,GDA.InfoSortExpression,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="sortProperty">Informação sobre o propriedade a ser ordenada.</param>
            <param name="paging">Informações sobre a paginação do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(GDA.InfoSortExpression,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="sortProperty">Informação sobre o propriedade a ser ordenada.</param>
            <param name="paging">Informações sobre a paginação do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(System.String,GDA.InfoSortExpression)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="sortProperty">Informação sobre o propriedade a ser ordenada.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(GDA.InfoSortExpression)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="sortProperty">Informação sobre o propriedade a ser ordenada.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(System.String,GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <param name="paging">Informações sobre a paginação do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(GDA.InfoPaging)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="paging">Informações sobre a paginação do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1(System.String)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1toN``1">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1to1``1(System.String)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Será informado também o grupo
            no qual o relacionamento será carregado. Utiliza a estrura 1 para 1
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.LoadRelationship1to1``1(System.Type)">
            <summary>
            Carrega as lista itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para 1
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <returns>Lista tipada do tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.CountRowRelationship1toN``1(System.String)">
            <summary>
            Carrega a quantidade de itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <param name="group">Nome do grupo de relacionamento.</param>
            <returns>Quantidade de itens tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.CountRowRelationship1toN``1">
            <summary>
            Carrega a quantidade de itens da tabela representada pelo tipo da classe
            submetida relacionados com a atual model. Utiliza a estrura 1 para N.
            </summary>
            <typeparam name="ClassRelated">Tipo da classe que representa a tabela do relacionamento.</typeparam>
            <returns>Quantidade de itens tipo da classe que representa a tabela do relacionamento.</returns>
        </member>
        <member name="M:GDA.Persistent.GetTableName">
            <summary>
            Captura o nome da tabela que a class T representa.
            </summary>
        </member>
        <member name="T:GDA.PersistenceClassAttribute">
            <summary>
            Atributo usado para identifica a tabela que a classe ou interface est� mapeando.
            </summary>
        </member>
        <member name="P:GDA.PersistenceClassAttribute.Name">
            <summary>
            Nome da tabela que a classe representa.
            </summary>
        </member>
        <member name="P:GDA.PersistenceClassAttribute.Schema">
            <summary>
            Esquema da tabela no banco de dados.
            </summary>
        </member>
        <member name="M:GDA.PersistenceClassAttribute.#ctor(System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome da tabela que a classe representa.</param>
        </member>
        <member name="M:GDA.PersistenceClassAttribute.#ctor">
            <summary>
            Construtor.
            </summary>
        </member>
        <member name="M:GDA.PersistenceObject`1.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor
            </summary>
            <param name="providerConfig">Provide para acesso aos dados.</param>
        </member>
        <member name="M:GDA.PersistenceObject`1.GetValues(GDA.GDASession,GDA.Sql.IQuery,System.String)">
            <summary>
            Recupera os valores da propriedade que se encontra no resultado da consulta.
            </summary>
            <param name="session">Sess�o para execu��o do comando.</param>
            <param name="query">Comando da consulta que ser� executada.</param>
            <param name="propertyName">Nome da propriedade que ser� recuperada.</param>
            <returns>Valores da propriedade encontrada.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.GetValue(GDA.GDASession,GDA.Sql.IQuery,System.String)">
            <summary>
            Recupera o valor da propriedade que se encontra no resultado da consulta.
            </summary>
            <param name="session">Sess�o para execu��o do comando.</param>
            <param name="query">Comando da consulta que ser� executada.</param>
            <param name="propertyName">Nome da propriedade que ser� recuperada.</param>
            <returns>Valor da propriedade encontrada.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.Select">
            <summary>
            Busca todos os dados relacionados com a Model.
            </summary>
            <returns>Lista com todos os registros relacionados com a model.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.Select(GDA.GDASession)">
            <summary>
            Busca todos os dados relacionados com a Model.
            </summary>
            <returns>Lista com todos os registros relacionados com a model.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.Select(GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a Model com base em uma consulta submetida.
            </summary>
            <param name="query">Dados da consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.Select(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a Model com base em uma consulta submetida.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.SelectToDataRecord(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a consulta submetida.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.DeleteByKey(System.UInt32)">
            <summary>
            Remove o item do BD baseando na chave passada.
            </summary>
            <param name="key">Valor da chave da model.</param>
            <returns>N�mero de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataAndPaging(System.String,System.Int32,System.Int32)">
            <summary>
            Carrega os dados aplicando pagina��o.
            </summary>
            <param name="sqlQuery">Consulta usada na recupera��o.</param>
            <param name="startRow">Linha inicial da p�gina de registros a ser recuperada.</param>
            <param name="pageSize">Tamanho da p�gina de registros.</param>
            <param name="parameters">Parametros usados na consulta.</param>
            <returns>Lista com os registro da consulta.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataAndPaging(System.String,System.Int32,System.Int32,GDA.GDAParameter[])">
            <summary>
            Carrega os dados aplicando pagina��o.
            </summary>
            <param name="sqlQuery">Consulta usada na recupera��o.</param>
            <param name="startRow">Linha inicial da p�gina de registros a ser recuperada.</param>
            <param name="pageSize">Tamanho da p�gina de registros.</param>
            <param name="parameters">Parametros usados na consulta.</param>
            <returns>Lista com os registro da consulta.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataAndPaging(GDA.GDASession,System.String,System.Int32,System.Int32,GDA.GDAParameter[])">
            <summary>
            Carrega os dados aplicando pagina��o.
            </summary>
            <param name="session"></param>
            <param name="sqlQuery">Consulta usada na recupera��o.</param>
            <param name="startRow">Linha inicial da p�gina de registros a ser recuperada.</param>
            <param name="pageSize">Tamanho da p�gina de registros.</param>
            <param name="parameters">Parametros usados na consulta.</param>
            <returns>Lista com os registro da consulta.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataWithSortExpression(System.String,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="sortExpression">Express�o de ordena��o do comando sql.</param>
            <param name="infoPaging">Informa��es para pagina��o do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataWithSortExpression(System.String,System.Data.CommandType,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="commandType">Tipo do comando a ser executado.</param>
            <param name="sortExpression">Express�o de ordena��o do comando sql.</param>
            <param name="infoPaging">Informa��es para pagina��o do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataWithSortExpression(GDA.GDASession,System.String,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="sortExpression">Express�o de ordena��o do comando sql.</param>
            <param name="infoPaging">Informa��es para pagina��o do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataWithSortExpression(GDA.GDASession,System.String,System.Data.CommandType,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="sortExpression">Express�o de ordena��o do comando sql.</param>
            <param name="infoPaging">Informa��es para pagina��o do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataWithSortExpression(GDA.GDASession,System.String,System.String,System.Data.CommandType,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="session">Sess�o que ser� usado para executar a consulta.</param>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <param name="sortExpression">Express�o de ordena��o do comando sql.</param>
            <param name="infoPaging">Informa��es para pagina��o do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="session">Sess�o usada para a execu��o da consulta.</param>
            <param name="sqlQuery">Query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(GDA.GDAStoredProcedure)">
            <summary>
            Carrega os dado com o retorno da stored procedure.
            </summary>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <returns>Lista com os dados do retorno.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Carrega os dado com o retorno da stored procedure.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <returns>Lista com os dados do retorno.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(GDA.GDASession,GDA.GDAStoredProcedure,System.String)">
            <summary>
            Carrega os dado com o retorno da stored procedure.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <returns>Lista com os dados do retorno.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(GDA.GDASession,System.String,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(System.String,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(System.String,System.String)">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(System.String,GDA.GDAParameter[])">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadData(System.String)">
            <summary>
            Carrega os dados com o retorno da query.
            </summary>
            <param name="sqlQuery">Query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDASession,System.String)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="sqlQuery">Query.</param>
            <returns>Objeto contendo o retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(System.String)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="sqlQuery">Query.</param>
            <returns>Objeto contendo o retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(System.String,System.String)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <returns>Objeto contendo o retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(System.String,GDA.GDAParameter[])">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Paramentros da consulta.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(System.String,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="sqlQuery">Consulta.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <param name="parameters">Paramentros da consulta.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDASession,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="parameters">Paramentros da consulta.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDASession,System.String,System.String,GDA.GDAParameter[])">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="sqlQuery">Consulta.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <param name="parameters">Paramentros da consulta.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDAStoredProcedure,System.String)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDAStoredProcedure)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDASession,GDA.GDAStoredProcedure)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadOneData(GDA.GDASession,GDA.GDAStoredProcedure,System.String)">
            <summary>
            Carrega um unico registro.
            </summary>
            <param name="session">Sess�o onde a procedure ser� executada.</param>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <param name="selectProperties">Nomes das propriedades que ser�o recuperadas na consulta separados por v�rgula.</param>
            <returns>Item encontrado ou nulo se o item n�o foi encontrado.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObject`1.RecoverData(`0,System.String,GDA.GDAParameter[])">
            <summary>
            Recupera os dados do objeto submetido com base na consulta fornecida.
            </summary>
            <param name="objData">Objeto onde os valores ser�o atribuidos.</param>
            <param name="sqlQuery">Consulta para a recupera��o dos dados.</param>
            <param name="parameters">Parametros utilizados na consulta.</param>
            <returns>Objecto com os valores da recupera��o j� atribu�dos.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.RecoverData(GDA.GDASession,`0,System.String,GDA.GDAParameter[])">
            <summary>
            Recupera os dados do objeto submetido com base na consulta fornecida.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="objData">Objeto onde os valores ser�o atribuidos.</param>
            <param name="sqlQuery">Consulta para a recupera��o dos dados.</param>
            <param name="parameters">Parametros utilizados na consulta.</param>
            <returns>Objecto com os valores da recupera��o j� atribu�dos.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.RecoverData(`0,System.String)">
            <summary>
            Recupera os dados do objeto submetido com base na consulta fornecida.
            </summary>
            <param name="objData">Objeto onde os valores ser�o atribuidos.</param>
            <param name="sqlQuery">Consulta para a recupera��o dos dados.</param>
            <returns>Objecto com os valores da recupera��o j� atribu�dos.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.RecoverData(`0)">
            <summary>
            Recupera os dados do objeto submetido tendo como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.RecoverData(GDA.GDASession,`0)">
            <summary>
            Recupera os dados do objeto submetido tendo como base os valores
            da chave contidos no objeto submetido.
            </summary>
            <param name="session">Sess�o utilizada para a execu��o do comando.</param>
            <param name="objData">Objeto contendo os dados das chaves.</param>
            <returns>Model com os dados recuperados.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataForeignKeyParentToChild``1(`0,System.String,GDA.InfoSortExpression,GDA.InfoPaging)">
            <summary>
            Carrega os dados da tabela filha tem como base os relacionamento entre ela e a atual model, que s�o
            identificados pelo atributos <see cref="T:GDA.PersistenceForeignKeyAttribute"/>.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <param name="sortExpression">Informa��o sobre o propriedade a ser ordenada.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela filha.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.MakeSqlForeignKeyParentToChild``1(`0,System.String,GDA.Interfaces.IBaseDAO{``0},System.String@,System.Collections.Generic.List{GDA.GDAParameter}@,GDA.Interfaces.IProvider)">
            <summary>
            Carrega a consulta sql da tabela filha tem como base os relacionamento entre ela e a atual model, que s�o
            identificados pelo atributos <see cref="T:GDA.PersistenceForeignKeyAttribute"/>.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <param name="dao">DAO relacionada a classe filha.</param>
            <param name="sql">Consulta sql do relacionamento.</param>
            <param name="parametersWhere">Par�metros gerados.</param>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataForeignKeyParentToChild``1(`0,System.String,GDA.InfoSortExpression)">
            <summary>
            Carrega os dados da tabela filha tem como base os relacionamento entre ela e a atual model, que s�o
            identificados pelo atributos <see cref="T:GDA.PersistenceForeignKeyAttribute"/>.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <param name="sortExpression">Informa��o sobre o propriedade a ser ordenada.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela filha.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataForeignKeyParentToChild``1(`0,System.String,GDA.InfoPaging)">
            <summary>
            Carrega os dados da tabela filha tem como base os relacionamento entre ela e a atual model, que s�o
            identificados pelo atributos <see cref="T:GDA.PersistenceForeignKeyAttribute"/>.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <param name="paging">Informa��es sobre a pagina��o do resultado.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela filha.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.LoadDataForeignKeyParentToChild``1(`0,System.String)">
            <summary>
            Carrega os dados da tabela filha tem como base os relacionamento entre ela e a atual model, que s�o
            identificados pelo atributos <see cref="T:GDA.PersistenceForeignKeyAttribute"/>.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <returns>Lista tipada do tipo da classe que representa a tabela filha.</returns>
        </member>
        <member name="M:GDA.PersistenceObject`1.CountRowForeignKeyParentToChild``1(`0,System.String)">
            <summary>
            Captura a quantidade de linhas que da tabela filha tem, se baseado no relacionamento com a atual model.
            </summary>
            <typeparam name="ClassChild">Tipo da classe que representa a tabela filha.</typeparam>
            <param name="parentObj">Objeto contendo as informa��es para fazer o relacionamento.</param>
            <param name="groupOfRelationship">Nome do grupo de relacionamento.</param>
            <returns>Quantidade de linhas encontradas.</returns>
        </member>
        <member name="F:GDA.PersistenceObjectBase`1._tableName">
            <summary>
            Nome da tabela relacionado com a Model.
            </summary>
        </member>
        <member name="F:GDA.PersistenceObjectBase`1.CompatibleWithPersistence">
            <summary>
            Identifica que a model relacionado é compatível com a classe Persistence.
            </summary>
        </member>
        <member name="F:GDA.PersistenceObjectBase`1._existsIdentityProperty">
            <summary>
            Identifica se no mapeamento da model existe alguma propriedade do tipo identidade.
            </summary>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.#ctor(GDA.Interfaces.IProviderConfiguration)">
            <summary>
            Construtor
            </summary>
            <param name="providerConfig">Provider para acesso aos dados.</param>
            <exception cref="T:System.ArgumentNullException">Excessão lançada se o argumento providerConfig for nulo.</exception>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.DebugTrace">
            <summary>
            Evento acionado quando alguma message para debug é lançada.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Inserting">
            <summary>
            Evento acionado quando o registro está começando a ser inserido na BD.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Inserted">
            <summary>
            Evento acionado quando um registro é inserido na BD.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Updating">
            <summary>
            Evento acionado quando um registro está preparando para ser atualizado na BD.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Updated">
            <summary>
            Evento acionado quando um registro é atualizado na BD.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Deleting">
            <summary>
            Evento acionado quando um registro está para ser apagado.
            </summary>
        </member>
        <member name="E:GDA.PersistenceObjectBase`1.Deleted">
            <summary>
            Evento acionado quando um registro é apagado na BD.
            </summary>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Finalize">
            <summary>
            Destrutor
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.ImplementIObjectDataRecord">
            <summary>
            Identifica que a Model implementa a interface IObjectDataRecord.
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.TableName">
            <summary>
            Captura o nome da tabela que a classe Model representa.
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.TableNameInfo">
            <summary>
            Captura as informações do nome da tabela.
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.SystemTableName">
            <summary>
            Captura o nome da tabela que a classe Model representa no formato usado no sistema.
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.Keys">
            <summary>
            Obtem as chaves do objeto referenciado.
            </summary>
        </member>
        <member name="P:GDA.PersistenceObjectBase`1.ExistsIdentityProperty">
            <summary>
            Identifica se no mapeamento da model existe alguma propriedade do tipo identidade.
            </summary>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetMapDataReader(System.Collections.Generic.List{GDA.Mapper}@,System.Data.IDataReader)">
            <summary>
            Carrega um mapa com todos os campos contido no datareader.
            </summary>
            <param name="listAttr">Lista onde serão inserido o atributos que podem ser recuperados no resultado.</param>
            <param name="dataReader">DataReader a ser analizado.</param>
            <returns>Mapa dos campos.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.RecoverValueOfResult(System.Data.IDataRecord@,GDA.TranslatorDataInfoCollection,`0@,System.Boolean)">
            <summary>
            Recupera os valores do resultado e preenche o objeto submetido.
            </summary>
            <param name="dReader">DataReader contendo os dados.</param>
            <param name="listAttr">Lista dos atributos a serem carregados.</param>
            <param name="mapFields">Mapa do campos</param>
            <param name="objItem">Objeto que será preenchido.</param>
            <param name="mappingInProperties">Identifica se o mapeamento foi feito com base no nomes das propriedades.</param>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetCursorParameters(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Recupera os parametros para a inicialização do cursor para a query.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetCursorParameters(GDA.GDASession,GDA.GDAStoredProcedure,System.String)">
            <summary>
            Carrega os dado com o retorno da stored procedure.
            </summary>
            <param name="session">Sessão onde a procedure será executada.</param>
            <param name="procedure">Dados da stored procedure a ser executada.</param>
            <param name="selectProperties">Nomes das propriedades que serão recuperadas na consulta separados por vírgula.</param>
            <returns>Lista com os dados do retorno.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetCursorParameters(GDA.GDASession,System.String,System.String,System.Data.CommandType,GDA.InfoSortExpression,GDA.InfoPaging,GDA.GDAParameter[])">
            <summary>
            Recupera os parametros para a inicialização do cursos para a consulta.
            </summary>
            <param name="sqlQuery">Query.</param>
            <param name="selectProperties">Nomes das propriedades que serão recuperadas na consulta separados por vírgula.</param>
            <param name="sortExpression">Expressão de ordenação do comando sql.</param>
            <param name="infoPaging">Informações para paginação do resultado da query.</param>
            <param name="parameters">Parametros da query.</param>
            <returns>Lista com os dados do retorno da query.</returns>
            <exception cref="T:GDA.GDAColumnNotFoundException"></exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.CreateDataParameter(System.Data.IDbCommand@,GDA.Mapper,`0@)">
            <summary>
            Cria os parametros com os dados.
            </summary>
            <param name="cmd">Command aonde o parametro será relacionado.</param>
            <param name="mapper"></param>
            <param name="itemData"></param>
            <returns>Nome do parametro criado.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GenerateKey(GDA.Mapper,GDA.GenerateKeyArgs)">
            <summary>
            Gera uma chave para os dados informados.
            </summary>
            <param name="args">Argumentos que serão usados no processamento.</param>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Insert(`0)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Insert(`0,System.String)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Insert(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Insert(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Inseri os dados contidos no objInsert no BD.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <param name="propertiesNamesInsert">Nome das propriedades separados por virgula, que serão inseridos no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <returns>Chave inserido.</returns>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.InsertForced(`0)">
            <summary>
            <para>Inseri os dados contidos no objInsert não levando em consideração a chave identidade.</para>
            <para>Ou seja, constroi um comando sql com todos os dados do objeto que obedenção os parametros
            de direção InputOutput, Input, InputOnlyInsert.</para>
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.InsertForced(GDA.GDASession,`0)">
            <summary>
            <para>Inseri os dados contidos no objInsert não levando em consideração a chave identidade.</para>
            <para>Ou seja, constroi um comando sql com todos os dados do objeto que obedenção os parametros
            de direção InputOutput, Input, InputOnlyInsert.</para>
            </summary>
            <param name="objInsert">Objeto com os dados a serem inseridos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:GDA.GDAException"></exception>
            <exception cref="T:System.ArgumentNullException">ObjInsert it cannot be null.</exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Update(`0)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Update(`0,System.String)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Update(`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Update(GDA.GDASession,`0)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a executação do comando de atualização.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Update(GDA.GDASession,`0,System.String,GDA.DirectionPropertiesName)">
            <summary>
            Atualiza os dados contidos no objUpdate no BD.
            </summary>
            <param name="session">Sessão utilizada para a executação do comando de atualização.</param>
            <param name="objUpdate">Objeto com os dados a serem atualizados.</param>
            <param name="propertiesNamesUpdate">Nome das propriedades separados por virgula, que serão atualizadas no comando.</param>
            <param name="direction">Direção que os nomes das propriedades terão no comando. (Default: DirectionPropertiesName.Inclusion)</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
            <returns>Número de linhas afetadas.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Delete(GDA.Sql.Query)">
            <summary>
            Remove o conjunto de itens relacionados com a model com base na consulta fornecida.
            </summary>
            <param name="query">Filtro para os itens a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Delete(GDA.GDASession,GDA.Sql.Query)">
            <summary>
            Remove o conjunto de itens relacionados com a model com base na consulta fornecida.
            </summary>
            <param name="session">Sessão usada para executa o comando para apagar o registro.</param>
            <param name="query">Filtro para os itens a serem removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Delete(`0)">
            <summary>
            Remove o item do BD que o objDelete representa.
            </summary>
            <param name="objDelete">Objeto com os dados a serem Removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Delete(GDA.GDASession,`0)">
            <summary>
            Remove o item do BD que o objDelete representa.
            </summary>
            <param name="session">Sessão usada para executa o comando para apagar o registro.</param>
            <param name="objDelete">Objeto com os dados a serem Removidos.</param>
            <returns>Número de linhas afetadas.</returns>
            <exception cref="T:System.ArgumentNullException">ObjDelete it cannot be null.</exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to contruir the conditional clause.</exception>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.InsertOrUpdate(`0)">
            <summary>
            Se o registro já existir na BD os dados serão atualizados, caso não existe um novo registro é criado.
            </summary>
            <param name="objData">Objeto conténdo os dados a serem utilizados na transação.</param>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado não possuir chaves.</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <returns>0 ser o registro estiver sido alterado, senão a identidade do novo registro inserido.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.InsertOrUpdate(GDA.GDASession,`0)">
            <summary>
            Se o registro já existir na BD os dados serão atualizados, caso não existe um novo registro é criado.
            </summary>
            <param name="session">Sessão para execução do comando.</param>
            <param name="objData">Objeto conténdo os dados a serem utilizados na transação.</param>
            <exception cref="T:GDA.GDAException">Se o tipo de dados utilizado não possuir chaves.</exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:GDA.GDAConditionalClauseException">Parameters do not exist to build the conditional clause.</exception>
            <returns>0 ser o registro estiver sido alterado, senão a identidade do novo registro inserido.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetValue(GDA.GDASession,System.String,System.String,GDA.GDAParameter[])">
            <summary>
            Recupera o valor da propriedade que se encontrar no resultado da consulta.
            </summary>
            <param name="session">Sessão para execução do comando.</param>
            <param name="query">Comando da consulta que será executada.</param>
            <param name="propertyName">Nome da propriedade que será recuperada.</param>
            <param name="parameters">Parametros usados na consulta.</param>
            <returns>Valor da propriedade encontrada.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Count">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.Count(GDA.GDASession)">
            <summary>
            Recupera a quantidade de registros da tabela no banco.
            </summary>
            <param name="session">Sessão usada para executa o comando.</param>
            <returns>Quantidade de registro encontrados com base na consulta.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetNumberRegFound(GDA.GDAParameter[])">
            <summary>
            Executa o camando que retorna o um número de registros.
            </summary>
            <param name="parameters">Parametros a serem aplicados.</param>
            <returns>Número de registro encontrados com base nos parametros</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.GetNumberRegFound(GDA.GDASession,GDA.GDAParameter[])">
            <summary>
            Executa o camando que retorna o um número de registros.
            </summary>
            <param name="session">Sessão usada para executa o comando.</param>
            <param name="parameters">Parametros a serem aplicados.</param>
            <returns>Número de registro encontrados com base nos parametros</returns>
            <exception cref="T:GDA.GDAException"></exception>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.CheckExist(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,`0)">
            <summary>
            Verifica se o valor da propriedade informada existe no banco de dados.
            </summary>
            <param name="session">Sessão de conexão que será usada na verificação.</param>
            <param name="mode">Modo de validação.</param>
            <param name="propertyName">Nome da propriedade que será verificada.</param>
            <param name="propertyValue">Valor da propriedade que será verificada.</param>
            <param name="parent">Elemento que contém a propriedade</param>
            <returns>True caso existir.</returns>
        </member>
        <member name="M:GDA.PersistenceObjectBase`1.SelectToDataRecord(GDA.GDASession,GDA.Sql.IQuery)">
            <summary>
            Busca os dados relacionados com a consulta submetida.
            </summary>
            <param name="session">Sessão utilizada para a execução do comando.</param>
            <param name="query">Consulta.</param>
            <returns></returns>
        </member>
        <member name="T:GDA.PersistenceParameterType">
            <summary>
            Identifica o tipo de paramentro que a propriedade representa.
            </summary>
        </member>
        <member name="F:GDA.PersistenceParameterType.Field">
            <summary>
            Idetifica um campo normal.
            </summary>
        </member>
        <member name="F:GDA.PersistenceParameterType.Key">
            <summary>
            Identifica um campo do tipo chave prim�ria.
            </summary>
        </member>
        <member name="F:GDA.PersistenceParameterType.IdentityKey">
            <summary>
            Identifica um campo do tipo chave prim�ria identidade.
            </summary>
        </member>
        <member name="F:GDA.PersistenceParameterType.ForeignKey">
            <summary>
            Identifica um campo do tipo chave estrangeira.
            </summary>
        </member>
        <member name="T:GDA.DirectionParameter">
            <summary>
            Identifica a dire��o em que os dados devem ser tratados no GDA.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.Output">
            <summary>
            Identifica que o valor dever� apenas ser enviando para a base de dados.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.Input">
            <summary>
            Identifica que o valor dever� apenas ser recuperado da base de dados.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.InputOutput">
            <summary>
            Identifica que o valor poder� ser enviado ou recuperado da base de dados.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.OutputOnlyInsert">
            <summary>
            O parametro � inserido apenas pelo comando insert, mas ele tamb�m pode ser considerado como um Input.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.OnlyInsert">
            <summary>
            O parametro � inserido apenas pelo comando insert
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.InputOptionalOutput">
            <summary>
            O parametro busca o valor se ele existir no resultado,
            e ele se comportar da mesma forma que o parametro Output.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.InputOptional">
            <summary>
            O parametro busca o valor se ele existir no resultado.
            </summary>
        </member>
        <member name="F:GDA.DirectionParameter.InputOptionalOutputOnlyInsert">
            <summary>
            O parametro busca o valor se ele existir no resultado, e ele se comportar da mesma forma que o
            parametro Output que � inserido apenas pelo comando insert.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.Name">
            <summary>
            Nome que a propriedade representa no BD.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.ParameterType">
            <summary>
            Tipo de campo representado no banco de dados.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.Size">
            <summary>
            Tamaho maximo do campo no BD.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.Direction">
            <summary>
            Sentido em que os dados da propriedade devem ser tratados pelo GDA.
            </summary>
            <value>Valor default: InputOutput.</value>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.PropertyName">
            <summary>
            Nome da propriedade mapeada.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.GeneratorKeyName">
            <summary>
            Nome do gerador de c�digo que ser� usado.
            </summary>
        </member>
        <member name="P:GDA.PersistencePropertyAttribute.IsNotNull">
            <summary>
            Identifica que a propriedade n�o aceita valores nulos.
            </summary>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor">
            <summary>
            Construtor que define o nome do campo como sendo o nome da propriedade.
            </summary>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,System.UInt32)">
            <summary>
            Cria um attributo com base no nome e no tamanho.
            </summary>
            <param name="name"></param>
            <param name="size"></param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(GDA.PersistenceParameterType)">
            <summary>
            
            </summary>
            <param name="parameterType"></param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,GDA.DirectionParameter)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="direction">Dire��o em que os dados devem ser tratados.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,GDA.PersistenceParameterType)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="parameterType">Tipo do campo no BD.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,GDA.PersistenceParameterType,GDA.DirectionParameter)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="parameterType">Tipo do campo no BD.</param>
            <param name="direction">Dire��o em que os dados devem ser tratados.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,GDA.PersistenceParameterType,System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="parameterType">Tipo do campo no BD.</param>
            <param name="size">Tamanho que o campo.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,GDA.PersistenceParameterType,System.Int32,GDA.DirectionParameter)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="parameterType">Tipo do campo no BD.</param>
            <param name="size">Tamanho que o campo.</param>
            <param name="direction">Dire��o em que os dados devem ser tratados.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="size">Tamanho que o campo.</param>
        </member>
        <member name="M:GDA.PersistencePropertyAttribute.#ctor(System.String,System.Int32,GDA.DirectionParameter)">
            <summary>
            Construtor.
            </summary>
            <param name="name">Nome que o campo representa no BD.</param>
            <param name="size">Tamanho que o campo.</param>
            <param name="direction">Dire��o em que os dados devem ser tratados.</param>
        </member>
        <member name="T:GDA.RangeValidatorAttribute">
            <summary>
            Valida se o da propriedade está entre o intervalo de valor especificado.
            </summary>
        </member>
        <member name="P:GDA.RangeValidatorAttribute.Min">
            <summary>
            Valor minimo permitido (inclusive). 
            </summary>
        </member>
        <member name="P:GDA.RangeValidatorAttribute.Max">
            <summary>
            Valor máximo permitido (inclusive).
            </summary>
        </member>
        <member name="M:GDA.RangeValidatorAttribute.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.RangeValidatorAttribute.#ctor(System.Object,System.Object,System.String)">
            <summary>
            Construtor que permite especificar o valor minimo e máximo.
            </summary>
            <param name="max">Valor máximo do intervalo. Null para o maior valor possível.</param>
            <param name="min">Valor minimo do intervalo.</param>
            <param name="message">Mensagem de validação.</param>
        </member>
        <member name="M:GDA.RangeValidatorAttribute.#ctor(System.Object,System.Object)">
            <summary>
            Construtor que permite especificar o valor minimo e máximo.
            </summary>
            <param name="max">Valor máximo do intervalo. Null para o maior valor possível.</param>
            <param name="min">Valor minimo do intervalo.</param>
        </member>
        <member name="M:GDA.RangeValidatorAttribute.Validate(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Esse método deve ser sobreescrito para tratar a valicação da propridade.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
            <param name="propertyValue">Valor da propriedade.</param>
            <param name="parent">Objeto persistente onde a propriedade está inserida.</param>
            <returns>O método retorna true se a validação for bem sucedida.</returns>
        </member>
        <member name="T:GDA.RequiredValidatorAttribute">
            <summary>
            Validador usado para membros que precisam ter um valor assinalado.
            Esse tipo de validador é normalmente usado para membros do tipo string.
            </summary>
        </member>
        <member name="P:GDA.RequiredValidatorAttribute.AllowNull">
            <summary>
            Identifica se o validador permitirá que o membro tenha valor null.
            </summary>
        </member>
        <member name="M:GDA.RequiredValidatorAttribute.Validate(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Esse método deve ser sobreescrito para tratar a valicação da propridade.
            </summary>
            <param name="propertyName">Nome da propriedade.</param>
            <param name="propertyValue">Valor da propriedade.</param>
            <param name="parent">Objeto persistente onde a propriedade está inserida.</param>
            <returns>O método retorna true se a validação for bem sucedida.</returns>
        </member>
        <member name="T:GDA.UniqueAttribute">
            <summary>
            Valida se o valor da propriedade é unico no banco de dados.
            </summary>
        </member>
        <member name="M:GDA.UniqueAttribute.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:GDA.UniqueAttribute.Validate(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Valida a unicidade da propriedade
            </summary>
            <param name="session"></param>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="T:GDA.ValidationMapper">
            <summary>
            
            </summary>
        </member>
        <member name="F:GDA.ValidationMapper._mapperOwner">
            <summary>
            Mapeamento pai.
            </summary>
        </member>
        <member name="F:GDA.ValidationMapper._validators">
            <summary>
            Validadores.
            </summary>
        </member>
        <member name="P:GDA.ValidationMapper.MapperOwner">
            <summary>
            Mapeamento pai.
            </summary>
        </member>
        <member name="P:GDA.ValidationMapper.Validators">
            <summary>
            Validadores.
            </summary>
        </member>
        <member name="M:GDA.ValidationMapper.#ctor(GDA.Mapper,GDA.ValidatorAttribute[])">
            <summary>
            Instancia o validador do mapeamento.
            </summary>
            <param name="mapperOwner">Mapeamento pai.</param>
            <param name="validators">Validadores do membro.</param>
        </member>
        <member name="T:GDA.ValidationMessage">
            <summary>
            O ValidationMessage representa uma mensagem que será 
            exibida caso o valor não passe na validação.
            </summary>
        </member>
        <member name="P:GDA.ValidationMessage.Id">
            <summary>
            Identificador da mensagem.
            </summary>
        </member>
        <member name="P:GDA.ValidationMessage.Message">
            <summary>
            Mensagem relacionada.
            </summary>
        </member>
        <member name="P:GDA.ValidationMessage.PropertyName">
            <summary>
            Nome da propriedade que foi feita a validação.
            </summary>
        </member>
        <member name="T:GDA.ValidationResult">
            <summary>
            Representa o resultado de uma validação executada.
            </summary>
        </member>
        <member name="P:GDA.ValidationResult.Messages">
            <summary>
            Mensagens do resultado da validação.
            </summary>
        </member>
        <member name="P:GDA.ValidationResult.IsValid">
            <summary>
            Identifica se o resultado foi válido.
            </summary>
        </member>
        <member name="M:GDA.ValidationResult.#ctor(System.Collections.Generic.List{GDA.ValidationMessage},System.Boolean)">
            <summary>
            Construtor usado somente no GDA.
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:GDA.ValidationResult.#ctor">
            <summary>
            Construtor geral.
            </summary>
        </member>
        <member name="T:GDA.ValidatorAttribute">
            <summary>
            Esse validador fornece a estrutura básica para a criação
            de validadores adaptados.
            </summary>
        </member>
        <member name="P:GDA.ValidatorAttribute.Message">
            <summary>
            Mensagem de validação.
            </summary>
        </member>
        <member name="M:GDA.ValidatorAttribute.Validate(GDA.GDASession,GDA.ValidationMode,System.String,System.Object,System.Object)">
            <summary>
            Esse método deve ser sobreescrito para tratar a valicação da propridade.
            </summary>
            <param name="session">Sessão de conexão que pode ser usada na validação.</param>
            <param name="mode">Modo onde para qual está sendo feita a validação.</param>
            <param name="propertyName">Nome da propriedade.</param>
            <param name="propertyValue">Valor da propriedade.</param>
            <param name="parent">Objeto persistente onde a propriedade está inserida.</param>
            <returns>O método retorna true se a validação for bem sucedida.</returns>
        </member>
    </members>
</doc>
