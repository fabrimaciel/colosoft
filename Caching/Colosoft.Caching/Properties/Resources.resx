<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentException_EntityFullNameIsEmpty" xml:space="preserve">
    <value>Entity fullname is empty.</value>
  </data>
  <data name="ArgumentOutOfRangeException_ValuesOutOfDescriptorRange" xml:space="preserve">
    <value>CacheJoinRowDescriptor of {0} entitys can not be created from object array of {1} values.</value>
  </data>
  <data name="CachePersistenceExecuter_ExecuteQueryInCacheError" xml:space="preserve">
    <value>An error ocorred where execute query in cache.
Details: {0}</value>
  </data>
  <data name="CachePersistenceExecuter_GetPropertyTypeFromPropertyMetadataError" xml:space="preserve">
    <value>An error ocurred when get property type '{0}' from property '{1}' of entity '{2}'.</value>
  </data>
  <data name="CachePersistenceExecuter_PropertyMetadataNotFound" xml:space="preserve">
    <value>PropertyMetadata '{0}' not found for entity of entity '{1}'.</value>
  </data>
  <data name="CachePersistenceExecuter_TypeMetadataNotFound" xml:space="preserve">
    <value>TypeMetadata not found for entity '{0}'.</value>
  </data>
  <data name="CachePersistenceExecuter_UnsupportedEntity" xml:space="preserve">
    <value>Entity of type '{0}' unsupported for storage in cache.</value>
  </data>
  <data name="ConfigurationException_CannotFindTypeOfCache" xml:space="preserve">
    <value>Cannot find the type of cache, invalid configuration for cache class '{0}'</value>
  </data>
  <data name="ConfigurationException_ICacheLoaderNotImplemented" xml:space="preserve">
    <value>The class specified does not implement ICacheLoader</value>
  </data>
  <data name="ConfigurationException_InvalidCacheStorageClass" xml:space="preserve">
    <value>Invalid cache store class: '{0}'</value>
  </data>
  <data name="ConfigurationException_MissingAssemblyName" xml:space="preserve">
    <value>Missing assembly name</value>
  </data>
  <data name="ConfigurationException_MissingAssemblyNameForReadThru" xml:space="preserve">
    <value>Missing assembly name for read-thru option</value>
  </data>
  <data name="ConfigurationException_MissingAttribute" xml:space="preserve">
    <value>Missing configuration attribute '{0}'</value>
  </data>
  <data name="ConfigurationException_MissingCacheStorageClass" xml:space="preserve">
    <value>Missing cache store class</value>
  </data>
  <data name="ConfigurationException_MissingClassName" xml:space="preserve">
    <value>Missing class name</value>
  </data>
  <data name="ConfigurationException_MissingClassNameForReadThru" xml:space="preserve">
    <value>Missing class name for read-thru option</value>
  </data>
  <data name="ConfigurationException_MissingOption" xml:space="preserve">
    <value>Missing configuration option '{0}'</value>
  </data>
  <data name="ConfigurationException_MissingSection" xml:space="preserve">
    <value>Missing configuration section '{0}'</value>
  </data>
  <data name="ConfigurationException_NotFoundClassCache" xml:space="preserve">
    <value>Cannot find cache class '{0}'</value>
  </data>
  <data name="ConfigurationException_PropsConfigReader_CloseParanthesisMisplaced" xml:space="preserve">
    <value>Invalid property string, ) misplaced</value>
  </data>
  <data name="ConfigurationException_PropsConfigReader_CloseParenthesisUnexpected" xml:space="preserve">
    <value>Invalid property string, ) unexpected</value>
  </data>
  <data name="ConfigurationException_PropsConfigReader_InvalidEOF" xml:space="preserve">
    <value>Invalid EOF</value>
  </data>
  <data name="ConfigurationException_PropsConfigReader_KeyFollowingBadToken" xml:space="preserve">
    <value>Invalid property string, key following a bad token</value>
  </data>
  <data name="ConfigurationException_PropsConfigReader_ValueFollowingBadToken" xml:space="preserve">
    <value>Invalid property string, value following a bad token</value>
  </data>
  <data name="Exception_AggregationLimitReached" xml:space="preserve">
    <value>Limit of aggregation is {0} for this AggregateSet</value>
  </data>
  <data name="Exception_AnErrorOccuredWhileRemovingItems" xml:space="preserve">
    <value>An error occured while removing items</value>
  </data>
  <data name="Exception_CouldNotLoadAssembly" xml:space="preserve">
    <value>Could not load assembly "{0}". {1}</value>
  </data>
  <data name="Exception_DuplicateIndexName" xml:space="preserve">
    <value>Key in named tags conflicts with the indexed attribute name of the specified object.</value>
  </data>
  <data name="Exception_NotFoundIndexForAttributeException" xml:space="preserve">
    <value>Not found index  for attribute '{0}' on type '{1}'</value>
  </data>
  <data name="Exception_PropertyNotMappedForType" xml:space="preserve">
    <value>Property '{0}' not mapped for type '{1}'.</value>
  </data>
  <data name="Exception_UnableToInstantiate" xml:space="preserve">
    <value>Unable to instantiate {0}</value>
  </data>
  <data name="InvalidOperationException_NotFoundEntityFromAlias" xml:space="preserve">
    <value>Not found entity from alias '{0}'.</value>
  </data>
  <data name="InvalidOperationException_NotFoundPropertiesForTypeMetadata" xml:space="preserve">
    <value>Not found properties for type metadata '{0}'.</value>
  </data>
  <data name="InvalidOperationException_TypeMetadataNotFoundByFullName" xml:space="preserve">
    <value>Type metadata not ofund by fullname '{0}'.</value>
  </data>
  <data name="NotSupportedException_ConditionalTermTypeNotSupported" xml:space="preserve">
    <value>Type {0} is not a supported as a ConditionalTerm.</value>
  </data>
  <data name="NotSupportedException_ConstantTypeNotRecognized" xml:space="preserve">
    <value>Constant {0} has invalid format.</value>
  </data>
  <data name="NotSupportedException_GetPropertiesInCacheNotSupported" xml:space="preserve">
    <value>Cache don't support getting the persistence properties.</value>
  </data>
  <data name="NotSupportedException_InvalidSortEntryFormat" xml:space="preserve">
    <value>Cache don't support complex sort expressions</value>
  </data>
  <data name="NotSupportedException_OperatorNotSupported" xml:space="preserve">
    <value>Operator {0} not supported.</value>
  </data>
  <data name="NotSupportedException_TableIdOnlySupportedInNonCompositePrimaryKeyTable" xml:space="preserve">
    <value>The type '{0}' has a composite primary key and does not support TableId.</value>
  </data>
  <data name="NotSupportedException_TypeOfConditionalTermNotSupported" xml:space="preserve">
    <value>The type '{0}' of ConditionalTerm is not supported. </value>
  </data>
  <data name="NotSupportedException_TypeOfConditionalTermNotSupported1" xml:space="preserve">
    <value>The type '{0}' of ConditionalTerm is not supported. </value>
  </data>
  <data name="ObjectDisposableException_MethodsWereCalledAfterClose" xml:space="preserve">
    <value>Methods were called after the stream was closed.</value>
  </data>
  <data name="OperationFailedException_IReadThruProviderLoadFromSourceFailed" xml:space="preserve">
    <value>IReadThruProvider.LoadFromSource failed</value>
  </data>
  <data name="ParserException_IndexIsNotDefined" xml:space="preserve">
    <value>Index is not defined for '{0}'</value>
  </data>
  <data name="ParserException_StartIsNotSupported" xml:space="preserve">
    <value>Incorrect query format. '*' is not supported.</value>
  </data>
  <data name="StreamAlreadyLockedException_StreamIsAlreadyLocked" xml:space="preserve">
    <value>Stream is already locked</value>
  </data>
  <data name="StreamInvalidLockException_InvalidLockHandle" xml:space="preserve">
    <value>Invalid lock handle</value>
  </data>
  <data name="StreamNotFoundException_StreamNotFound" xml:space="preserve">
    <value>Stream not found in the cache.</value>
  </data>
</root>