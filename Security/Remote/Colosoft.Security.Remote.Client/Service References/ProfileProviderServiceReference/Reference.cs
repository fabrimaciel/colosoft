/* 
 * Colosoft Framework - generic framework to assist in development on the .NET platform
 * Copyright (C) 2013  <http://www.colosoft.com.br/framework> - support@colosoft.com.br
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Colosoft.Security.Remote.Client.ProfileProviderServiceReference
{
    using System.Runtime.Serialization;
    using System;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ProfileProviderServiceReference.IProfileProviderService")]
    internal interface IProfileProviderService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/DeleteProfiles", ReplyAction = "http://tempuri.org/IProfileProviderService/DeleteProfilesResponse")]
        int DeleteProfiles(string[] usernames);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/DeleteProfilesByProfileInfo", ReplyAction = "http://tempuri.org/IProfileProviderService/DeleteProfilesByProfileInfoResponse")]
        int DeleteProfilesByProfileInfo(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] profiles);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/FindProfilesByUserName", ReplyAction = "http://tempuri.org/IProfileProviderService/FindProfilesByUserNameResponse")]
        Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] FindProfilesByUserName(string usernameToMatch);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/GetUserProfiles", ReplyAction = "http://tempuri.org/IProfileProviderService/GetUserProfilesResponse")]
        Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] GetUserProfiles(string userName);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/GetProfile", ReplyAction = "http://tempuri.org/IProfileProviderService/GetProfileResponse")]
        Colosoft.Security.Remote.Client.ProfileProviderServiceReference.Profile GetProfile(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo info);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/GetSource", ReplyAction = "http://tempuri.org/IProfileProviderService/GetSourceResponse")]
        Colosoft.Security.Remote.Client.ProfileProviderServiceReference.AuthenticationSource GetSource(int sourceId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/SetProfilePropertyValue", ReplyAction = "http://tempuri.org/IProfileProviderService/SetProfilePropertyValueResponse")]
        void SetProfilePropertyValue(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo info, Colosoft.Security.Profile.ProfilePropertyDefinition property, string propertyValue);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IProfileProviderService/GetProfilePropertyDefinitions", ReplyAction = "http://tempuri.org/IProfileProviderService/GetProfilePropertyDefinitionsResponse")]
        Colosoft.Security.Profile.ProfilePropertyDefinition[] GetProfilePropertyDefinitions();
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IProfileProviderServiceChannel : Colosoft.Security.Remote.Client.ProfileProviderServiceReference.IProfileProviderService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class ProfileProviderServiceClient : System.ServiceModel.ClientBase<Colosoft.Security.Remote.Client.ProfileProviderServiceReference.IProfileProviderService>, Colosoft.Security.Remote.Client.ProfileProviderServiceReference.IProfileProviderService
    {

        public ProfileProviderServiceClient()
        {
        }

        public ProfileProviderServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public ProfileProviderServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProfileProviderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ProfileProviderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public int DeleteProfiles(string[] usernames)
        {
            return base.Channel.DeleteProfiles(usernames);
        }

        public int DeleteProfilesByProfileInfo(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] profiles)
        {
            return base.Channel.DeleteProfilesByProfileInfo(profiles);
        }

        public Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] FindProfilesByUserName(string usernameToMatch)
        {
            return base.Channel.FindProfilesByUserName(usernameToMatch);
        }

        public Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo[] GetUserProfiles(string userName)
        {
            return base.Channel.GetUserProfiles(userName);
        }

        public Colosoft.Security.Remote.Client.ProfileProviderServiceReference.Profile GetProfile(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo info)
        {
            return base.Channel.GetProfile(info);
        }

        public Colosoft.Security.Remote.Client.ProfileProviderServiceReference.AuthenticationSource GetSource(int sourceId)
        {
            return base.Channel.GetSource(sourceId);
        }

        public void SetProfilePropertyValue(Colosoft.Security.Remote.Client.ProfileProviderServiceReference.ProfileInfo info, Colosoft.Security.Profile.ProfilePropertyDefinition property, string propertyValue)
        {
            base.Channel.SetProfilePropertyValue(info, property, propertyValue);
        }

        public Colosoft.Security.Profile.ProfilePropertyDefinition[] GetProfilePropertyDefinitions()
        {
            return base.Channel.GetProfilePropertyDefinitions();
        }
    }
}
